PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Semicolon=>9,
     :Modifier=>10,
     :Public=>11,
     :Protected=>12,
     :Static=>13,
     :Abstract=>14,
     :Final=>15,
     :Native=>16},
   3=>{:QualifiedIdentifier=>17, :Identifier=>18},
   4=>{:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5},
   5=>{:QualifiedImportIdentifier=>20, :Identifier=>21},
   8=>
    {:ClassDeclaration=>22,
     :InterfaceDeclaration=>23,
     :Class=>24,
     :Interface=>25},
   10=>
    {:Modifiers=>26,
     :Modifier=>10,
     :Public=>11,
     :Protected=>12,
     :Static=>13,
     :Abstract=>14,
     :Final=>15,
     :Native=>16},
   17=>{:Semicolon=>27},
   18=>{:Dot=>28},
   20=>{:Semicolon=>29},
   21=>{:Dot=>30},
   24=>{:Identifier=>31},
   25=>{:Identifier=>32},
   27=>{:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5},
   28=>{:QualifiedIdentifier=>34, :Identifier=>18},
   30=>{:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21},
   31=>{:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40},
   32=>{:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43},
   33=>
    {:TypeDeclaration=>44,
     :Modifiers=>8,
     :Semicolon=>9,
     :Modifier=>10,
     :Public=>11,
     :Protected=>12,
     :Static=>13,
     :Abstract=>14,
     :Final=>15,
     :Native=>16},
   38=>{:QualifiedIdentifier=>45, :Identifier=>46},
   39=>{:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49},
   40=>
    {:ClassBodyDeclarations=>50,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   42=>{:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49},
   43=>
    {:InterfaceBodyDeclarations=>62,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   45=>{:ClassBody=>66, :Implements=>67, :OpenBrace=>40},
   46=>{:Dot=>68},
   47=>{:ClassBody=>69, :OpenBrace=>40},
   48=>{:Comma=>70},
   49=>{:Dot=>71},
   50=>{:CloseBrace=>72},
   51=>
    {:ClassBodyDeclarations=>73,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   53=>
    {:Type=>74,
     :Void=>75,
     :Identifier=>76,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   54=>
    {:Modifiers=>85,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   61=>{:InterfaceBody=>86, :OpenBrace=>43},
   62=>{:CloseBrace=>87},
   63=>
    {:InterfaceBodyDeclarations=>88,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   65=>
    {:InterfaceMemberDecl=>89,
     :Type=>90,
     :Void=>91,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   67=>{:TypeList=>93, :QualifiedIdentifier=>48, :Identifier=>49},
   68=>{:QualifiedIdentifier=>94, :Identifier=>46},
   70=>{:TypeList=>95, :QualifiedIdentifier=>48, :Identifier=>49},
   71=>{:QualifiedIdentifier=>96, :Identifier=>49},
   74=>{:Identifier=>97},
   75=>{:Identifier=>98},
   76=>
    {:ConstructorDeclaratorRest=>99,
     :Dot=>100,
     :FormalParameters=>101,
     :OpenParen=>102},
   78=>{:OpenStaple=>103},
   79=>{:OpenStaple=>104},
   90=>{:InterfaceMemberDeclRest=>105, :Identifier=>106},
   91=>{:InterfaceMemberDeclRest=>107, :Identifier=>106},
   92=>{:Dot=>100},
   93=>{:ClassBody=>108, :OpenBrace=>40},
   97=>
    {:Semicolon=>109,
     :Equals=>110,
     :MethodDeclaratorRest=>111,
     :FormalParameters=>112,
     :OpenParen=>113},
   98=>{:MethodDeclaratorRest=>114, :FormalParameters=>112, :OpenParen=>113},
   100=>{:QualifiedIdentifier=>115, :Identifier=>92},
   101=>{:MethodBody=>116, :Block=>117, :OpenBrace=>118},
   102=>
    {:CloseParen=>119,
     :FormalParameterList=>120,
     :FormalParameter=>121,
     :Type=>122,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   103=>{:CloseStaple=>123},
   104=>{:CloseStaple=>124},
   106=>{:FormalParameters=>125, :OpenParen=>126},
   110=>
    {:Expression=>127,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   112=>{:MethodBody=>147, :Semicolon=>148, :Block=>117, :OpenBrace=>118},
   113=>
    {:CloseParen=>149,
     :FormalParameterList=>150,
     :FormalParameter=>121,
     :Type=>122,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   118=>
    {:BlockStatements=>151,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>77,
     :QualifiedIdentifier=>163,
     :BasicType=>79,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Identifier=>165,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145},
   120=>{:CloseParen=>166},
   121=>{:Comma=>167},
   122=>{:Identifier=>168},
   125=>{:Semicolon=>169},
   126=>
    {:CloseParen=>170,
     :FormalParameterList=>171,
     :FormalParameter=>121,
     :Type=>122,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   127=>{:Semicolon=>172},
   129=>{:Equals=>173},
   130=>
    {:MoreTerms=>174,
     :Infixop=>175,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   131=>
    {:Term=>192,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   135=>
    {:Expression=>193,
     :BasicType=>194,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   136=>{:Selectors=>217, :Selector=>218, :Dot=>219, :OpenStaple=>220},
   139=>
    {:IdentifierSuffix=>221,
     :OpenStaple=>222,
     :Arguments=>223,
     :OpenParen=>224},
   140=>
    {:Creator=>225,
     :ArrayCreator=>226,
     :QualifiedIdentifier=>227,
     :BasicType=>228,
     :Identifier=>146,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   146=>{:Dot=>234},
   150=>{:CloseParen=>235},
   151=>{:CloseBrace=>236},
   152=>
    {:BlockStatements=>237,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>77,
     :QualifiedIdentifier=>163,
     :BasicType=>79,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Identifier=>165,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145},
   155=>{:VariableDeclarator=>238, :Identifier=>239},
   157=>{:OpenParen=>240},
   158=>{:OpenParen=>241},
   159=>{:OpenParen=>242},
   160=>
    {:Semicolon=>243,
     :Expression=>244,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   161=>{:Semicolon=>245},
   163=>
    {:OpenStaple=>246,
     :IdentifierSuffix=>221,
     :Arguments=>223,
     :OpenParen=>224},
   164=>
    {:BlockStatements=>247,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>77,
     :QualifiedIdentifier=>163,
     :BasicType=>79,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Identifier=>165,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145},
   165=>{:Dot=>248},
   167=>
    {:FormalParameterList=>249,
     :FormalParameter=>121,
     :Type=>122,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   171=>{:CloseParen=>250},
   173=>
    {:SubExpression=>251,
     :Term=>252,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   175=>
    {:Term=>267,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   193=>{:OpenStaple=>268, :CloseParen=>269},
   194=>{:OpenStaple=>270, :CloseParen=>271},
   196=>{:Equals=>272},
   202=>
    {:MoreTerms=>273,
     :Infixop=>274,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   203=>
    {:Term=>275,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   205=>
    {:Expression=>276,
     :BasicType=>277,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   206=>{:Selectors=>278, :Selector=>279, :Dot=>280, :OpenStaple=>281},
   209=>
    {:IdentifierSuffix=>282,
     :OpenStaple=>283,
     :Arguments=>284,
     :OpenParen=>285},
   210=>
    {:Creator=>286,
     :ArrayCreator=>287,
     :QualifiedIdentifier=>288,
     :BasicType=>289,
     :Identifier=>216,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   216=>{:Dot=>290},
   218=>{:Selectors=>291, :Selector=>218, :Dot=>219, :OpenStaple=>220},
   219=>{:Identifier=>292},
   220=>
    {:Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   222=>
    {:Expression=>311,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   224=>
    {:Expressions=>312,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   227=>{:Arguments=>331, :OpenStaple=>332, :OpenParen=>224},
   228=>{:OpenStaple=>333},
   234=>{:QualifiedIdentifier=>334, :Identifier=>146},
   238=>{:Semicolon=>335},
   239=>{:Equals=>336},
   240=>
    {:Expression=>337,
     :Assignment=>338,
     :SubExpression=>339,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   241=>
    {:ForInit=>345,
     :Expression=>346,
     :Type=>347,
     :Assignment=>128,
     :SubExpression=>129,
     :ArrayType=>77,
     :QualifiedIdentifier=>163,
     :BasicType=>79,
     :Term=>130,
     :Identifier=>165,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145},
   242=>
    {:Expression=>348,
     :Assignment=>338,
     :SubExpression=>339,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   244=>{:Semicolon=>349},
   246=>
    {:CloseStaple=>123,
     :Expression=>311,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   247=>{:CloseBrace=>350},
   248=>{:QualifiedIdentifier=>351, :Identifier=>165},
   252=>
    {:MoreTerms=>352,
     :Infixop=>353,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   253=>
    {:Term=>354,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   255=>
    {:Expression=>355,
     :BasicType=>356,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   256=>{:Selectors=>357, :Selector=>358, :Dot=>359, :OpenStaple=>360},
   259=>
    {:IdentifierSuffix=>361,
     :OpenStaple=>362,
     :Arguments=>363,
     :OpenParen=>364},
   260=>
    {:Creator=>365,
     :ArrayCreator=>366,
     :QualifiedIdentifier=>367,
     :BasicType=>368,
     :Identifier=>266,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   266=>{:Dot=>369},
   267=>
    {:MoreTerms=>370,
     :Infixop=>175,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   268=>{:CloseStaple=>371},
   269=>
    {:Term=>372,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   270=>{:CloseStaple=>373},
   271=>
    {:Term=>374,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   272=>
    {:SubExpression=>375,
     :Term=>376,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   274=>
    {:Term=>391,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   276=>{:OpenStaple=>392, :CloseParen=>393},
   277=>{:OpenStaple=>394, :CloseParen=>395},
   279=>{:Selectors=>396, :Selector=>279, :Dot=>280, :OpenStaple=>281},
   280=>{:Identifier=>397},
   281=>
    {:Expression=>398,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   283=>
    {:Expression=>399,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   285=>
    {:Expressions=>400,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   288=>{:Arguments=>401, :OpenStaple=>402, :OpenParen=>285},
   289=>{:OpenStaple=>403},
   290=>{:QualifiedIdentifier=>404, :Identifier=>216},
   292=>{:Arguments=>405, :OpenParen=>224},
   293=>{:CloseStaple=>406},
   295=>{:Equals=>407},
   296=>
    {:MoreTerms=>408,
     :Infixop=>409,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   297=>
    {:Term=>410,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   299=>
    {:Expression=>411,
     :BasicType=>412,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   300=>{:Selectors=>413, :Selector=>414, :Dot=>415, :OpenStaple=>416},
   303=>
    {:IdentifierSuffix=>417,
     :OpenStaple=>418,
     :Arguments=>419,
     :OpenParen=>420},
   304=>
    {:Creator=>421,
     :ArrayCreator=>422,
     :QualifiedIdentifier=>423,
     :BasicType=>424,
     :Identifier=>310,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   310=>{:Dot=>425},
   311=>{:CloseStaple=>426},
   312=>{:CloseParen=>427},
   313=>{:MoreExpressions=>428, :Comma=>429},
   315=>{:Equals=>430},
   316=>
    {:MoreTerms=>431,
     :Infixop=>432,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   317=>
    {:Term=>433,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   319=>
    {:Expression=>434,
     :BasicType=>435,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   320=>{:Selectors=>436, :Selector=>437, :Dot=>438, :OpenStaple=>439},
   323=>
    {:IdentifierSuffix=>440,
     :OpenStaple=>441,
     :Arguments=>442,
     :OpenParen=>443},
   324=>
    {:Creator=>444,
     :ArrayCreator=>445,
     :QualifiedIdentifier=>446,
     :BasicType=>447,
     :Identifier=>330,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   330=>{:Dot=>448},
   332=>
    {:Expression=>449,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   333=>
    {:Expression=>450,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   336=>
    {:Expression=>451,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   337=>{:CloseParen=>452},
   339=>{:Equals=>453},
   340=>
    {:MoreTerms=>454,
     :Infixop=>455,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   341=>
    {:Term=>456,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   343=>
    {:Expression=>457,
     :BasicType=>458,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   344=>{:Selectors=>459, :Selector=>460, :Dot=>280, :OpenStaple=>281},
   345=>{:Semicolon=>461},
   347=>{:VariableDeclarator=>462, :Identifier=>239},
   348=>{:CloseParen=>463},
   353=>
    {:Term=>464,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   355=>{:OpenStaple=>465, :CloseParen=>466},
   356=>{:OpenStaple=>467, :CloseParen=>468},
   358=>{:Selectors=>469, :Selector=>358, :Dot=>359, :OpenStaple=>360},
   359=>{:Identifier=>470},
   360=>
    {:Expression=>471,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   362=>
    {:Expression=>472,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   364=>
    {:Expressions=>473,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   367=>{:Arguments=>474, :OpenStaple=>475, :OpenParen=>364},
   368=>{:OpenStaple=>476},
   369=>{:QualifiedIdentifier=>477, :Identifier=>266},
   371=>{:CloseParen=>478},
   373=>{:CloseParen=>479},
   376=>
    {:MoreTerms=>480,
     :Infixop=>481,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   377=>
    {:Term=>482,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   379=>
    {:Expression=>483,
     :BasicType=>484,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   380=>{:Selectors=>485, :Selector=>486, :Dot=>487, :OpenStaple=>488},
   383=>
    {:IdentifierSuffix=>489,
     :OpenStaple=>490,
     :Arguments=>491,
     :OpenParen=>492},
   384=>
    {:Creator=>493,
     :ArrayCreator=>494,
     :QualifiedIdentifier=>495,
     :BasicType=>496,
     :Identifier=>390,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   390=>{:Dot=>497},
   391=>
    {:MoreTerms=>498,
     :Infixop=>274,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   392=>{:CloseStaple=>499},
   393=>
    {:Term=>500,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   394=>{:CloseStaple=>501},
   395=>
    {:Term=>502,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   397=>{:Arguments=>503, :OpenParen=>285},
   398=>{:CloseStaple=>504},
   399=>{:CloseStaple=>505},
   400=>{:CloseParen=>506},
   402=>
    {:Expression=>507,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   403=>
    {:Expression=>508,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   407=>
    {:SubExpression=>509,
     :Term=>510,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   409=>
    {:Term=>525,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   411=>{:OpenStaple=>526, :CloseParen=>527},
   412=>{:OpenStaple=>528, :CloseParen=>529},
   414=>{:Selectors=>530, :Selector=>414, :Dot=>415, :OpenStaple=>416},
   415=>{:Identifier=>531},
   416=>
    {:Expression=>532,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   418=>
    {:Expression=>533,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   420=>
    {:Expressions=>534,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   423=>{:Arguments=>535, :OpenStaple=>536, :OpenParen=>420},
   424=>{:OpenStaple=>537},
   425=>{:QualifiedIdentifier=>538, :Identifier=>310},
   429=>
    {:Expression=>539,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   430=>
    {:SubExpression=>540,
     :Term=>541,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   432=>
    {:Term=>556,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   434=>{:OpenStaple=>557, :CloseParen=>558},
   435=>{:OpenStaple=>559, :CloseParen=>560},
   437=>{:Selectors=>561, :Selector=>437, :Dot=>438, :OpenStaple=>439},
   438=>{:Identifier=>562},
   439=>
    {:Expression=>563,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   441=>
    {:Expression=>564,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   443=>
    {:Expressions=>565,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   446=>{:Arguments=>566, :OpenStaple=>567, :OpenParen=>443},
   447=>{:OpenStaple=>568},
   448=>{:QualifiedIdentifier=>569, :Identifier=>330},
   449=>{:CloseStaple=>570},
   450=>{:CloseStaple=>571},
   452=>
    {:Statement=>572,
     :Block=>573,
     :If=>574,
     :For=>575,
     :While=>576,
     :Return=>577,
     :Expression=>578,
     :Semicolon=>579,
     :OpenBrace=>580,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   453=>
    {:SubExpression=>581,
     :Term=>582,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   455=>
    {:Term=>587,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   457=>{:OpenStaple=>588, :CloseParen=>589},
   458=>{:OpenStaple=>590, :CloseParen=>591},
   460=>{:Selectors=>592, :Selector=>460, :Dot=>280, :OpenStaple=>281},
   461=>
    {:Semicolon=>593,
     :Expression=>594,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   463=>
    {:Statement=>595,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   464=>
    {:MoreTerms=>596,
     :Infixop=>353,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   465=>{:CloseStaple=>597},
   466=>
    {:Term=>598,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   467=>{:CloseStaple=>599},
   468=>
    {:Term=>600,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   470=>{:Arguments=>601, :OpenParen=>364},
   471=>{:CloseStaple=>602},
   472=>{:CloseStaple=>603},
   473=>{:CloseParen=>604},
   475=>
    {:Expression=>605,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   476=>
    {:Expression=>606,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   478=>
    {:Term=>607,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   479=>
    {:Term=>608,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   481=>
    {:Term=>609,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   483=>{:OpenStaple=>610, :CloseParen=>611},
   484=>{:OpenStaple=>612, :CloseParen=>613},
   486=>{:Selectors=>614, :Selector=>486, :Dot=>487, :OpenStaple=>488},
   487=>{:Identifier=>615},
   488=>
    {:Expression=>616,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   490=>
    {:Expression=>617,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   492=>
    {:Expressions=>618,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   495=>{:Arguments=>619, :OpenStaple=>620, :OpenParen=>492},
   496=>{:OpenStaple=>621},
   497=>{:QualifiedIdentifier=>622, :Identifier=>390},
   499=>{:CloseParen=>623},
   501=>{:CloseParen=>624},
   507=>{:CloseStaple=>625},
   508=>{:CloseStaple=>626},
   510=>
    {:MoreTerms=>627,
     :Infixop=>628,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   511=>
    {:Term=>629,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   513=>
    {:Expression=>630,
     :BasicType=>631,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   514=>{:Selectors=>632, :Selector=>633, :Dot=>634, :OpenStaple=>635},
   517=>
    {:IdentifierSuffix=>636,
     :OpenStaple=>637,
     :Arguments=>638,
     :OpenParen=>639},
   518=>
    {:Creator=>640,
     :ArrayCreator=>641,
     :QualifiedIdentifier=>642,
     :BasicType=>643,
     :Identifier=>524,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   524=>{:Dot=>644},
   525=>
    {:MoreTerms=>645,
     :Infixop=>409,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   526=>{:CloseStaple=>646},
   527=>
    {:Term=>647,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   528=>{:CloseStaple=>648},
   529=>
    {:Term=>649,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   531=>{:Arguments=>650, :OpenParen=>420},
   532=>{:CloseStaple=>651},
   533=>{:CloseStaple=>652},
   534=>{:CloseParen=>653},
   536=>
    {:Expression=>654,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   537=>
    {:Expression=>655,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   539=>{:MoreExpressions=>656, :Comma=>429},
   541=>
    {:MoreTerms=>657,
     :Infixop=>658,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   542=>
    {:Term=>659,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   544=>
    {:Expression=>660,
     :BasicType=>661,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   545=>{:Selectors=>662, :Selector=>663, :Dot=>664, :OpenStaple=>665},
   548=>
    {:IdentifierSuffix=>666,
     :OpenStaple=>667,
     :Arguments=>668,
     :OpenParen=>669},
   549=>
    {:Creator=>670,
     :ArrayCreator=>671,
     :QualifiedIdentifier=>672,
     :BasicType=>673,
     :Identifier=>555,
     :Byte=>229,
     :Char=>230,
     :Int=>231,
     :Boolean=>232,
     :Short=>233},
   555=>{:Dot=>674},
   556=>
    {:MoreTerms=>675,
     :Infixop=>432,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   557=>{:CloseStaple=>676},
   558=>
    {:Term=>677,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   559=>{:CloseStaple=>678},
   560=>
    {:Term=>679,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   562=>{:Arguments=>680, :OpenParen=>443},
   563=>{:CloseStaple=>681},
   564=>{:CloseStaple=>682},
   565=>{:CloseParen=>683},
   567=>
    {:Expression=>684,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   568=>
    {:Expression=>685,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   572=>{:Else=>686},
   574=>{:OpenParen=>687},
   575=>{:OpenParen=>688},
   576=>{:OpenParen=>689},
   577=>
    {:Semicolon=>690,
     :Expression=>691,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   578=>{:Semicolon=>692},
   580=>
    {:BlockStatements=>693,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>77,
     :QualifiedIdentifier=>163,
     :BasicType=>79,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Identifier=>165,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145},
   582=>
    {:MoreTerms=>694,
     :Infixop=>695,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   583=>
    {:Term=>696,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   585=>
    {:Expression=>697,
     :BasicType=>698,
     :Assignment=>195,
     :SubExpression=>196,
     :Byte=>197,
     :Char=>198,
     :Int=>199,
     :Boolean=>200,
     :Short=>201,
     :Term=>202,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   586=>{:Selectors=>699, :Selector=>700, :Dot=>487, :OpenStaple=>488},
   587=>
    {:MoreTerms=>701,
     :Infixop=>455,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   588=>{:CloseStaple=>702},
   589=>
    {:Term=>703,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   590=>{:CloseStaple=>704},
   591=>
    {:Term=>705,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   593=>
    {:ForUpdate=>706,
     :Expression=>707,
     :VariableDeclarator=>708,
     :Assignment=>338,
     :SubExpression=>339,
     :Identifier=>709,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215},
   594=>{:Semicolon=>710},
   597=>{:CloseParen=>711},
   599=>{:CloseParen=>712},
   605=>{:CloseStaple=>713},
   606=>{:CloseStaple=>714},
   609=>
    {:MoreTerms=>715,
     :Infixop=>481,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   610=>{:CloseStaple=>716},
   611=>
    {:Term=>717,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   612=>{:CloseStaple=>718},
   613=>
    {:Term=>719,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   615=>{:Arguments=>720, :OpenParen=>492},
   616=>{:CloseStaple=>721},
   617=>{:CloseStaple=>722},
   618=>{:CloseParen=>723},
   620=>
    {:Expression=>724,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   621=>
    {:Expression=>725,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   623=>
    {:Term=>726,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   624=>
    {:Term=>727,
     :TermModifier=>203,
     :UnmodifiedTerm=>204,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>205,
     :Primary=>206,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   628=>
    {:Term=>728,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   630=>{:OpenStaple=>729, :CloseParen=>730},
   631=>{:OpenStaple=>731, :CloseParen=>732},
   633=>{:Selectors=>733, :Selector=>633, :Dot=>634, :OpenStaple=>635},
   634=>{:Identifier=>734},
   635=>
    {:Expression=>735,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   637=>
    {:Expression=>736,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   639=>
    {:Expressions=>737,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   642=>{:Arguments=>738, :OpenStaple=>739, :OpenParen=>639},
   643=>{:OpenStaple=>740},
   644=>{:QualifiedIdentifier=>741, :Identifier=>524},
   646=>{:CloseParen=>742},
   648=>{:CloseParen=>743},
   654=>{:CloseStaple=>744},
   655=>{:CloseStaple=>745},
   658=>
    {:Term=>746,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   660=>{:OpenStaple=>747, :CloseParen=>748},
   661=>{:OpenStaple=>749, :CloseParen=>750},
   663=>{:Selectors=>751, :Selector=>663, :Dot=>664, :OpenStaple=>665},
   664=>{:Identifier=>752},
   665=>
    {:Expression=>753,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   667=>
    {:Expression=>754,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   669=>
    {:Expressions=>755,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   672=>{:Arguments=>756, :OpenStaple=>757, :OpenParen=>669},
   673=>{:OpenStaple=>758},
   674=>{:QualifiedIdentifier=>759, :Identifier=>555},
   676=>{:CloseParen=>760},
   678=>{:CloseParen=>761},
   684=>{:CloseStaple=>762},
   685=>{:CloseStaple=>763},
   686=>
    {:Statement=>764,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   687=>
    {:Expression=>765,
     :Assignment=>338,
     :SubExpression=>339,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   688=>
    {:ForInit=>766,
     :Expression=>346,
     :Type=>347,
     :Assignment=>128,
     :SubExpression=>129,
     :ArrayType=>77,
     :QualifiedIdentifier=>163,
     :BasicType=>79,
     :Term=>130,
     :Identifier=>165,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145},
   689=>
    {:Expression=>767,
     :Assignment=>338,
     :SubExpression=>339,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   691=>{:Semicolon=>768},
   693=>{:CloseBrace=>769},
   695=>
    {:Term=>770,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   697=>{:OpenStaple=>771, :CloseParen=>772},
   698=>{:OpenStaple=>773, :CloseParen=>774},
   700=>{:Selectors=>775, :Selector=>700, :Dot=>487, :OpenStaple=>488},
   702=>{:CloseParen=>776},
   704=>{:CloseParen=>777},
   706=>{:CloseParen=>778},
   709=>{:Equals=>779, :Dot=>290},
   710=>
    {:ForUpdate=>780,
     :Expression=>707,
     :VariableDeclarator=>708,
     :Assignment=>338,
     :SubExpression=>339,
     :Identifier=>709,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215},
   711=>
    {:Term=>781,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   712=>
    {:Term=>782,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   716=>{:CloseParen=>783},
   718=>{:CloseParen=>784},
   724=>{:CloseStaple=>785},
   725=>{:CloseStaple=>786},
   728=>
    {:MoreTerms=>787,
     :Infixop=>628,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   729=>{:CloseStaple=>788},
   730=>
    {:Term=>789,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   731=>{:CloseStaple=>790},
   732=>
    {:Term=>791,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   734=>{:Arguments=>792, :OpenParen=>639},
   735=>{:CloseStaple=>793},
   736=>{:CloseStaple=>794},
   737=>{:CloseParen=>795},
   739=>
    {:Expression=>796,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   740=>
    {:Expression=>797,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   742=>
    {:Term=>798,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   743=>
    {:Term=>799,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   746=>
    {:MoreTerms=>800,
     :Infixop=>658,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   747=>{:CloseStaple=>801},
   748=>
    {:Term=>802,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   749=>{:CloseStaple=>803},
   750=>
    {:Term=>804,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   752=>{:Arguments=>805, :OpenParen=>669},
   753=>{:CloseStaple=>806},
   754=>{:CloseStaple=>807},
   755=>{:CloseParen=>808},
   757=>
    {:Expression=>809,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   758=>
    {:Expression=>810,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   760=>
    {:Term=>811,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   761=>
    {:Term=>812,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   765=>{:CloseParen=>813},
   766=>{:Semicolon=>814},
   767=>{:CloseParen=>815},
   770=>
    {:MoreTerms=>816,
     :Infixop=>695,
     :LazyOr=>176,
     :LazyAnd=>177,
     :EagerOr=>178,
     :EagerAnd=>179,
     :Equality=>180,
     :NotEqual=>181,
     :LessThan=>182,
     :GreaterThan=>183,
     :LessOrEqual=>184,
     :GreaterOrEqual=>185,
     :Plus=>186,
     :Minus=>187,
     :Multiply=>188,
     :Divide=>189,
     :Modulo=>190,
     :Instanceof=>191},
   771=>{:CloseStaple=>817},
   772=>
    {:Term=>818,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   773=>{:CloseStaple=>819},
   774=>
    {:Term=>820,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   776=>
    {:Term=>821,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   777=>
    {:Term=>822,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   778=>
    {:Statement=>823,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   779=>
    {:Expression=>824,
     :Assignment=>338,
     :SubExpression=>339,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215,
     :Identifier=>216},
   780=>{:CloseParen=>825},
   783=>
    {:Term=>826,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   784=>
    {:Term=>827,
     :TermModifier=>377,
     :UnmodifiedTerm=>378,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>379,
     :Primary=>380,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   788=>{:CloseParen=>828},
   790=>{:CloseParen=>829},
   796=>{:CloseStaple=>830},
   797=>{:CloseStaple=>831},
   801=>{:CloseParen=>832},
   803=>{:CloseParen=>833},
   809=>{:CloseStaple=>834},
   810=>{:CloseStaple=>835},
   813=>
    {:Statement=>836,
     :Block=>573,
     :If=>574,
     :For=>575,
     :While=>576,
     :Return=>577,
     :Expression=>578,
     :Semicolon=>579,
     :OpenBrace=>580,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   814=>
    {:Semicolon=>837,
     :Expression=>838,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   815=>
    {:Statement=>839,
     :Block=>573,
     :If=>574,
     :For=>575,
     :While=>576,
     :Return=>577,
     :Expression=>578,
     :Semicolon=>579,
     :OpenBrace=>580,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   817=>{:CloseParen=>840},
   819=>{:CloseParen=>841},
   825=>
    {:Statement=>842,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   828=>
    {:Term=>843,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   829=>
    {:Term=>844,
     :TermModifier=>511,
     :UnmodifiedTerm=>512,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>513,
     :Primary=>514,
     :This=>515,
     :Literal=>516,
     :QualifiedIdentifier=>517,
     :New=>518,
     :IntegerLiteral=>519,
     :CharacterLiteral=>520,
     :StringLiteral=>521,
     :BooleanLiteral=>522,
     :NullLiteral=>523,
     :Identifier=>524},
   832=>
    {:Term=>845,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   833=>
    {:Term=>846,
     :TermModifier=>542,
     :UnmodifiedTerm=>543,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>544,
     :Primary=>545,
     :This=>546,
     :Literal=>547,
     :QualifiedIdentifier=>548,
     :New=>549,
     :IntegerLiteral=>550,
     :CharacterLiteral=>551,
     :StringLiteral=>552,
     :BooleanLiteral=>553,
     :NullLiteral=>554,
     :Identifier=>555},
   836=>{:Else=>847},
   837=>
    {:ForUpdate=>848,
     :Expression=>707,
     :VariableDeclarator=>708,
     :Assignment=>338,
     :SubExpression=>339,
     :Identifier=>709,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215},
   838=>{:Semicolon=>849},
   840=>
    {:Term=>850,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   841=>
    {:Term=>851,
     :TermModifier=>583,
     :UnmodifiedTerm=>584,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>585,
     :Primary=>586,
     :This=>381,
     :Literal=>382,
     :QualifiedIdentifier=>383,
     :New=>384,
     :IntegerLiteral=>385,
     :CharacterLiteral=>386,
     :StringLiteral=>387,
     :BooleanLiteral=>388,
     :NullLiteral=>389,
     :Identifier=>390},
   847=>
    {:Statement=>852,
     :Block=>573,
     :If=>574,
     :For=>575,
     :While=>576,
     :Return=>577,
     :Expression=>578,
     :Semicolon=>579,
     :OpenBrace=>580,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   848=>{:CloseParen=>853},
   849=>
    {:ForUpdate=>854,
     :Expression=>707,
     :VariableDeclarator=>708,
     :Assignment=>338,
     :SubExpression=>339,
     :Identifier=>709,
     :Term=>340,
     :TermModifier=>341,
     :UnmodifiedTerm=>342,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>343,
     :Primary=>344,
     :This=>207,
     :Literal=>208,
     :QualifiedIdentifier=>209,
     :New=>210,
     :IntegerLiteral=>211,
     :CharacterLiteral=>212,
     :StringLiteral=>213,
     :BooleanLiteral=>214,
     :NullLiteral=>215},
   853=>
    {:Statement=>855,
     :Block=>573,
     :If=>574,
     :For=>575,
     :While=>576,
     :Return=>577,
     :Expression=>578,
     :Semicolon=>579,
     :OpenBrace=>580,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146},
   854=>{:CloseParen=>856},
   856=>
    {:Statement=>857,
     :Block=>573,
     :If=>574,
     :For=>575,
     :While=>576,
     :Return=>577,
     :Expression=>578,
     :Semicolon=>579,
     :OpenBrace=>580,
     :Assignment=>128,
     :SubExpression=>129,
     :Term=>130,
     :TermModifier=>131,
     :UnmodifiedTerm=>132,
     :Not=>133,
     :Minus=>134,
     :OpenParen=>135,
     :Primary=>136,
     :This=>137,
     :Literal=>138,
     :QualifiedIdentifier=>139,
     :New=>140,
     :IntegerLiteral=>141,
     :CharacterLiteral=>142,
     :StringLiteral=>143,
     :BooleanLiteral=>144,
     :NullLiteral=>145,
     :Identifier=>146}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:EndProgram]=>[:TypeDeclaration, 1]},
   10=>{[:Class, :Interface]=>[:Modifiers, 0]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   17=>{},
   18=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   19=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   20=>{},
   21=>{[:Semicolon]=>[:QualifiedImportIdentifier, 1]},
   22=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   23=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   24=>{},
   25=>{},
   26=>{[:Class, :Interface]=>[:Modifiers, 2]},
   27=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   28=>{},
   29=>
    {[:Import,
      :EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 3]},
   30=>{},
   31=>{},
   32=>{},
   33=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   34=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   35=>{[:Semicolon]=>[:QualifiedImportIdentifier, 3]},
   36=>{[:Semicolon]=>[:QualifiedImportIdentifier, 3]},
   37=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   38=>{},
   39=>{},
   40=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   41=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   42=>{},
   43=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   44=>{[:EndProgram]=>[:CompilationUnit, 5]},
   45=>{},
   46=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   47=>{},
   48=>{[:OpenBrace]=>[:TypeList, 1]},
   49=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]},
   50=>{},
   51=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   52=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   53=>{},
   54=>
    {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   55=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   61=>{},
   62=>{},
   63=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   64=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   65=>{},
   66=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   67=>{},
   68=>{},
   69=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   70=>{},
   71=>{},
   72=>{[:EndProgram]=>[:ClassBody, 3]},
   73=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   74=>{},
   75=>{},
   76=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   77=>{[:Identifier]=>[:Type, 1]},
   78=>{[:Identifier]=>[:Type, 1]},
   79=>{[:Identifier]=>[:Type, 1]},
   80=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   81=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   82=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   83=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   84=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   85=>
    {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 2]},
   86=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   87=>{[:EndProgram]=>[:InterfaceBody, 3]},
   88=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   89=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 2]},
   90=>{},
   91=>{},
   92=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   93=>{},
   94=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   95=>{[:OpenBrace]=>[:TypeList, 3]},
   96=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]},
   97=>{},
   98=>{},
   99=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 3]},
   100=>{},
   101=>{},
   102=>{},
   103=>{},
   104=>{},
   105=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   106=>{},
   107=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   108=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   109=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   110=>{},
   111=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   112=>{},
   113=>{},
   114=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   115=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   116=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   117=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodBody, 1]},
   118=>{[:CloseBrace]=>[:BlockStatements, 0]},
   119=>{[:OpenBrace]=>[:FormalParameters, 2]},
   120=>{},
   121=>{[:CloseParen]=>[:FormalParameterList, 1]},
   122=>{},
   123=>{[:Identifier]=>[:ArrayType, 3]},
   124=>{[:Identifier]=>[:ArrayType, 3]},
   125=>{},
   126=>{},
   127=>{},
   128=>{[:Semicolon]=>[:Expression, 1]},
   129=>{[:Semicolon]=>[:Expression, 1]},
   130=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   131=>{},
   132=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 1]},
   133=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   134=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   135=>{},
   136=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   137=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   138=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   139=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   140=>{},
   141=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   142=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   143=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   144=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   145=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   146=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   147=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   148=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   149=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   150=>{},
   151=>{},
   152=>{[:CloseBrace]=>[:BlockStatements, 0]},
   153=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   154=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   155=>{},
   156=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   157=>{},
   158=>{},
   159=>{},
   160=>{},
   161=>{},
   162=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   163=>
    {[:Identifier]=>[:Type, 1],
     [:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   164=>{[:CloseBrace]=>[:BlockStatements, 0]},
   165=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   166=>{[:OpenBrace]=>[:FormalParameters, 3]},
   167=>{},
   168=>{[:CloseParen, :Comma]=>[:FormalParameter, 2]},
   169=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 3]},
   170=>{[:Semicolon]=>[:FormalParameters, 2]},
   171=>{},
   172=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 6]},
   173=>{},
   174=>{[:Semicolon, :Equals]=>[:SubExpression, 2]},
   175=>{},
   176=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   177=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   178=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   179=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   180=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   181=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   182=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   183=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   184=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   185=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   186=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   187=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   188=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   189=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   190=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   191=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   192=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   193=>{},
   194=>{},
   195=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   196=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   197=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   198=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   199=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   200=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   201=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   202=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   203=>{},
   204=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   205=>{},
   206=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   207=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   208=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   209=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   210=>{},
   211=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   212=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   213=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   214=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   215=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   216=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   217=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 2]},
   218=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   219=>{},
   220=>{},
   221=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   222=>{},
   223=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 1]},
   224=>{[:CloseParen]=>[:Expressions, 0]},
   225=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   226=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   227=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   228=>{},
   229=>{[:OpenStaple]=>[:BasicType, 1]},
   230=>{[:OpenStaple]=>[:BasicType, 1]},
   231=>{[:OpenStaple]=>[:BasicType, 1]},
   232=>{[:OpenStaple]=>[:BasicType, 1]},
   233=>{[:OpenStaple]=>[:BasicType, 1]},
   234=>{},
   235=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]},
   236=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 3]},
   237=>{[:CloseBrace]=>[:BlockStatements, 2]},
   238=>{},
   239=>{},
   240=>{},
   241=>{[:Semicolon]=>[:ForInit, 0]},
   242=>{},
   243=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   244=>{},
   245=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   246=>{},
   247=>{},
   248=>{},
   249=>{[:CloseParen]=>[:FormalParameterList, 3]},
   250=>{[:Semicolon]=>[:FormalParameters, 3]},
   251=>{[:Semicolon]=>[:Assignment, 3]},
   252=>{[:Semicolon]=>[:MoreTerms, 0]},
   253=>{},
   254=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 1]},
   255=>{},
   256=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   257=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   258=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   259=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   260=>{},
   261=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   262=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   263=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   264=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   265=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   266=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   267=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   268=>{},
   269=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 3]},
   270=>{},
   271=>{},
   272=>{},
   273=>{[:OpenStaple, :CloseParen, :Equals]=>[:SubExpression, 2]},
   274=>{},
   275=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   276=>{},
   277=>{},
   278=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   279=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   280=>{},
   281=>{},
   282=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   283=>{},
   284=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   285=>{[:CloseParen]=>[:Expressions, 0]},
   286=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   287=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   288=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   289=>{},
   290=>{},
   291=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 2]},
   292=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   293=>{},
   294=>{[:CloseStaple]=>[:Expression, 1]},
   295=>{[:CloseStaple]=>[:Expression, 1]},
   296=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   297=>{},
   298=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 1]},
   299=>{},
   300=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   302=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   304=>{},
   305=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   306=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   307=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   308=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   309=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   310=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   311=>{},
   312=>{},
   313=>{[:CloseParen]=>[:MoreExpressions, 0]},
   314=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   315=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   316=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   317=>{},
   318=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   319=>{},
   320=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   321=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   322=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   323=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   324=>{},
   325=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   326=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   327=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   328=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   329=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   330=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   331=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   332=>{},
   333=>{},
   334=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   335=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]},
   336=>{},
   337=>{},
   338=>{[:CloseParen]=>[:Expression, 1]},
   339=>{[:CloseParen]=>[:Expression, 1]},
   340=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   341=>{},
   342=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   343=>{},
   344=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   345=>{},
   346=>{[:Semicolon]=>[:ForInit, 1]},
   347=>{},
   348=>{},
   349=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 3]},
   350=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Block, 3]},
   351=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   352=>{[:Semicolon]=>[:SubExpression, 2]},
   353=>{},
   354=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 2]},
   355=>{},
   356=>{},
   357=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   358=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   359=>{},
   360=>{},
   361=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   362=>{},
   363=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 1]},
   364=>{[:CloseParen]=>[:Expressions, 0]},
   365=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   366=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   367=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   368=>{},
   369=>{},
   370=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]},
   371=>{},
   372=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   373=>{},
   374=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   375=>{[:OpenStaple, :CloseParen]=>[:Assignment, 3]},
   376=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   377=>{},
   378=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 1]},
   379=>{},
   380=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   381=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   382=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   383=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   384=>{},
   385=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   386=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   387=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   388=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   389=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   390=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   391=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   392=>{},
   393=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   394=>{},
   395=>{},
   396=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   397=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   398=>{},
   399=>{},
   400=>{},
   401=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   402=>{},
   403=>{},
   404=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   405=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   406=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   407=>{},
   408=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]},
   409=>{},
   410=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   411=>{},
   412=>{},
   413=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 2]},
   414=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   415=>{},
   416=>{},
   417=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   418=>{},
   419=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 1]},
   420=>{[:CloseParen]=>[:Expressions, 0]},
   421=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   422=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   423=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   424=>{},
   425=>{},
   426=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 3]},
   427=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Arguments, 3]},
   428=>{[:CloseParen]=>[:Expressions, 2]},
   429=>{},
   430=>{},
   431=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]},
   432=>{},
   433=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   434=>{},
   435=>{},
   436=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   437=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   438=>{},
   439=>{},
   440=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   441=>{},
   442=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   443=>{[:CloseParen]=>[:Expressions, 0]},
   444=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   445=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   446=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   447=>{},
   448=>{},
   449=>{},
   450=>{},
   451=>{[:Semicolon]=>[:VariableDeclarator, 3]},
   452=>{},
   453=>{},
   454=>{[:CloseParen, :Equals]=>[:SubExpression, 2]},
   455=>{},
   456=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   457=>{},
   458=>{},
   459=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   460=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   461=>{},
   462=>{[:Semicolon]=>[:ForInit, 2]},
   463=>{},
   464=>{[:Semicolon]=>[:MoreTerms, 0]},
   465=>{},
   466=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 3]},
   467=>{},
   468=>{},
   469=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 2]},
   470=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 2]},
   471=>{},
   472=>{},
   473=>{},
   474=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 2]},
   475=>{},
   476=>{},
   477=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   478=>{},
   479=>{},
   480=>{[:OpenStaple, :CloseParen]=>[:SubExpression, 2]},
   481=>{},
   482=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 2]},
   483=>{},
   484=>{},
   485=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   486=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   487=>{},
   488=>{},
   489=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   490=>{},
   491=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   492=>{[:CloseParen]=>[:Expressions, 0]},
   493=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   494=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   495=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   496=>{},
   497=>{},
   498=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   499=>{},
   500=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   501=>{},
   502=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   503=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   504=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   505=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   506=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   507=>{},
   508=>{},
   509=>{[:CloseStaple]=>[:Assignment, 3]},
   510=>{[:CloseStaple]=>[:MoreTerms, 0]},
   511=>{},
   512=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 1]},
   513=>{},
   514=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   515=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   516=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   517=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   518=>{},
   519=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   520=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   521=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   522=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   523=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   524=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   525=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   526=>{},
   527=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 3]},
   528=>{},
   529=>{},
   530=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 2]},
   531=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   532=>{},
   533=>{},
   534=>{},
   535=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   536=>{},
   537=>{},
   538=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   539=>{[:CloseParen]=>[:MoreExpressions, 0]},
   540=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   541=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   542=>{},
   543=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 1]},
   544=>{},
   545=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   546=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   547=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   548=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   549=>{},
   550=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   551=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   552=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   553=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   554=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   555=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   556=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   557=>{},
   558=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   559=>{},
   560=>{},
   561=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   562=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   563=>{},
   564=>{},
   565=>{},
   566=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   567=>{},
   568=>{},
   569=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   570=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   571=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   572=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   573=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   574=>{},
   575=>{},
   576=>{},
   577=>{},
   578=>{},
   579=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   580=>{[:CloseBrace]=>[:BlockStatements, 0]},
   581=>{[:CloseParen]=>[:Assignment, 3]},
   582=>{[:CloseParen]=>[:MoreTerms, 0]},
   583=>{},
   584=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 1]},
   585=>{},
   586=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   587=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   588=>{},
   589=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   590=>{},
   591=>{},
   592=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   593=>{[:CloseParen]=>[:ForUpdate, 0]},
   594=>{},
   595=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   596=>{[:Semicolon]=>[:MoreTerms, 3]},
   597=>{},
   598=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   599=>{},
   600=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   601=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   602=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   603=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 3]},
   604=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Arguments, 3]},
   605=>{},
   606=>{},
   607=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   608=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   609=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   610=>{},
   611=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   612=>{},
   613=>{},
   614=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 2]},
   615=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 2]},
   616=>{},
   617=>{},
   618=>{},
   619=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 2]},
   620=>{},
   621=>{},
   622=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   623=>{},
   624=>{},
   625=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   626=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   627=>{[:CloseStaple]=>[:SubExpression, 2]},
   628=>{},
   629=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 2]},
   630=>{},
   631=>{},
   632=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   633=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   634=>{},
   635=>{},
   636=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   637=>{},
   638=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 1]},
   639=>{[:CloseParen]=>[:Expressions, 0]},
   640=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   641=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   642=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   643=>{},
   644=>{},
   645=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]},
   646=>{},
   647=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   648=>{},
   649=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   650=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   651=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   652=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 3]},
   653=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Arguments, 3]},
   654=>{},
   655=>{},
   656=>{[:CloseParen]=>[:MoreExpressions, 3]},
   657=>{[:Comma, :CloseParen]=>[:SubExpression, 2]},
   658=>{},
   659=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 2]},
   660=>{},
   661=>{},
   662=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   663=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   664=>{},
   665=>{},
   666=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   667=>{},
   668=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   669=>{[:CloseParen]=>[:Expressions, 0]},
   670=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   671=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   672=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   673=>{},
   674=>{},
   675=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   676=>{},
   677=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   678=>{},
   679=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   680=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   681=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   682=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   683=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   684=>{},
   685=>{},
   686=>{},
   687=>{},
   688=>{[:Semicolon]=>[:ForInit, 0]},
   689=>{},
   690=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   691=>{},
   692=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   693=>{},
   694=>{[:CloseParen]=>[:SubExpression, 2]},
   695=>{},
   696=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 2]},
   697=>{},
   698=>{},
   699=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   700=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   701=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]},
   702=>{},
   703=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   704=>{},
   705=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   706=>{},
   707=>{[:CloseParen]=>[:ForUpdate, 1]},
   708=>{[:CloseParen]=>[:ForUpdate, 1]},
   709=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   710=>{[:CloseParen]=>[:ForUpdate, 0]},
   711=>{},
   712=>{},
   713=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   714=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   715=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 3]},
   716=>{},
   717=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   718=>{},
   719=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   720=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   721=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   722=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   723=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Arguments, 3]},
   724=>{},
   725=>{},
   726=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   727=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   728=>{[:CloseStaple]=>[:MoreTerms, 0]},
   729=>{},
   730=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 3]},
   731=>{},
   732=>{},
   733=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 2]},
   734=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 2]},
   735=>{},
   736=>{},
   737=>{},
   738=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 2]},
   739=>{},
   740=>{},
   741=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   742=>{},
   743=>{},
   744=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   745=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   746=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   747=>{},
   748=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 3]},
   749=>{},
   750=>{},
   751=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 2]},
   752=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   753=>{},
   754=>{},
   755=>{},
   756=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 2]},
   757=>{},
   758=>{},
   759=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   760=>{},
   761=>{},
   762=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   763=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   764=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 7]},
   765=>{},
   766=>{},
   767=>{},
   768=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 3]},
   769=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Block, 3]},
   770=>{[:CloseParen]=>[:MoreTerms, 0]},
   771=>{},
   772=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   773=>{},
   774=>{},
   775=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 2]},
   776=>{},
   777=>{},
   778=>{},
   779=>{},
   780=>{},
   781=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   782=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   783=>{},
   784=>{},
   785=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   786=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   787=>{[:CloseStaple]=>[:MoreTerms, 3]},
   788=>{},
   789=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   790=>{},
   791=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   792=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   793=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   794=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 3]},
   795=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Arguments, 3]},
   796=>{},
   797=>{},
   798=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   799=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   800=>{[:Comma, :CloseParen]=>[:MoreTerms, 3]},
   801=>{},
   802=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   803=>{},
   804=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   805=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   806=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   807=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   808=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Arguments, 3]},
   809=>{},
   810=>{},
   811=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   812=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   813=>{},
   814=>{},
   815=>{},
   816=>{[:CloseParen]=>[:MoreTerms, 3]},
   817=>{},
   818=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   819=>{},
   820=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   821=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   822=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   823=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 8]},
   824=>{[:CloseParen]=>[:VariableDeclarator, 3]},
   825=>{},
   826=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   827=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   828=>{},
   829=>{},
   830=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   831=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   832=>{},
   833=>{},
   834=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   835=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   836=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   837=>{[:CloseParen]=>[:ForUpdate, 0]},
   838=>{},
   839=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   840=>{},
   841=>{},
   842=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 9]},
   843=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   844=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   845=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   846=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   847=>{},
   848=>{},
   849=>{[:CloseParen]=>[:ForUpdate, 0]},
   850=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   851=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   852=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 7]},
   853=>{},
   854=>{},
   855=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 8]},
   856=>{},
   857=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 9]}}}