PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   3=>{:QualifiedIdentifier=>16, :Identifier=>17},
   4=>{:ImportDeclarations=>18, :ImportDeclaration=>4, :Import=>5},
   5=>{:QualifiedIdentifier=>19, :Identifier=>20},
   8=>
    {:ClassDeclaration=>21,
     :InterfaceDeclaration=>22,
     :Class=>23,
     :Interface=>24},
   9=>
    {:Modifiers=>25,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   16=>{:Semicolon=>26},
   17=>{:Dot=>27},
   19=>{:Semicolon=>28, :Dot=>29},
   20=>{:Dot=>30},
   23=>{:Identifier=>31},
   24=>{:Identifier=>32},
   26=>{:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5},
   27=>{:QualifiedIdentifier=>34, :Identifier=>17},
   29=>{:Multiply=>35},
   30=>{:QualifiedIdentifier=>36, :Identifier=>20},
   31=>{:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40},
   32=>{:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43},
   33=>
    {:TypeDeclaration=>44,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   35=>{:Semicolon=>45},
   38=>{:QualifiedIdentifier=>46, :Identifier=>47},
   39=>{:TypeList=>48, :QualifiedIdentifier=>49, :Identifier=>50},
   40=>
    {:ClassBodyDeclarations=>51,
     :ClassBodyDeclaration=>52,
     :Semicolon=>53,
     :Modifiers=>54,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   42=>{:TypeList=>62, :QualifiedIdentifier=>49, :Identifier=>50},
   43=>
    {:InterfaceBodyDeclarations=>63,
     :InterfaceBodyDeclaration=>64,
     :Semicolon=>65,
     :Modifiers=>66,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   46=>{:ClassBody=>67, :Implements=>68, :OpenBrace=>40},
   47=>{:Dot=>69},
   48=>{:ClassBody=>70, :OpenBrace=>40},
   49=>{:CommaType=>71, :Comma=>72},
   50=>{:Dot=>73},
   51=>{:CloseBrace=>74},
   52=>
    {:ClassBodyDeclarations=>75,
     :ClassBodyDeclaration=>52,
     :Semicolon=>53,
     :Modifiers=>54,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   54=>
    {:MemberDecl=>76,
     :MethodOrFieldDecl=>77,
     :Void=>78,
     :Identifier=>79,
     :Type=>80,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87},
   55=>
    {:Modifiers=>88,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   62=>{:InterfaceBody=>89, :OpenBrace=>43},
   63=>{:CloseBrace=>90},
   64=>
    {:InterfaceBodyDeclarations=>91,
     :InterfaceBodyDeclaration=>64,
     :Semicolon=>65,
     :Modifiers=>66,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   66=>
    {:InterfaceMemberDecl=>92,
     :Type=>93,
     :Void=>94,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>95,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87},
   68=>{:TypeList=>96, :QualifiedIdentifier=>49, :Identifier=>50},
   69=>{:QualifiedIdentifier=>97, :Identifier=>47},
   72=>
    {:Type=>98,
     :ArrayType=>99,
     :QualifiedIdentifier=>100,
     :BasicType=>101,
     :Identifier=>102,
     :Byte=>103,
     :Char=>104,
     :Int=>105,
     :Boolean=>106},
   73=>{:QualifiedIdentifier=>107, :Identifier=>50},
   78=>{:Identifier=>108},
   79=>
    {:ConstructorDeclaratorRest=>109,
     :Dot=>110,
     :FormalParameters=>111,
     :OpenParen=>112},
   80=>{:Identifier=>113},
   82=>{:OpenStaple=>114},
   83=>{:OpenStaple=>115},
   93=>{:InterfaceMemberDeclRest=>116, :Identifier=>117},
   94=>{:InterfaceMemberDeclRest=>118, :Identifier=>117},
   95=>{:Dot=>110},
   96=>{:ClassBody=>119, :OpenBrace=>40},
   98=>{:CommaType=>120, :Comma=>72},
   100=>{:OpenStaple=>121},
   101=>{:OpenStaple=>122},
   102=>{:Dot=>123},
   108=>{:MethodDeclaratorRest=>124, :FormalParameters=>125, :OpenParen=>126},
   110=>{:QualifiedIdentifier=>127, :Identifier=>95},
   111=>{:MethodBody=>128, :Block=>129, :OpenBrace=>130},
   112=>
    {:CloseParen=>131,
     :FormalParameter=>132,
     :Type=>133,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>95,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87},
   113=>
    {:MethodOrFieldRest=>134,
     :Semicolon=>135,
     :Equals=>136,
     :MethodDeclaratorRest=>137,
     :FormalParameters=>125,
     :OpenParen=>126},
   114=>{:CloseStaple=>138},
   115=>{:CloseStaple=>139},
   117=>{:FormalParameters=>140, :OpenParen=>141},
   121=>{:CloseStaple=>142},
   122=>{:CloseStaple=>143},
   123=>{:QualifiedIdentifier=>144, :Identifier=>102},
   125=>{:MethodBody=>145, :Semicolon=>146, :Block=>129, :OpenBrace=>130},
   126=>
    {:CloseParen=>147,
     :FormalParameter=>148,
     :Type=>133,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>95,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87},
   130=>
    {:BlockStatements=>149,
     :BlockStatement=>150,
     :LocalVariableDeclarationStatement=>151,
     :Statement=>152,
     :Type=>153,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :ArrayType=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>163,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>168,
     :Char=>169,
     :Int=>170,
     :Boolean=>171,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188},
   132=>{:MoreFormalParameters=>189, :Comma=>190},
   133=>{:Identifier=>191},
   136=>
    {:Expression=>192,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   140=>{:Semicolon=>195},
   141=>
    {:CloseParen=>196,
     :FormalParameter=>197,
     :Type=>133,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>95,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87},
   148=>{:MoreFormalParameters=>198, :Comma=>190},
   149=>{:CloseBrace=>199},
   150=>
    {:BlockStatements=>200,
     :BlockStatement=>150,
     :LocalVariableDeclarationStatement=>151,
     :Statement=>152,
     :Type=>153,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :ArrayType=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>163,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>168,
     :Char=>169,
     :Int=>170,
     :Boolean=>171,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188},
   153=>{:Assignment=>201, :Idenfitifer=>172},
   155=>{:OpenParen=>202},
   156=>{:OpenParen=>203},
   157=>{:OpenParen=>204},
   158=>
    {:Semicolon=>205,
     :Expression=>206,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   159=>{:Semicolon=>207},
   162=>
    {:OpenStaple=>208,
     :IdentifierSuffix=>209,
     :Arguments=>210,
     :Dot=>211,
     :OpenParen=>212},
   163=>{:OpenStaple=>213},
   164=>
    {:BlockStatements=>214,
     :BlockStatement=>150,
     :LocalVariableDeclarationStatement=>151,
     :Statement=>152,
     :Type=>153,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :ArrayType=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>163,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>168,
     :Char=>169,
     :Int=>170,
     :Boolean=>171,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188},
   167=>{:Dot=>215},
   172=>{:Equals=>216},
   173=>
    {:MoreTerms=>217,
     :Instanceof=>218,
     :Infixop=>219,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   174=>
    {:Term=>235,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   178=>
    {:Expression=>236,
     :BasicType=>237,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   179=>{:Selectors=>261, :Selector=>262, :Dot=>263, :OpenStaple=>264},
   180=>
    {:Creator=>265,
     :ArrayCreator=>266,
     :QualifiedIdentifier=>267,
     :BasicType=>268,
     :Identifier=>269,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   189=>{:CloseParen=>274},
   190=>
    {:FormalParameter=>275,
     :Type=>133,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>95,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87},
   192=>{:Semicolon=>276},
   193=>
    {:IdentifierSuffix=>209,
     :OpenStaple=>277,
     :Arguments=>210,
     :Dot=>211,
     :OpenParen=>212},
   194=>{:Dot=>278},
   197=>{:MoreFormalParameters=>279, :Comma=>190},
   198=>{:CloseParen=>280},
   201=>{:Semicolon=>281},
   202=>
    {:Expression=>282,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   203=>
    {:ForInit=>283,
     :Assignment=>284,
     :Type=>285,
     :Idenfitifer=>172,
     :ArrayType=>161,
     :QualifiedIdentifier=>286,
     :BasicType=>163,
     :Identifier=>287,
     :Byte=>168,
     :Char=>169,
     :Int=>170,
     :Boolean=>171},
   204=>
    {:Expression=>288,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   206=>{:Semicolon=>289},
   208=>
    {:CloseStaple=>290,
     :Expression=>291,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   211=>{:This=>311},
   212=>
    {:Expressions=>312,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   213=>{:CloseStaple=>333},
   214=>{:CloseBrace=>334},
   215=>{:QualifiedIdentifier=>335, :Identifier=>167},
   216=>
    {:SubExpression=>336,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   218=>{:QualifiedIdentifier=>337, :Identifier=>17},
   219=>
    {:Term=>338,
     :TermModifier=>339,
     :UnmodifiedTerm=>340,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>341,
     :Primary=>342,
     :New=>343,
     :This=>344,
     :Literal=>345,
     :QualifiedIdentifier=>346,
     :IntegerLiteral=>347,
     :FloatingPointLiteral=>348,
     :CharacterLiteral=>349,
     :StringLiteral=>350,
     :BooleanLiteral=>351,
     :NullLiteral=>352,
     :Identifier=>353},
   236=>{:CloseParen=>354},
   237=>{:CloseParen=>355},
   244=>{:Equals=>356},
   245=>
    {:MoreTerms=>357,
     :Instanceof=>358,
     :Infixop=>359,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   246=>
    {:Term=>360,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   248=>
    {:Expression=>361,
     :BasicType=>362,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   249=>{:Selectors=>363, :Selector=>364, :Dot=>365, :OpenStaple=>366},
   250=>
    {:Creator=>367,
     :ArrayCreator=>368,
     :QualifiedIdentifier=>369,
     :BasicType=>370,
     :Identifier=>371,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   253=>
    {:IdentifierSuffix=>372,
     :OpenStaple=>373,
     :Arguments=>374,
     :Dot=>375,
     :OpenParen=>376},
   260=>{:Dot=>377},
   262=>{:Selectors=>378, :Selector=>262, :Dot=>263, :OpenStaple=>264},
   263=>{:Identifier=>379, :This=>380},
   264=>
    {:Expression=>381,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   267=>{:OpenParen=>382, :OpenStaple=>383},
   268=>{:OpenStaple=>384},
   269=>{:Dot=>385},
   275=>{:MoreFormalParameters=>386, :Comma=>190},
   277=>
    {:Expression=>291,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   278=>{:QualifiedIdentifier=>387, :Identifier=>194},
   279=>{:CloseParen=>388},
   282=>{:CloseParen=>389},
   283=>{:Semicolon=>390},
   285=>{:Assignment=>391, :Idenfitifer=>172},
   286=>{:OpenStaple=>392},
   287=>{:Dot=>393},
   288=>{:CloseParen=>394},
   291=>{:CloseStaple=>395},
   294=>{:Equals=>396},
   295=>
    {:MoreTerms=>397,
     :Instanceof=>398,
     :Infixop=>399,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   296=>
    {:Term=>400,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   298=>
    {:Expression=>401,
     :BasicType=>402,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   299=>{:Selectors=>403, :Selector=>404, :Dot=>405, :OpenStaple=>406},
   300=>
    {:Creator=>407,
     :ArrayCreator=>408,
     :QualifiedIdentifier=>409,
     :BasicType=>410,
     :Identifier=>411,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   303=>
    {:IdentifierSuffix=>412,
     :OpenStaple=>413,
     :Arguments=>414,
     :Dot=>415,
     :OpenParen=>416},
   310=>{:Dot=>417},
   312=>{:CloseParen=>418},
   313=>{:MoreExpressions=>419, :Comma=>420},
   316=>{:Equals=>421},
   317=>
    {:MoreTerms=>422,
     :Instanceof=>423,
     :Infixop=>424,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   318=>
    {:Term=>425,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   320=>
    {:Expression=>426,
     :BasicType=>427,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   321=>{:Selectors=>428, :Selector=>429, :Dot=>430, :OpenStaple=>431},
   322=>
    {:Creator=>432,
     :ArrayCreator=>433,
     :QualifiedIdentifier=>434,
     :BasicType=>435,
     :Identifier=>436,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   325=>
    {:IdentifierSuffix=>437,
     :OpenStaple=>438,
     :Arguments=>439,
     :Dot=>440,
     :OpenParen=>441},
   332=>{:Dot=>442},
   338=>
    {:MoreTerms=>443,
     :Infixop=>219,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   339=>
    {:Term=>444,
     :TermModifier=>339,
     :UnmodifiedTerm=>340,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>341,
     :Primary=>342,
     :New=>343,
     :This=>344,
     :Literal=>345,
     :QualifiedIdentifier=>346,
     :IntegerLiteral=>347,
     :FloatingPointLiteral=>348,
     :CharacterLiteral=>349,
     :StringLiteral=>350,
     :BooleanLiteral=>351,
     :NullLiteral=>352,
     :Identifier=>353},
   341=>
    {:Expression=>445,
     :BasicType=>446,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   342=>{:Selectors=>447, :Selector=>448, :Dot=>449, :OpenStaple=>450},
   343=>
    {:Creator=>451,
     :ArrayCreator=>452,
     :QualifiedIdentifier=>453,
     :BasicType=>454,
     :Identifier=>455,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   346=>
    {:IdentifierSuffix=>456,
     :OpenStaple=>457,
     :Arguments=>458,
     :Dot=>459,
     :OpenParen=>460},
   353=>{:Dot=>461},
   354=>
    {:Term=>462,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   355=>
    {:Term=>463,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   356=>
    {:SubExpression=>464,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   358=>{:QualifiedIdentifier=>465, :Identifier=>466},
   359=>
    {:Term=>467,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>470,
     :Primary=>471,
     :New=>472,
     :This=>473,
     :Literal=>474,
     :QualifiedIdentifier=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   361=>{:CloseParen=>483},
   362=>{:CloseParen=>484},
   364=>{:Selectors=>485, :Selector=>364, :Dot=>365, :OpenStaple=>366},
   365=>{:Identifier=>486, :This=>487},
   366=>
    {:Expression=>488,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   369=>{:OpenParen=>489, :OpenStaple=>490},
   370=>{:OpenStaple=>491},
   371=>{:Dot=>492},
   373=>
    {:Expression=>493,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   375=>{:This=>494},
   376=>
    {:Expressions=>495,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   377=>{:QualifiedIdentifier=>496, :Identifier=>260},
   379=>{:Arguments=>497, :OpenParen=>212},
   381=>{:CloseStaple=>498},
   382=>
    {:Expression=>499,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   383=>
    {:Expression=>500,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   384=>
    {:Expression=>501,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   385=>{:QualifiedIdentifier=>502, :Identifier=>269},
   389=>
    {:Statement=>503,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   390=>
    {:Semicolon=>512,
     :Expression=>513,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   392=>{:CloseStaple=>290},
   393=>{:QualifiedIdentifier=>514, :Identifier=>287},
   394=>
    {:Statement=>515,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   396=>
    {:SubExpression=>516,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   398=>{:QualifiedIdentifier=>517, :Identifier=>518},
   399=>
    {:Term=>519,
     :TermModifier=>520,
     :UnmodifiedTerm=>521,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>522,
     :Primary=>523,
     :New=>524,
     :This=>525,
     :Literal=>526,
     :QualifiedIdentifier=>527,
     :IntegerLiteral=>528,
     :FloatingPointLiteral=>529,
     :CharacterLiteral=>530,
     :StringLiteral=>531,
     :BooleanLiteral=>532,
     :NullLiteral=>533,
     :Identifier=>534},
   401=>{:CloseParen=>535},
   402=>{:CloseParen=>536},
   404=>{:Selectors=>537, :Selector=>404, :Dot=>405, :OpenStaple=>406},
   405=>{:Identifier=>538, :This=>539},
   406=>
    {:Expression=>540,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   409=>{:OpenParen=>541, :OpenStaple=>542},
   410=>{:OpenStaple=>543},
   411=>{:Dot=>544},
   413=>
    {:Expression=>545,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   415=>{:This=>546},
   416=>
    {:Expressions=>547,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   417=>{:QualifiedIdentifier=>548, :Identifier=>310},
   420=>
    {:Expression=>549,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   421=>
    {:SubExpression=>550,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   423=>{:QualifiedIdentifier=>551, :Identifier=>552},
   424=>
    {:Term=>553,
     :TermModifier=>554,
     :UnmodifiedTerm=>555,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>556,
     :Primary=>557,
     :New=>558,
     :This=>559,
     :Literal=>560,
     :QualifiedIdentifier=>561,
     :IntegerLiteral=>562,
     :FloatingPointLiteral=>563,
     :CharacterLiteral=>564,
     :StringLiteral=>565,
     :BooleanLiteral=>566,
     :NullLiteral=>567,
     :Identifier=>568},
   426=>{:CloseParen=>569},
   427=>{:CloseParen=>570},
   429=>{:Selectors=>571, :Selector=>429, :Dot=>430, :OpenStaple=>431},
   430=>{:Identifier=>572, :This=>573},
   431=>
    {:Expression=>574,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   434=>{:OpenParen=>575, :OpenStaple=>576},
   435=>{:OpenStaple=>577},
   436=>{:Dot=>578},
   438=>
    {:Expression=>579,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   440=>{:This=>580},
   441=>
    {:Expressions=>581,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   442=>{:QualifiedIdentifier=>582, :Identifier=>332},
   445=>{:CloseParen=>583},
   446=>{:CloseParen=>584},
   448=>{:Selectors=>585, :Selector=>448, :Dot=>449, :OpenStaple=>450},
   449=>{:Identifier=>586, :This=>587},
   450=>
    {:Expression=>588,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   453=>{:OpenParen=>589, :OpenStaple=>590},
   454=>{:OpenStaple=>591},
   455=>{:Dot=>592},
   457=>
    {:Expression=>593,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   459=>{:This=>594},
   460=>
    {:Expressions=>595,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   461=>{:QualifiedIdentifier=>596, :Identifier=>353},
   466=>{:Dot=>597},
   467=>
    {:MoreTerms=>598,
     :Infixop=>359,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   468=>
    {:Term=>599,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>470,
     :Primary=>471,
     :New=>472,
     :This=>473,
     :Literal=>474,
     :QualifiedIdentifier=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   470=>
    {:Expression=>600,
     :BasicType=>601,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   471=>{:Selectors=>602, :Selector=>603, :Dot=>604, :OpenStaple=>605},
   472=>
    {:Creator=>606,
     :ArrayCreator=>607,
     :QualifiedIdentifier=>608,
     :BasicType=>609,
     :Identifier=>610,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   475=>
    {:IdentifierSuffix=>611,
     :OpenStaple=>612,
     :Arguments=>613,
     :Dot=>614,
     :OpenParen=>615},
   482=>{:Dot=>616},
   483=>
    {:Term=>617,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   484=>
    {:Term=>618,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   486=>{:Arguments=>619, :OpenParen=>376},
   488=>{:CloseStaple=>620},
   489=>
    {:Expression=>621,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   490=>
    {:Expression=>622,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   491=>
    {:Expression=>623,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   492=>{:QualifiedIdentifier=>624, :Identifier=>371},
   493=>{:CloseStaple=>625},
   495=>{:CloseParen=>626},
   499=>{:CloseParen=>627},
   500=>{:CloseStaple=>628},
   501=>{:CloseStaple=>629},
   503=>{:Else=>630},
   505=>{:OpenParen=>631},
   506=>{:OpenParen=>632},
   507=>{:OpenParen=>633},
   508=>
    {:Semicolon=>634,
     :Expression=>635,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   509=>{:Semicolon=>636},
   511=>
    {:BlockStatements=>637,
     :BlockStatement=>150,
     :LocalVariableDeclarationStatement=>151,
     :Statement=>152,
     :Type=>153,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :ArrayType=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>163,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>168,
     :Char=>169,
     :Int=>170,
     :Boolean=>171,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188},
   512=>{:ForUpdate=>638, :Assignment=>639, :Idenfitifer=>244},
   513=>{:Semicolon=>640},
   518=>{:Dot=>641},
   519=>
    {:MoreTerms=>642,
     :Infixop=>399,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   520=>
    {:Term=>643,
     :TermModifier=>520,
     :UnmodifiedTerm=>521,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>522,
     :Primary=>523,
     :New=>524,
     :This=>525,
     :Literal=>526,
     :QualifiedIdentifier=>527,
     :IntegerLiteral=>528,
     :FloatingPointLiteral=>529,
     :CharacterLiteral=>530,
     :StringLiteral=>531,
     :BooleanLiteral=>532,
     :NullLiteral=>533,
     :Identifier=>534},
   522=>
    {:Expression=>644,
     :BasicType=>645,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   523=>{:Selectors=>646, :Selector=>647, :Dot=>648, :OpenStaple=>649},
   524=>
    {:Creator=>650,
     :ArrayCreator=>651,
     :QualifiedIdentifier=>652,
     :BasicType=>653,
     :Identifier=>654,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   527=>
    {:IdentifierSuffix=>655,
     :OpenStaple=>656,
     :Arguments=>657,
     :Dot=>658,
     :OpenParen=>659},
   534=>{:Dot=>660},
   535=>
    {:Term=>661,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   536=>
    {:Term=>662,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   538=>{:Arguments=>663, :OpenParen=>416},
   540=>{:CloseStaple=>664},
   541=>
    {:Expression=>665,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   542=>
    {:Expression=>666,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   543=>
    {:Expression=>667,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   544=>{:QualifiedIdentifier=>668, :Identifier=>411},
   545=>{:CloseStaple=>669},
   547=>{:CloseParen=>670},
   549=>{:MoreExpressions=>671, :Comma=>420},
   552=>{:Dot=>672},
   553=>
    {:MoreTerms=>673,
     :Infixop=>424,
     :LazyOr=>220,
     :LazyAnd=>221,
     :EagerOr=>222,
     :EagerAnd=>223,
     :Equality=>224,
     :NotEqual=>225,
     :LessThan=>226,
     :GreaterThan=>227,
     :LessOrEqual=>228,
     :GreaterOrEqual=>229,
     :Plus=>230,
     :Minus=>231,
     :Multiply=>232,
     :Divide=>233,
     :Modulo=>234},
   554=>
    {:Term=>674,
     :TermModifier=>554,
     :UnmodifiedTerm=>555,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>556,
     :Primary=>557,
     :New=>558,
     :This=>559,
     :Literal=>560,
     :QualifiedIdentifier=>561,
     :IntegerLiteral=>562,
     :FloatingPointLiteral=>563,
     :CharacterLiteral=>564,
     :StringLiteral=>565,
     :BooleanLiteral=>566,
     :NullLiteral=>567,
     :Identifier=>568},
   556=>
    {:Expression=>675,
     :BasicType=>676,
     :Assignment=>238,
     :SubExpression=>239,
     :Byte=>240,
     :Char=>241,
     :Int=>242,
     :Boolean=>243,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   557=>{:Selectors=>677, :Selector=>678, :Dot=>679, :OpenStaple=>680},
   558=>
    {:Creator=>681,
     :ArrayCreator=>682,
     :QualifiedIdentifier=>683,
     :BasicType=>684,
     :Identifier=>685,
     :Byte=>270,
     :Char=>271,
     :Int=>272,
     :Boolean=>273},
   561=>
    {:IdentifierSuffix=>686,
     :OpenStaple=>687,
     :Arguments=>688,
     :Dot=>689,
     :OpenParen=>690},
   568=>{:Dot=>691},
   569=>
    {:Term=>692,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   570=>
    {:Term=>693,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   572=>{:Arguments=>694, :OpenParen=>441},
   574=>{:CloseStaple=>695},
   575=>
    {:Expression=>696,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   576=>
    {:Expression=>697,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   577=>
    {:Expression=>698,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   578=>{:QualifiedIdentifier=>699, :Identifier=>436},
   579=>{:CloseStaple=>700},
   581=>{:CloseParen=>701},
   583=>
    {:Term=>702,
     :TermModifier=>339,
     :UnmodifiedTerm=>340,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>341,
     :Primary=>342,
     :New=>343,
     :This=>344,
     :Literal=>345,
     :QualifiedIdentifier=>346,
     :IntegerLiteral=>347,
     :FloatingPointLiteral=>348,
     :CharacterLiteral=>349,
     :StringLiteral=>350,
     :BooleanLiteral=>351,
     :NullLiteral=>352,
     :Identifier=>353},
   584=>
    {:Term=>703,
     :TermModifier=>339,
     :UnmodifiedTerm=>340,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>341,
     :Primary=>342,
     :New=>343,
     :This=>344,
     :Literal=>345,
     :QualifiedIdentifier=>346,
     :IntegerLiteral=>347,
     :FloatingPointLiteral=>348,
     :CharacterLiteral=>349,
     :StringLiteral=>350,
     :BooleanLiteral=>351,
     :NullLiteral=>352,
     :Identifier=>353},
   586=>{:Arguments=>704, :OpenParen=>460},
   588=>{:CloseStaple=>705},
   589=>
    {:Expression=>706,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   590=>
    {:Expression=>707,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   591=>
    {:Expression=>708,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   592=>{:QualifiedIdentifier=>709, :Identifier=>455},
   593=>{:CloseStaple=>710},
   595=>{:CloseParen=>711},
   597=>{:QualifiedIdentifier=>712, :Identifier=>466},
   600=>{:CloseParen=>713},
   601=>{:CloseParen=>714},
   603=>{:Selectors=>715, :Selector=>603, :Dot=>604, :OpenStaple=>605},
   604=>{:Identifier=>716, :This=>717},
   605=>
    {:Expression=>718,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   608=>{:OpenParen=>719, :OpenStaple=>720},
   609=>{:OpenStaple=>721},
   610=>{:Dot=>722},
   612=>
    {:Expression=>723,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   614=>{:This=>724},
   615=>
    {:Expressions=>725,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   616=>{:QualifiedIdentifier=>726, :Identifier=>482},
   621=>{:CloseParen=>727},
   622=>{:CloseStaple=>728},
   623=>{:CloseStaple=>729},
   630=>
    {:Statement=>730,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   631=>
    {:Expression=>731,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   632=>
    {:ForInit=>732,
     :Assignment=>284,
     :Type=>285,
     :Idenfitifer=>172,
     :ArrayType=>161,
     :QualifiedIdentifier=>286,
     :BasicType=>163,
     :Identifier=>287,
     :Byte=>168,
     :Char=>169,
     :Int=>170,
     :Boolean=>171},
   633=>
    {:Expression=>733,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   635=>{:Semicolon=>734},
   637=>{:CloseBrace=>735},
   638=>{:CloseParen=>736},
   640=>{:ForUpdate=>737, :Assignment=>639, :Idenfitifer=>244},
   641=>{:QualifiedIdentifier=>738, :Identifier=>518},
   644=>{:CloseParen=>739},
   645=>{:CloseParen=>740},
   647=>{:Selectors=>741, :Selector=>647, :Dot=>648, :OpenStaple=>649},
   648=>{:Identifier=>742, :This=>743},
   649=>
    {:Expression=>744,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   652=>{:OpenParen=>745, :OpenStaple=>746},
   653=>{:OpenStaple=>747},
   654=>{:Dot=>748},
   656=>
    {:Expression=>749,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   658=>{:This=>750},
   659=>
    {:Expressions=>751,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   660=>{:QualifiedIdentifier=>752, :Identifier=>534},
   665=>{:CloseParen=>753},
   666=>{:CloseStaple=>754},
   667=>{:CloseStaple=>755},
   672=>{:QualifiedIdentifier=>756, :Identifier=>552},
   675=>{:CloseParen=>757},
   676=>{:CloseParen=>758},
   678=>{:Selectors=>759, :Selector=>678, :Dot=>679, :OpenStaple=>680},
   679=>{:Identifier=>760, :This=>761},
   680=>
    {:Expression=>762,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   683=>{:OpenParen=>763, :OpenStaple=>764},
   684=>{:OpenStaple=>765},
   685=>{:Dot=>766},
   687=>
    {:Expression=>767,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   689=>{:This=>768},
   690=>
    {:Expressions=>769,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Idenfitifer=>316,
     :Term=>317,
     :TermModifier=>318,
     :UnmodifiedTerm=>319,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>320,
     :Primary=>321,
     :New=>322,
     :This=>323,
     :Literal=>324,
     :QualifiedIdentifier=>325,
     :IntegerLiteral=>326,
     :FloatingPointLiteral=>327,
     :CharacterLiteral=>328,
     :StringLiteral=>329,
     :BooleanLiteral=>330,
     :NullLiteral=>331,
     :Identifier=>332},
   691=>{:QualifiedIdentifier=>770, :Identifier=>568},
   696=>{:CloseParen=>771},
   697=>{:CloseStaple=>772},
   698=>{:CloseStaple=>773},
   706=>{:CloseParen=>774},
   707=>{:CloseStaple=>775},
   708=>{:CloseStaple=>776},
   713=>
    {:Term=>777,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>470,
     :Primary=>471,
     :New=>472,
     :This=>473,
     :Literal=>474,
     :QualifiedIdentifier=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   714=>
    {:Term=>778,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>470,
     :Primary=>471,
     :New=>472,
     :This=>473,
     :Literal=>474,
     :QualifiedIdentifier=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   716=>{:Arguments=>779, :OpenParen=>615},
   718=>{:CloseStaple=>780},
   719=>
    {:Expression=>781,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   720=>
    {:Expression=>782,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   721=>
    {:Expression=>783,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   722=>{:QualifiedIdentifier=>784, :Identifier=>610},
   723=>{:CloseStaple=>785},
   725=>{:CloseParen=>786},
   731=>{:CloseParen=>787},
   732=>{:Semicolon=>788},
   733=>{:CloseParen=>789},
   736=>
    {:Statement=>790,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   737=>{:CloseParen=>791},
   739=>
    {:Term=>792,
     :TermModifier=>520,
     :UnmodifiedTerm=>521,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>522,
     :Primary=>523,
     :New=>524,
     :This=>525,
     :Literal=>526,
     :QualifiedIdentifier=>527,
     :IntegerLiteral=>528,
     :FloatingPointLiteral=>529,
     :CharacterLiteral=>530,
     :StringLiteral=>531,
     :BooleanLiteral=>532,
     :NullLiteral=>533,
     :Identifier=>534},
   740=>
    {:Term=>793,
     :TermModifier=>520,
     :UnmodifiedTerm=>521,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>522,
     :Primary=>523,
     :New=>524,
     :This=>525,
     :Literal=>526,
     :QualifiedIdentifier=>527,
     :IntegerLiteral=>528,
     :FloatingPointLiteral=>529,
     :CharacterLiteral=>530,
     :StringLiteral=>531,
     :BooleanLiteral=>532,
     :NullLiteral=>533,
     :Identifier=>534},
   742=>{:Arguments=>794, :OpenParen=>659},
   744=>{:CloseStaple=>795},
   745=>
    {:Expression=>796,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   746=>
    {:Expression=>797,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   747=>
    {:Expression=>798,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   748=>{:QualifiedIdentifier=>799, :Identifier=>654},
   749=>{:CloseStaple=>800},
   751=>{:CloseParen=>801},
   757=>
    {:Term=>802,
     :TermModifier=>554,
     :UnmodifiedTerm=>555,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>556,
     :Primary=>557,
     :New=>558,
     :This=>559,
     :Literal=>560,
     :QualifiedIdentifier=>561,
     :IntegerLiteral=>562,
     :FloatingPointLiteral=>563,
     :CharacterLiteral=>564,
     :StringLiteral=>565,
     :BooleanLiteral=>566,
     :NullLiteral=>567,
     :Identifier=>568},
   758=>
    {:Term=>803,
     :TermModifier=>554,
     :UnmodifiedTerm=>555,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>556,
     :Primary=>557,
     :New=>558,
     :This=>559,
     :Literal=>560,
     :QualifiedIdentifier=>561,
     :IntegerLiteral=>562,
     :FloatingPointLiteral=>563,
     :CharacterLiteral=>564,
     :StringLiteral=>565,
     :BooleanLiteral=>566,
     :NullLiteral=>567,
     :Identifier=>568},
   760=>{:Arguments=>804, :OpenParen=>690},
   762=>{:CloseStaple=>805},
   763=>
    {:Expression=>806,
     :Assignment=>238,
     :SubExpression=>239,
     :Idenfitifer=>244,
     :Term=>245,
     :TermModifier=>246,
     :UnmodifiedTerm=>247,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>248,
     :Primary=>249,
     :New=>250,
     :This=>251,
     :Literal=>252,
     :QualifiedIdentifier=>253,
     :IntegerLiteral=>254,
     :FloatingPointLiteral=>255,
     :CharacterLiteral=>256,
     :StringLiteral=>257,
     :BooleanLiteral=>258,
     :NullLiteral=>259,
     :Identifier=>260},
   764=>
    {:Expression=>807,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   765=>
    {:Expression=>808,
     :Assignment=>292,
     :SubExpression=>293,
     :Idenfitifer=>294,
     :Term=>295,
     :TermModifier=>296,
     :UnmodifiedTerm=>297,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>298,
     :Primary=>299,
     :New=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :IntegerLiteral=>304,
     :FloatingPointLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   766=>{:QualifiedIdentifier=>809, :Identifier=>685},
   767=>{:CloseStaple=>810},
   769=>{:CloseParen=>811},
   781=>{:CloseParen=>812},
   782=>{:CloseStaple=>813},
   783=>{:CloseStaple=>814},
   787=>
    {:Statement=>815,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   788=>
    {:Semicolon=>816,
     :Expression=>817,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   789=>
    {:Statement=>818,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   791=>
    {:Statement=>819,
     :Block=>154,
     :If=>155,
     :For=>156,
     :While=>157,
     :Return=>158,
     :Expression=>159,
     :Semicolon=>160,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   796=>{:CloseParen=>820},
   797=>{:CloseStaple=>821},
   798=>{:CloseStaple=>822},
   806=>{:CloseParen=>823},
   807=>{:CloseStaple=>824},
   808=>{:CloseStaple=>825},
   815=>{:Else=>826},
   816=>{:ForUpdate=>827, :Assignment=>639, :Idenfitifer=>244},
   817=>{:Semicolon=>828},
   826=>
    {:Statement=>829,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   827=>{:CloseParen=>830},
   828=>{:ForUpdate=>831, :Assignment=>639, :Idenfitifer=>244},
   830=>
    {:Statement=>832,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194},
   831=>{:CloseParen=>833},
   833=>
    {:Statement=>834,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Idenfitifer=>172,
     :Term=>173,
     :TermModifier=>174,
     :UnmodifiedTerm=>175,
     :Not=>176,
     :Minus=>177,
     :OpenParen=>178,
     :Primary=>179,
     :New=>180,
     :This=>181,
     :Literal=>182,
     :QualifiedIdentifier=>193,
     :IntegerLiteral=>183,
     :FloatingPointLiteral=>184,
     :CharacterLiteral=>185,
     :StringLiteral=>186,
     :BooleanLiteral=>187,
     :NullLiteral=>188,
     :Identifier=>194}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:Class, :Interface]=>[:Modifiers, 0]},
   10=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>{},
   17=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   18=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   19=>{},
   20=>{[:Semicolon, :Dot]=>[:QualifiedIdentifier, 1]},
   21=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   22=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   23=>{},
   24=>{},
   25=>{[:Class, :Interface]=>[:Modifiers, 2]},
   26=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   27=>{},
   28=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 3]},
   29=>{},
   30=>{},
   31=>{},
   32=>{},
   33=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   34=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   35=>{},
   36=>{[:Semicolon, :Dot]=>[:QualifiedIdentifier, 3]},
   37=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   38=>{},
   39=>{},
   40=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean]=>[:Modifiers, 0]},
   41=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   42=>{},
   43=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean]=>[:Modifiers, 0]},
   44=>{[:EndProgram]=>[:CompilationUnit, 5]},
   45=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 5]},
   46=>{},
   47=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   48=>{},
   49=>{[:OpenBrace]=>[:CommaType, 0]},
   50=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 1]},
   51=>{},
   52=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean]=>[:Modifiers, 0]},
   53=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   54=>{},
   55=>{[:Void, :Identifier, :Byte, :Char, :Int, :Boolean]=>[:Modifiers, 0]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean]=>[:Modifier, 1]},
   61=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean]=>[:Modifier, 1]},
   62=>{},
   63=>{},
   64=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean]=>[:Modifiers, 0]},
   65=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   66=>{},
   67=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   68=>{},
   69=>{},
   70=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   71=>{[:OpenBrace]=>[:TypeList, 2]},
   72=>{},
   73=>{},
   74=>{[:EndProgram]=>[:ClassBody, 3]},
   75=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   76=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:ClassBodyDeclaration, 2]},
   77=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MemberDecl, 1]},
   78=>{},
   79=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   80=>{},
   81=>{[:Identifier]=>[:Type, 1]},
   82=>{[:Identifier]=>[:Type, 1]},
   83=>{[:Identifier]=>[:Type, 1]},
   84=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   85=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   86=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   87=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   88=>{[:Void, :Identifier, :Byte, :Char, :Int, :Boolean]=>[:Modifiers, 2]},
   89=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   90=>{[:EndProgram]=>[:InterfaceBody, 3]},
   91=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   92=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 2]},
   93=>{},
   94=>{},
   95=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   96=>{},
   97=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   98=>{[:OpenBrace]=>[:CommaType, 0]},
   99=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   100=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   101=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   102=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   103=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   104=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   105=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   106=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   107=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 3]},
   108=>{},
   109=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MemberDecl, 2]},
   110=>{},
   111=>{},
   112=>{},
   113=>{},
   114=>{},
   115=>{},
   116=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   117=>{},
   118=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   119=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   120=>{[:OpenBrace]=>[:CommaType, 3]},
   121=>{},
   122=>{},
   123=>{},
   124=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MemberDecl, 3]},
   125=>{},
   126=>{},
   127=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   128=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   129=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodBody, 1]},
   130=>{[:CloseBrace]=>[:BlockStatements, 0]},
   131=>{[:OpenBrace]=>[:FormalParameters, 2]},
   132=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   133=>{},
   134=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodOrFieldDecl, 3]},
   135=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   136=>{},
   137=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   138=>{[:Identifier]=>[:ArrayType, 3]},
   139=>{[:Identifier]=>[:ArrayType, 3]},
   140=>{},
   141=>{},
   142=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   143=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   144=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   145=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   146=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   147=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   148=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   149=>{},
   150=>{[:CloseBrace]=>[:BlockStatements, 0]},
   151=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:BlockStatement, 1]},
   152=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:BlockStatement, 1]},
   153=>{},
   154=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 1]},
   155=>{},
   156=>{},
   157=>{},
   158=>{},
   159=>{},
   160=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 1]},
   161=>{[:Idenfitifer]=>[:Type, 1]},
   162=>
    {[:Idenfitifer]=>[:Type, 1],
     [:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Primary, 1]},
   163=>{[:Idenfitifer]=>[:Type, 1]},
   164=>{[:CloseBrace]=>[:BlockStatements, 0]},
   165=>{[:Semicolon]=>[:Expression, 1]},
   166=>{[:Semicolon]=>[:Expression, 1]},
   167=>
    {[:Idenfitifer,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 1]},
   168=>{[:Idenfitifer, :OpenStaple]=>[:BasicType, 1]},
   169=>{[:Idenfitifer, :OpenStaple]=>[:BasicType, 1]},
   170=>{[:Idenfitifer, :OpenStaple]=>[:BasicType, 1]},
   171=>{[:Idenfitifer, :OpenStaple]=>[:BasicType, 1]},
   172=>{},
   173=>{[:Semicolon]=>[:MoreTerms, 0]},
   174=>{},
   175=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Term, 1]},
   176=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:TermModifier, 1]},
   177=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:TermModifier, 1]},
   178=>{},
   179=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selectors, 0]},
   180=>{},
   181=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Primary, 1]},
   182=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Primary, 1]},
   183=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Literal, 1]},
   184=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Literal, 1]},
   185=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Literal, 1]},
   186=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Literal, 1]},
   187=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Literal, 1]},
   188=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Literal, 1]},
   189=>{},
   190=>{},
   191=>{[:Comma, :CloseParen]=>[:FormalParameter, 2]},
   192=>{},
   193=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Primary, 1]},
   194=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 1]},
   195=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 3]},
   196=>{[:Semicolon]=>[:FormalParameters, 2]},
   197=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   198=>{},
   199=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:Block, 3]},
   200=>{[:CloseBrace]=>[:BlockStatements, 2]},
   201=>{},
   202=>{},
   203=>{},
   204=>{},
   205=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 2]},
   206=>{},
   207=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 2]},
   208=>{},
   209=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Primary, 2]},
   210=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:IdentifierSuffix, 1]},
   211=>{},
   212=>{[:CloseParen]=>[:Expressions, 0]},
   213=>{},
   214=>{},
   215=>{},
   216=>{},
   217=>{[:Semicolon]=>[:SubExpression, 2]},
   218=>{},
   219=>{},
   220=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   221=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   222=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   223=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   224=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   225=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   226=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   227=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   228=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   229=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   230=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   231=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   232=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   233=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   234=>
    {[:Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier]=>[:Infixop, 1]},
   235=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Term, 2]},
   236=>{},
   237=>{},
   238=>{[:CloseParen]=>[:Expression, 1]},
   239=>{[:CloseParen]=>[:Expression, 1]},
   240=>{[:CloseParen]=>[:BasicType, 1]},
   241=>{[:CloseParen]=>[:BasicType, 1]},
   242=>{[:CloseParen]=>[:BasicType, 1]},
   243=>{[:CloseParen]=>[:BasicType, 1]},
   244=>{},
   245=>{[:CloseParen]=>[:MoreTerms, 0]},
   246=>{},
   247=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Term, 1]},
   248=>{},
   249=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selectors, 0]},
   250=>{},
   251=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Primary, 1]},
   252=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Primary, 1]},
   253=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Primary, 1]},
   254=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   255=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   256=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   257=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   258=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   259=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   260=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 1]},
   261=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   262=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selectors, 0]},
   263=>{},
   264=>{},
   265=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   266=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Creator, 1]},
   267=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Creator, 1]},
   268=>{},
   269=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   270=>{[:OpenStaple]=>[:BasicType, 1]},
   271=>{[:OpenStaple]=>[:BasicType, 1]},
   272=>{[:OpenStaple]=>[:BasicType, 1]},
   273=>{[:OpenStaple]=>[:BasicType, 1]},
   274=>{[:OpenBrace]=>[:FormalParameters, 4]},
   275=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   276=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :CloseBrace]=>[:MethodOrFieldRest, 3]},
   277=>{},
   278=>{},
   279=>{},
   280=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 4]},
   281=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]},
   282=>{},
   283=>{},
   284=>{[:Semicolon]=>[:ForInit, 1]},
   285=>{},
   286=>{[:Idenfitifer]=>[:Type, 1]},
   287=>{[:Idenfitifer, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   288=>{},
   289=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 3]},
   290=>{[:Idenfitifer]=>[:ArrayType, 3]},
   291=>{},
   292=>{[:CloseStaple]=>[:Expression, 1]},
   293=>{[:CloseStaple]=>[:Expression, 1]},
   294=>{},
   295=>{[:CloseStaple]=>[:MoreTerms, 0]},
   296=>{},
   297=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Term, 1]},
   298=>{},
   299=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selectors, 0]},
   300=>{},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Primary, 1]},
   302=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Primary, 1]},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Primary, 1]},
   304=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Literal, 1]},
   305=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Literal, 1]},
   306=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Literal, 1]},
   307=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Literal, 1]},
   308=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Literal, 1]},
   309=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Literal, 1]},
   310=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 1]},
   311=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:IdentifierSuffix, 2]},
   312=>{},
   313=>{[:CloseParen]=>[:MoreExpressions, 0]},
   314=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   315=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   316=>{},
   317=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   318=>{},
   319=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Term, 1]},
   320=>{},
   321=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selectors, 0]},
   322=>{},
   323=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Primary, 1]},
   324=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Primary, 1]},
   325=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Primary, 1]},
   326=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   327=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   328=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   329=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   330=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   331=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Literal, 1]},
   332=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 1]},
   333=>{[:Idenfitifer]=>[:ArrayType, 3]},
   334=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Block, 3]},
   335=>
    {[:Idenfitifer,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 3]},
   336=>{[:Semicolon]=>[:Assignment, 3]},
   337=>{[:Semicolon]=>[:SubExpression, 3]},
   338=>{[:Semicolon]=>[:MoreTerms, 0]},
   339=>{},
   340=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Term, 1]},
   341=>{},
   342=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selectors, 0]},
   343=>{},
   344=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Primary, 1]},
   345=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Primary, 1]},
   346=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Primary, 1]},
   347=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Literal, 1]},
   348=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Literal, 1]},
   349=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Literal, 1]},
   350=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Literal, 1]},
   351=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Literal, 1]},
   352=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Literal, 1]},
   353=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   354=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Primary, 3]},
   355=>{},
   356=>{},
   357=>{[:CloseParen]=>[:SubExpression, 2]},
   358=>{},
   359=>{},
   360=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Term, 2]},
   361=>{},
   362=>{},
   363=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   364=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selectors, 0]},
   365=>{},
   366=>{},
   367=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   368=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Creator, 1]},
   369=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Creator, 1]},
   370=>{},
   371=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   372=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Primary, 2]},
   373=>{},
   374=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:IdentifierSuffix, 1]},
   375=>{},
   376=>{[:CloseParen]=>[:Expressions, 0]},
   377=>{},
   378=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selectors, 2]},
   379=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selector, 2]},
   380=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selector, 2]},
   381=>{},
   382=>{},
   383=>{},
   384=>{},
   385=>{},
   386=>{[:CloseParen]=>[:MoreFormalParameters, 3]},
   387=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 3]},
   388=>{[:Semicolon]=>[:FormalParameters, 4]},
   389=>{},
   390=>{},
   391=>{[:Semicolon]=>[:ForInit, 2]},
   392=>{},
   393=>{},
   394=>{},
   395=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:IdentifierSuffix, 3]},
   396=>{},
   397=>{[:CloseStaple]=>[:SubExpression, 2]},
   398=>{},
   399=>{},
   400=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Term, 2]},
   401=>{},
   402=>{},
   403=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   404=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selectors, 0]},
   405=>{},
   406=>{},
   407=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   408=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Creator, 1]},
   409=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Creator, 1]},
   410=>{},
   411=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   412=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Primary, 2]},
   413=>{},
   414=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:IdentifierSuffix, 1]},
   415=>{},
   416=>{[:CloseParen]=>[:Expressions, 0]},
   417=>{},
   418=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Arguments, 3]},
   419=>{[:CloseParen]=>[:Expressions, 2]},
   420=>{},
   421=>{},
   422=>{[:Comma, :CloseParen]=>[:SubExpression, 2]},
   423=>{},
   424=>{},
   425=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Term, 2]},
   426=>{},
   427=>{},
   428=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   429=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selectors, 0]},
   430=>{},
   431=>{},
   432=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 2]},
   433=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Creator, 1]},
   434=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Creator, 1]},
   435=>{},
   436=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   437=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Primary, 2]},
   438=>{},
   439=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:IdentifierSuffix, 1]},
   440=>{},
   441=>{[:CloseParen]=>[:Expressions, 0]},
   442=>{},
   443=>{[:Semicolon]=>[:MoreTerms, 3]},
   444=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Term, 2]},
   445=>{},
   446=>{},
   447=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   448=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selectors, 0]},
   449=>{},
   450=>{},
   451=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   452=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Creator, 1]},
   453=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Creator, 1]},
   454=>{},
   455=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   456=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Primary, 2]},
   457=>{},
   458=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:IdentifierSuffix, 1]},
   459=>{},
   460=>{[:CloseParen]=>[:Expressions, 0]},
   461=>{},
   462=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   463=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   464=>{[:CloseParen]=>[:Assignment, 3]},
   465=>{[:CloseParen]=>[:SubExpression, 3]},
   466=>{[:CloseParen]=>[:QualifiedIdentifier, 1]},
   467=>{[:CloseParen]=>[:MoreTerms, 0]},
   468=>{},
   469=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Term, 1]},
   470=>{},
   471=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selectors, 0]},
   472=>{},
   473=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Primary, 1]},
   474=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Primary, 1]},
   475=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Primary, 1]},
   476=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Literal, 1]},
   477=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Literal, 1]},
   478=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Literal, 1]},
   479=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Literal, 1]},
   480=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Literal, 1]},
   481=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Literal, 1]},
   482=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   483=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Primary, 3]},
   484=>{},
   485=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selectors, 2]},
   486=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selector, 2]},
   487=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selector, 2]},
   488=>{},
   489=>{},
   490=>{},
   491=>{},
   492=>{},
   493=>{},
   494=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:IdentifierSuffix, 2]},
   495=>{},
   496=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 3]},
   497=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selector, 3]},
   498=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Selector, 3]},
   499=>{},
   500=>{},
   501=>{},
   502=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   503=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 5]},
   504=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   505=>{},
   506=>{},
   507=>{},
   508=>{},
   509=>{},
   510=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   511=>{[:CloseBrace]=>[:BlockStatements, 0]},
   512=>{},
   513=>{},
   514=>{[:Idenfitifer, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   515=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 5]},
   516=>{[:CloseStaple]=>[:Assignment, 3]},
   517=>{[:CloseStaple]=>[:SubExpression, 3]},
   518=>{[:CloseStaple]=>[:QualifiedIdentifier, 1]},
   519=>{[:CloseStaple]=>[:MoreTerms, 0]},
   520=>{},
   521=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Term, 1]},
   522=>{},
   523=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selectors, 0]},
   524=>{},
   525=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Primary, 1]},
   526=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Primary, 1]},
   527=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Primary, 1]},
   528=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Literal, 1]},
   529=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Literal, 1]},
   530=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Literal, 1]},
   531=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Literal, 1]},
   532=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Literal, 1]},
   533=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Literal, 1]},
   534=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   535=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Primary, 3]},
   536=>{},
   537=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selectors, 2]},
   538=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selector, 2]},
   539=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selector, 2]},
   540=>{},
   541=>{},
   542=>{},
   543=>{},
   544=>{},
   545=>{},
   546=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:IdentifierSuffix, 2]},
   547=>{},
   548=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 3]},
   549=>{[:CloseParen]=>[:MoreExpressions, 0]},
   550=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   551=>{[:Comma, :CloseParen]=>[:SubExpression, 3]},
   552=>{[:Comma, :CloseParen]=>[:QualifiedIdentifier, 1]},
   553=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   554=>{},
   555=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Term, 1]},
   556=>{},
   557=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   558=>{},
   559=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   560=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   561=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   562=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   563=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   564=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   565=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   566=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   567=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   568=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   569=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Primary, 3]},
   570=>{},
   571=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selectors, 2]},
   572=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selector, 2]},
   573=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selector, 2]},
   574=>{},
   575=>{},
   576=>{},
   577=>{},
   578=>{},
   579=>{},
   580=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:IdentifierSuffix, 2]},
   581=>{},
   582=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Instanceof]=>[:QualifiedIdentifier, 3]},
   583=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Primary, 3]},
   584=>{},
   585=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selectors, 2]},
   586=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selector, 2]},
   587=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selector, 2]},
   588=>{},
   589=>{},
   590=>{},
   591=>{},
   592=>{},
   593=>{},
   594=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:IdentifierSuffix, 2]},
   595=>{},
   596=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   597=>{},
   598=>{[:CloseParen]=>[:MoreTerms, 3]},
   599=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Term, 2]},
   600=>{},
   601=>{},
   602=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   603=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selectors, 0]},
   604=>{},
   605=>{},
   606=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   607=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Creator, 1]},
   608=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Creator, 1]},
   609=>{},
   610=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   611=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Primary, 2]},
   612=>{},
   613=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   614=>{},
   615=>{[:CloseParen]=>[:Expressions, 0]},
   616=>{},
   617=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   618=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   619=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selector, 3]},
   620=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Selector, 3]},
   621=>{},
   622=>{},
   623=>{},
   624=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   625=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:IdentifierSuffix, 3]},
   626=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Arguments, 3]},
   627=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:Creator, 4]},
   628=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:ArrayCreator, 4]},
   629=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :Instanceof]=>[:ArrayCreator, 4]},
   630=>{},
   631=>{},
   632=>{},
   633=>{},
   634=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   635=>{},
   636=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   637=>{},
   638=>{},
   639=>{[:CloseParen]=>[:ForUpdate, 1]},
   640=>{},
   641=>{},
   642=>{[:CloseStaple]=>[:MoreTerms, 3]},
   643=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Term, 2]},
   644=>{},
   645=>{},
   646=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   647=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selectors, 0]},
   648=>{},
   649=>{},
   650=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   651=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Creator, 1]},
   652=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Creator, 1]},
   653=>{},
   654=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   655=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Primary, 2]},
   656=>{},
   657=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:IdentifierSuffix, 1]},
   658=>{},
   659=>{[:CloseParen]=>[:Expressions, 0]},
   660=>{},
   661=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   662=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   663=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selector, 3]},
   664=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Selector, 3]},
   665=>{},
   666=>{},
   667=>{},
   668=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   669=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:IdentifierSuffix, 3]},
   670=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Arguments, 3]},
   671=>{[:CloseParen]=>[:MoreExpressions, 3]},
   672=>{},
   673=>{[:Comma, :CloseParen]=>[:MoreTerms, 3]},
   674=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Term, 2]},
   675=>{},
   676=>{},
   677=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   678=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   679=>{},
   680=>{},
   681=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   682=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   683=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   684=>{},
   685=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 1]},
   686=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   687=>{},
   688=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   689=>{},
   690=>{[:CloseParen]=>[:Expressions, 0]},
   691=>{},
   692=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   693=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:UnmodifiedTerm, 4]},
   694=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selector, 3]},
   695=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Selector, 3]},
   696=>{},
   697=>{},
   698=>{},
   699=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   700=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:IdentifierSuffix, 3]},
   701=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Arguments, 3]},
   702=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   703=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   704=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selector, 3]},
   705=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Selector, 3]},
   706=>{},
   707=>{},
   708=>{},
   709=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   710=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:IdentifierSuffix, 3]},
   711=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Arguments, 3]},
   712=>{[:CloseParen]=>[:QualifiedIdentifier, 3]},
   713=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Primary, 3]},
   714=>{},
   715=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selectors, 2]},
   716=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selector, 2]},
   717=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selector, 2]},
   718=>{},
   719=>{},
   720=>{},
   721=>{},
   722=>{},
   723=>{},
   724=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:IdentifierSuffix, 2]},
   725=>{},
   726=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   727=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:Creator, 4]},
   728=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:ArrayCreator, 4]},
   729=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :Instanceof]=>[:ArrayCreator, 4]},
   730=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 7]},
   731=>{},
   732=>{},
   733=>{},
   734=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 3]},
   735=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Block, 3]},
   736=>{},
   737=>{},
   738=>{[:CloseStaple]=>[:QualifiedIdentifier, 3]},
   739=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Primary, 3]},
   740=>{},
   741=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selectors, 2]},
   742=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selector, 2]},
   743=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selector, 2]},
   744=>{},
   745=>{},
   746=>{},
   747=>{},
   748=>{},
   749=>{},
   750=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:IdentifierSuffix, 2]},
   751=>{},
   752=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   753=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:Creator, 4]},
   754=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:ArrayCreator, 4]},
   755=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :Instanceof]=>[:ArrayCreator, 4]},
   756=>{[:Comma, :CloseParen]=>[:QualifiedIdentifier, 3]},
   757=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Primary, 3]},
   758=>{},
   759=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selectors, 2]},
   760=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   761=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   762=>{},
   763=>{},
   764=>{},
   765=>{},
   766=>{},
   767=>{},
   768=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 2]},
   769=>{},
   770=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   771=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:Creator, 4]},
   772=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:ArrayCreator, 4]},
   773=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :Instanceof]=>[:ArrayCreator, 4]},
   774=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:Creator, 4]},
   775=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:ArrayCreator, 4]},
   776=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Semicolon]=>[:ArrayCreator, 4]},
   777=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   778=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   779=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selector, 3]},
   780=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Selector, 3]},
   781=>{},
   782=>{},
   783=>{},
   784=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   785=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   786=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Arguments, 3]},
   787=>{},
   788=>{},
   789=>{},
   790=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 8]},
   791=>{},
   792=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   793=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   794=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selector, 3]},
   795=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Selector, 3]},
   796=>{},
   797=>{},
   798=>{},
   799=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   800=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:IdentifierSuffix, 3]},
   801=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Arguments, 3]},
   802=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   803=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   804=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   805=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   806=>{},
   807=>{},
   808=>{},
   809=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen,
      :OpenParen,
      :OpenStaple]=>[:QualifiedIdentifier, 3]},
   810=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   811=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Arguments, 3]},
   812=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:Creator, 4]},
   813=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:ArrayCreator, 4]},
   814=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseParen]=>[:ArrayCreator, 4]},
   815=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   816=>{},
   817=>{},
   818=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   819=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace]=>[:Statement, 9]},
   820=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:Creator, 4]},
   821=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:ArrayCreator, 4]},
   822=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :CloseStaple]=>[:ArrayCreator, 4]},
   823=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:Creator, 4]},
   824=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   825=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   826=>{},
   827=>{},
   828=>{},
   829=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 7]},
   830=>{},
   831=>{},
   832=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 8]},
   833=>{},
   834=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Idenfitifer,
      :Not,
      :Minus,
      :OpenParen,
      :New,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :CloseBrace,
      :Else]=>[:Statement, 9]}}}