PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Semicolon=>9,
     :Modifier=>10,
     :Public=>11,
     :Protected=>12,
     :Static=>13,
     :Abstract=>14,
     :Final=>15,
     :Native=>16},
   3=>{:QualifiedIdentifier=>17, :Identifier=>18},
   4=>{:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5},
   5=>{:QualifiedImportIdentifier=>20, :Identifier=>21},
   8=>
    {:ClassDeclaration=>22,
     :InterfaceDeclaration=>23,
     :Class=>24,
     :Interface=>25},
   10=>
    {:Modifiers=>26,
     :Modifier=>10,
     :Public=>11,
     :Protected=>12,
     :Static=>13,
     :Abstract=>14,
     :Final=>15,
     :Native=>16},
   17=>{:Semicolon=>27},
   18=>{:Dot=>28},
   20=>{:Semicolon=>29},
   21=>{:Dot=>30},
   24=>{:Identifier=>31},
   25=>{:Identifier=>32},
   27=>{:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5},
   28=>{:QualifiedIdentifier=>34, :Identifier=>18},
   30=>{:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21},
   31=>{:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40},
   32=>{:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43},
   33=>
    {:TypeDeclaration=>44,
     :Modifiers=>8,
     :Semicolon=>9,
     :Modifier=>10,
     :Public=>11,
     :Protected=>12,
     :Static=>13,
     :Abstract=>14,
     :Final=>15,
     :Native=>16},
   38=>{:QualifiedIdentifier=>45, :Identifier=>46},
   39=>{:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49},
   40=>
    {:ClassBodyDeclarations=>50,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   42=>{:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49},
   43=>
    {:InterfaceBodyDeclarations=>62,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   45=>{:ClassBody=>66, :Implements=>67, :OpenBrace=>40},
   46=>{:Dot=>68},
   47=>{:ClassBody=>69, :OpenBrace=>40},
   48=>{:Comma=>70},
   49=>{:Dot=>71},
   50=>{:CloseBrace=>72},
   51=>
    {:ClassBodyDeclarations=>73,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   53=>
    {:Type=>74,
     :Void=>75,
     :Identifier=>76,
     :QualifiedIdentifier=>77,
     :BasicType=>78,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83},
   54=>
    {:Modifiers=>84,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   61=>{:InterfaceBody=>85, :OpenBrace=>43},
   62=>{:CloseBrace=>86},
   63=>
    {:InterfaceBodyDeclarations=>87,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   65=>
    {:Type=>88,
     :Void=>89,
     :QualifiedIdentifier=>77,
     :BasicType=>78,
     :Identifier=>90,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83},
   67=>{:TypeList=>91, :QualifiedIdentifier=>48, :Identifier=>49},
   68=>{:QualifiedIdentifier=>92, :Identifier=>46},
   70=>{:TypeList=>93, :QualifiedIdentifier=>48, :Identifier=>49},
   71=>{:QualifiedIdentifier=>94, :Identifier=>49},
   74=>{:Identifier=>95},
   75=>{:Identifier=>96},
   76=>
    {:ConstructorDeclaratorRest=>97,
     :Dot=>98,
     :FormalParameters=>99,
     :OpenParen=>100},
   77=>{:OpenStaple=>101},
   78=>{:OpenStaple=>102},
   88=>{:Identifier=>103},
   89=>{:Identifier=>104},
   90=>{:Dot=>98},
   91=>{:ClassBody=>105, :OpenBrace=>40},
   95=>
    {:Semicolon=>106,
     :Equals=>107,
     :MethodDeclaratorRest=>108,
     :FormalParameters=>109,
     :OpenParen=>110},
   96=>{:MethodDeclaratorRest=>111, :FormalParameters=>109, :OpenParen=>110},
   98=>{:QualifiedIdentifier=>112, :Identifier=>90},
   99=>{:MethodBody=>113, :Block=>114, :OpenBrace=>115},
   100=>
    {:CloseParen=>116,
     :FormalParameterList=>117,
     :FormalParameter=>118,
     :Type=>119,
     :QualifiedIdentifier=>77,
     :BasicType=>78,
     :Identifier=>90,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83},
   101=>{:CloseStaple=>120},
   102=>{:CloseStaple=>121},
   103=>
    {:InterfaceMemberDeclRest=>122, :FormalParameters=>123, :OpenParen=>124},
   104=>
    {:InterfaceMemberDeclRest=>125, :FormalParameters=>123, :OpenParen=>124},
   107=>
    {:Expression=>126,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   109=>{:MethodBody=>145, :Semicolon=>146, :Block=>114, :OpenBrace=>115},
   110=>
    {:CloseParen=>147,
     :FormalParameterList=>148,
     :FormalParameter=>118,
     :Type=>119,
     :QualifiedIdentifier=>77,
     :BasicType=>78,
     :Identifier=>90,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83},
   115=>
    {:CloseBrace=>149,
     :BlockStatements=>150,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>78,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   117=>{:CloseParen=>165},
   118=>{:Comma=>166},
   119=>{:Identifier=>167},
   123=>{:Semicolon=>168},
   124=>
    {:CloseParen=>169,
     :FormalParameterList=>170,
     :FormalParameter=>118,
     :Type=>119,
     :QualifiedIdentifier=>77,
     :BasicType=>78,
     :Identifier=>90,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83},
   126=>{:Semicolon=>171},
   128=>{:Equals=>172},
   129=>
    {:MoreTerms=>173,
     :Infixop=>174,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   130=>
    {:Term=>191,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   131=>
    {:Expression=>192,
     :BasicType=>193,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   132=>{:Selectors=>215, :Selector=>216, :Dot=>217, :OpenStaple=>218},
   133=>
    {:Selectors=>219,
     :Arguments=>220,
     :Selector=>216,
     :OpenParen=>221,
     :Dot=>217,
     :OpenStaple=>218},
   137=>
    {:Creator=>222,
     :BasicType=>223,
     :QualifiedIdentifier=>224,
     :Byte=>225,
     :Char=>226,
     :Int=>227,
     :Boolean=>228,
     :Short=>229,
     :Identifier=>230},
   139=>{:Dot=>231},
   148=>{:CloseParen=>232},
   150=>{:CloseBrace=>233},
   151=>
    {:BlockStatements=>234,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>78,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   154=>{:VariableDeclarator=>235, :Identifier=>236},
   156=>{:OpenParen=>237},
   157=>{:OpenParen=>238},
   158=>{:OpenParen=>239},
   159=>
    {:Semicolon=>240,
     :Expression=>241,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   160=>{:Semicolon=>242},
   162=>
    {:OpenStaple=>243,
     :Selectors=>219,
     :Arguments=>220,
     :Selector=>216,
     :OpenParen=>221,
     :Dot=>217},
   163=>
    {:CloseBrace=>244,
     :BlockStatements=>245,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>78,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   164=>{:Dot=>246},
   166=>
    {:FormalParameterList=>247,
     :FormalParameter=>118,
     :Type=>119,
     :QualifiedIdentifier=>77,
     :BasicType=>78,
     :Identifier=>90,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83},
   170=>{:CloseParen=>248},
   172=>
    {:Expression=>249,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   174=>
    {:Term=>250,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   192=>{:CloseParen=>251, :OpenStaple=>252},
   193=>{:CloseParen=>253, :OpenStaple=>254},
   195=>{:Equals=>255},
   201=>
    {:MoreTerms=>256,
     :Infixop=>257,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   202=>
    {:Term=>258,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   203=>
    {:Expression=>259,
     :BasicType=>260,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   204=>{:Selectors=>261, :Selector=>262, :Dot=>263, :OpenStaple=>264},
   205=>
    {:Selectors=>265,
     :Arguments=>266,
     :Selector=>262,
     :OpenParen=>267,
     :Dot=>263,
     :OpenStaple=>264},
   207=>
    {:Creator=>268,
     :BasicType=>269,
     :QualifiedIdentifier=>270,
     :Byte=>225,
     :Char=>226,
     :Int=>227,
     :Boolean=>228,
     :Short=>229,
     :Identifier=>230},
   209=>{:Dot=>271},
   216=>{:Selectors=>272, :Selector=>216, :Dot=>217, :OpenStaple=>218},
   217=>{:Identifier=>273},
   218=>
    {:Expression=>274,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   220=>{:Selectors=>291, :Selector=>216, :Dot=>217, :OpenStaple=>218},
   221=>
    {:Expressions=>292,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   223=>{:ArrayCreator=>310, :OpenStaple=>311},
   224=>
    {:ArrayCreator=>312, :Arguments=>313, :OpenStaple=>311, :OpenParen=>314},
   230=>{:Dot=>315},
   231=>{:QualifiedIdentifier=>316, :Identifier=>139},
   235=>{:Semicolon=>317},
   236=>{:Equals=>318, :OpenStaple=>319},
   237=>
    {:Expression=>320,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   238=>
    {:ForInit=>328,
     :Expression=>329,
     :Type=>330,
     :Assignment=>127,
     :SubExpression=>128,
     :QualifiedIdentifier=>162,
     :BasicType=>78,
     :Term=>129,
     :Identifier=>164,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   239=>
    {:Expression=>331,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   241=>{:Semicolon=>332},
   243=>
    {:CloseStaple=>120,
     :Expression=>274,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   245=>{:CloseBrace=>333},
   246=>{:QualifiedIdentifier=>334, :Identifier=>164},
   250=>
    {:MoreTerms=>335,
     :Infixop=>174,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   251=>
    {:Term=>336,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   252=>{:CloseStaple=>337},
   253=>
    {:Term=>338,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   254=>{:CloseStaple=>339},
   255=>
    {:Expression=>340,
     :Assignment=>194,
     :SubExpression=>195,
     :Term=>201,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   257=>
    {:Term=>341,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   259=>{:CloseParen=>342, :OpenStaple=>343},
   260=>{:CloseParen=>344, :OpenStaple=>345},
   262=>{:Selectors=>346, :Selector=>262, :Dot=>263, :OpenStaple=>264},
   263=>{:Identifier=>347},
   264=>
    {:Expression=>348,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   266=>{:Selectors=>349, :Selector=>262, :Dot=>263, :OpenStaple=>264},
   267=>
    {:Expressions=>350,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   269=>{:ArrayCreator=>351, :OpenStaple=>352},
   270=>
    {:ArrayCreator=>353, :Arguments=>354, :OpenStaple=>352, :OpenParen=>355},
   271=>{:QualifiedIdentifier=>356, :Identifier=>209},
   273=>{:Arguments=>357, :OpenParen=>221},
   274=>{:CloseStaple=>358},
   276=>{:Equals=>359},
   277=>
    {:MoreTerms=>360,
     :Infixop=>361,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   278=>
    {:Term=>362,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   279=>
    {:Expression=>363,
     :BasicType=>364,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   280=>{:Selectors=>365, :Selector=>366, :Dot=>367, :OpenStaple=>368},
   281=>
    {:Selectors=>369,
     :Arguments=>370,
     :Selector=>366,
     :OpenParen=>371,
     :Dot=>367,
     :OpenStaple=>368},
   283=>
    {:Creator=>372,
     :BasicType=>373,
     :QualifiedIdentifier=>374,
     :Byte=>225,
     :Char=>226,
     :Int=>227,
     :Boolean=>228,
     :Short=>229,
     :Identifier=>230},
   285=>{:Dot=>375},
   292=>{:CloseParen=>376},
   293=>{:MoreExpressions=>377, :Comma=>378},
   295=>{:Equals=>379},
   296=>
    {:MoreTerms=>380,
     :Infixop=>381,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   297=>
    {:Term=>382,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   298=>
    {:Expression=>383,
     :BasicType=>384,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   299=>{:Selectors=>385, :Selector=>386, :Dot=>387, :OpenStaple=>388},
   300=>
    {:Selectors=>389,
     :Arguments=>390,
     :Selector=>386,
     :OpenParen=>391,
     :Dot=>387,
     :OpenStaple=>388},
   302=>
    {:Creator=>392,
     :BasicType=>393,
     :QualifiedIdentifier=>394,
     :Byte=>225,
     :Char=>226,
     :Int=>227,
     :Boolean=>228,
     :Short=>229,
     :Identifier=>230},
   304=>{:Dot=>395},
   311=>
    {:CloseStaple=>396,
     :Expression=>397,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   313=>{:ClassBody=>398, :OpenBrace=>399},
   314=>
    {:Expressions=>400,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   315=>{:QualifiedIdentifier=>401, :Identifier=>230},
   318=>
    {:Expression=>402,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   319=>{:CloseStaple=>403},
   320=>{:CloseParen=>404},
   322=>{:Equals=>405},
   323=>
    {:MoreTerms=>406,
     :Infixop=>407,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   324=>
    {:Term=>408,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   325=>
    {:Expression=>409,
     :BasicType=>410,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   326=>{:Selectors=>411, :Selector=>412, :Dot=>263, :OpenStaple=>264},
   327=>
    {:Selectors=>413,
     :Arguments=>414,
     :Selector=>412,
     :OpenParen=>267,
     :Dot=>263,
     :OpenStaple=>264},
   328=>{:Semicolon=>415},
   330=>{:VariableDeclarator=>416, :Identifier=>236},
   331=>{:CloseParen=>417},
   337=>{:CloseParen=>418},
   339=>{:CloseParen=>419},
   341=>
    {:MoreTerms=>420,
     :Infixop=>257,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   342=>
    {:Term=>421,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   343=>{:CloseStaple=>422},
   344=>
    {:Term=>423,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   345=>{:CloseStaple=>424},
   347=>{:Arguments=>425, :OpenParen=>267},
   348=>{:CloseStaple=>426},
   350=>{:CloseParen=>427},
   352=>
    {:CloseStaple=>428,
     :Expression=>429,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   354=>{:ClassBody=>430, :OpenBrace=>431},
   355=>
    {:Expressions=>432,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   359=>
    {:Expression=>433,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   361=>
    {:Term=>434,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   363=>{:CloseParen=>435, :OpenStaple=>436},
   364=>{:CloseParen=>437, :OpenStaple=>438},
   366=>{:Selectors=>439, :Selector=>366, :Dot=>367, :OpenStaple=>368},
   367=>{:Identifier=>440},
   368=>
    {:Expression=>441,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   370=>{:Selectors=>442, :Selector=>366, :Dot=>367, :OpenStaple=>368},
   371=>
    {:Expressions=>443,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   373=>{:ArrayCreator=>444, :OpenStaple=>445},
   374=>
    {:ArrayCreator=>446, :Arguments=>447, :OpenStaple=>445, :OpenParen=>448},
   375=>{:QualifiedIdentifier=>449, :Identifier=>285},
   378=>
    {:Expression=>450,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   379=>
    {:Expression=>451,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   381=>
    {:Term=>452,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   383=>{:CloseParen=>453, :OpenStaple=>454},
   384=>{:CloseParen=>455, :OpenStaple=>456},
   386=>{:Selectors=>457, :Selector=>386, :Dot=>387, :OpenStaple=>388},
   387=>{:Identifier=>458},
   388=>
    {:Expression=>459,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   390=>{:Selectors=>460, :Selector=>386, :Dot=>387, :OpenStaple=>388},
   391=>
    {:Expressions=>461,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   393=>{:ArrayCreator=>462, :OpenStaple=>463},
   394=>
    {:ArrayCreator=>464, :Arguments=>465, :OpenStaple=>463, :OpenParen=>466},
   395=>{:QualifiedIdentifier=>467, :Identifier=>304},
   397=>{:CloseStaple=>468},
   399=>
    {:ClassBodyDeclarations=>469,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   400=>{:CloseParen=>470},
   403=>{:Equals=>471},
   404=>
    {:Statement=>472,
     :Block=>473,
     :If=>474,
     :For=>475,
     :While=>476,
     :Return=>477,
     :Expression=>478,
     :Semicolon=>479,
     :OpenBrace=>480,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   405=>
    {:Expression=>481,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   407=>
    {:Term=>482,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   409=>{:CloseParen=>483, :OpenStaple=>484},
   410=>{:CloseParen=>485, :OpenStaple=>486},
   412=>{:Selectors=>487, :Selector=>412, :Dot=>263, :OpenStaple=>264},
   414=>{:Selectors=>488, :Selector=>412, :Dot=>263, :OpenStaple=>264},
   415=>
    {:Semicolon=>489,
     :Expression=>490,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   417=>
    {:Statement=>491,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   418=>
    {:Term=>492,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   419=>
    {:Term=>493,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   422=>{:CloseParen=>494},
   424=>{:CloseParen=>495},
   429=>{:CloseStaple=>496},
   431=>
    {:ClassBodyDeclarations=>497,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   432=>{:CloseParen=>498},
   434=>
    {:MoreTerms=>499,
     :Infixop=>361,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   435=>
    {:Term=>500,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   436=>{:CloseStaple=>501},
   437=>
    {:Term=>502,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   438=>{:CloseStaple=>503},
   440=>{:Arguments=>504, :OpenParen=>371},
   441=>{:CloseStaple=>505},
   443=>{:CloseParen=>506},
   445=>
    {:CloseStaple=>507,
     :Expression=>508,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   447=>{:ClassBody=>509, :OpenBrace=>510},
   448=>
    {:Expressions=>511,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   450=>{:MoreExpressions=>512, :Comma=>378},
   452=>
    {:MoreTerms=>513,
     :Infixop=>381,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   453=>
    {:Term=>514,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   454=>{:CloseStaple=>515},
   455=>
    {:Term=>516,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   456=>{:CloseStaple=>517},
   458=>{:Arguments=>518, :OpenParen=>391},
   459=>{:CloseStaple=>519},
   461=>{:CloseParen=>520},
   463=>
    {:CloseStaple=>521,
     :Expression=>522,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   465=>{:ClassBody=>523, :OpenBrace=>524},
   466=>
    {:Expressions=>525,
     :Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   469=>{:CloseBrace=>526},
   471=>
    {:Expression=>527,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   472=>{:Else=>528},
   474=>{:OpenParen=>529},
   475=>{:OpenParen=>530},
   476=>{:OpenParen=>531},
   477=>
    {:Semicolon=>532,
     :Expression=>533,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   478=>{:Semicolon=>534},
   480=>
    {:CloseBrace=>535,
     :BlockStatements=>536,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :QualifiedIdentifier=>162,
     :BasicType=>78,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   482=>
    {:MoreTerms=>537,
     :Infixop=>407,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   483=>
    {:Term=>538,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   484=>{:CloseStaple=>539},
   485=>
    {:Term=>540,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   486=>{:CloseStaple=>541},
   489=>
    {:ForUpdate=>542,
     :Expression=>543,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   490=>{:Semicolon=>544},
   494=>
    {:Term=>545,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   495=>
    {:Term=>546,
     :TermModifier=>202,
     :OpenParen=>203,
     :Primary=>204,
     :QualifiedIdentifier=>205,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   497=>{:CloseBrace=>547},
   501=>{:CloseParen=>548},
   503=>{:CloseParen=>549},
   508=>{:CloseStaple=>550},
   510=>
    {:ClassBodyDeclarations=>551,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   511=>{:CloseParen=>552},
   515=>{:CloseParen=>553},
   517=>{:CloseParen=>554},
   522=>{:CloseStaple=>555},
   524=>
    {:ClassBodyDeclarations=>556,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   525=>{:CloseParen=>557},
   528=>
    {:Statement=>558,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   529=>
    {:Expression=>559,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   530=>
    {:ForInit=>560,
     :Expression=>329,
     :Type=>330,
     :Assignment=>127,
     :SubExpression=>128,
     :QualifiedIdentifier=>162,
     :BasicType=>78,
     :Term=>129,
     :Identifier=>164,
     :Byte=>79,
     :Char=>80,
     :Int=>81,
     :Boolean=>82,
     :Short=>83,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   531=>
    {:Expression=>561,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   533=>{:Semicolon=>562},
   536=>{:CloseBrace=>563},
   539=>{:CloseParen=>564},
   541=>{:CloseParen=>565},
   542=>{:CloseParen=>566},
   544=>
    {:ForUpdate=>567,
     :Expression=>543,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   548=>
    {:Term=>568,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   549=>
    {:Term=>569,
     :TermModifier=>278,
     :OpenParen=>279,
     :Primary=>280,
     :QualifiedIdentifier=>281,
     :Not=>134,
     :Minus=>135,
     :This=>282,
     :New=>283,
     :Literal=>284,
     :Identifier=>285,
     :IntegerLiteral=>286,
     :CharacterLiteral=>287,
     :StringLiteral=>288,
     :BooleanLiteral=>289,
     :NullLiteral=>290},
   551=>{:CloseBrace=>570},
   553=>
    {:Term=>571,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   554=>
    {:Term=>572,
     :TermModifier=>297,
     :OpenParen=>298,
     :Primary=>299,
     :QualifiedIdentifier=>300,
     :Not=>134,
     :Minus=>135,
     :This=>301,
     :New=>302,
     :Literal=>303,
     :Identifier=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309},
   556=>{:CloseBrace=>573},
   559=>{:CloseParen=>574},
   560=>{:Semicolon=>575},
   561=>{:CloseParen=>576},
   564=>
    {:Term=>577,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   565=>
    {:Term=>578,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   566=>
    {:Statement=>579,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   567=>{:CloseParen=>580},
   574=>
    {:Statement=>581,
     :Block=>473,
     :If=>474,
     :For=>475,
     :While=>476,
     :Return=>477,
     :Expression=>478,
     :Semicolon=>479,
     :OpenBrace=>480,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   575=>
    {:Semicolon=>582,
     :Expression=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   576=>
    {:Statement=>584,
     :Block=>473,
     :If=>474,
     :For=>475,
     :While=>476,
     :Return=>477,
     :Expression=>478,
     :Semicolon=>479,
     :OpenBrace=>480,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   580=>
    {:Statement=>585,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   581=>{:Else=>586},
   582=>
    {:ForUpdate=>587,
     :Expression=>543,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   583=>{:Semicolon=>588},
   586=>
    {:Statement=>589,
     :Block=>473,
     :If=>474,
     :For=>475,
     :While=>476,
     :Return=>477,
     :Expression=>478,
     :Semicolon=>479,
     :OpenBrace=>480,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   587=>{:CloseParen=>590},
   588=>
    {:ForUpdate=>591,
     :Expression=>543,
     :Assignment=>321,
     :SubExpression=>322,
     :Term=>323,
     :TermModifier=>324,
     :OpenParen=>325,
     :Primary=>326,
     :QualifiedIdentifier=>327,
     :Not=>134,
     :Minus=>135,
     :This=>206,
     :New=>207,
     :Literal=>208,
     :Identifier=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   590=>
    {:Statement=>592,
     :Block=>473,
     :If=>474,
     :For=>475,
     :While=>476,
     :Return=>477,
     :Expression=>478,
     :Semicolon=>479,
     :OpenBrace=>480,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   591=>{:CloseParen=>593},
   593=>
    {:Statement=>594,
     :Block=>473,
     :If=>474,
     :For=>475,
     :While=>476,
     :Return=>477,
     :Expression=>478,
     :Semicolon=>479,
     :OpenBrace=>480,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :OpenParen=>131,
     :Primary=>132,
     :QualifiedIdentifier=>133,
     :Not=>134,
     :Minus=>135,
     :This=>136,
     :New=>137,
     :Literal=>138,
     :Identifier=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:EndProgram]=>[:TypeDeclaration, 1]},
   10=>{[:Class, :Interface]=>[:Modifiers, 0]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   17=>{},
   18=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   19=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   20=>{},
   21=>{[:Semicolon]=>[:QualifiedImportIdentifier, 1]},
   22=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   23=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   24=>{},
   25=>{},
   26=>{[:Class, :Interface]=>[:Modifiers, 2]},
   27=>
    {[:EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   28=>{},
   29=>
    {[:Import,
      :EndProgram,
      :Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 3]},
   30=>{},
   31=>{},
   32=>{},
   33=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   34=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   35=>{[:Semicolon]=>[:QualifiedImportIdentifier, 3]},
   36=>{[:Semicolon]=>[:QualifiedImportIdentifier, 3]},
   37=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   38=>{},
   39=>{},
   40=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   41=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   42=>{},
   43=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   44=>{[:EndProgram]=>[:CompilationUnit, 5]},
   45=>{},
   46=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   47=>{},
   48=>{[:OpenBrace]=>[:TypeList, 1]},
   49=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]},
   50=>{},
   51=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   52=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   53=>{},
   54=>
    {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   55=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   61=>{},
   62=>{},
   63=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   64=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   65=>{},
   66=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   67=>{},
   68=>{},
   69=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   70=>{},
   71=>{},
   72=>{[:EndProgram]=>[:ClassBody, 3]},
   73=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   74=>{},
   75=>{},
   76=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   77=>{[:Identifier]=>[:Type, 1]},
   78=>{[:Identifier]=>[:Type, 1]},
   79=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   80=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   81=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   82=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   83=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   84=>
    {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 2]},
   85=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   86=>{[:EndProgram]=>[:InterfaceBody, 3]},
   87=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   88=>{},
   89=>{},
   90=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   91=>{},
   92=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   93=>{[:OpenBrace]=>[:TypeList, 3]},
   94=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]},
   95=>{},
   96=>{},
   97=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 3]},
   98=>{},
   99=>{},
   100=>{},
   101=>{},
   102=>{},
   103=>{},
   104=>{},
   105=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   106=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   107=>{},
   108=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   109=>{},
   110=>{},
   111=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   112=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   113=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   114=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodBody, 1]},
   115=>{},
   116=>{[:OpenBrace]=>[:FormalParameters, 2]},
   117=>{},
   118=>{[:CloseParen]=>[:FormalParameterList, 1]},
   119=>{},
   120=>{[:Identifier]=>[:Type, 3]},
   121=>{[:Identifier]=>[:Type, 3]},
   122=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 4]},
   123=>{},
   124=>{},
   125=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 4]},
   126=>{},
   127=>{[:Semicolon]=>[:Expression, 1]},
   128=>{[:Semicolon]=>[:Expression, 1]},
   129=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   130=>{},
   131=>{},
   132=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   133=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   134=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:TermModifier, 1]},
   135=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:TermModifier, 1]},
   136=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   137=>{},
   138=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   139=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   140=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   141=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   142=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   143=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   144=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   145=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   146=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   147=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   148=>{},
   149=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 2]},
   150=>{},
   151=>{[:CloseBrace]=>[:BlockStatements, 1]},
   152=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:BlockStatement, 1]},
   153=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:BlockStatement, 1]},
   154=>{},
   155=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 1]},
   156=>{},
   157=>{},
   158=>{},
   159=>{},
   160=>{},
   161=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 1]},
   162=>
    {[:Identifier]=>[:Type, 1],
     [:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   163=>{},
   164=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   165=>{[:OpenBrace]=>[:FormalParameters, 3]},
   166=>{},
   167=>{[:CloseParen, :Comma]=>[:FormalParameter, 2]},
   168=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 2]},
   169=>{[:Semicolon]=>[:FormalParameters, 2]},
   170=>{},
   171=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 6]},
   172=>{},
   173=>{[:Semicolon, :Equals]=>[:SubExpression, 2]},
   174=>{},
   175=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   176=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   177=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   178=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   179=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   180=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   181=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   182=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   183=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   184=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   185=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   186=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   187=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   188=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   189=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   190=>
    {[:OpenParen,
      :Identifier,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Infixop, 1]},
   191=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   192=>{},
   193=>{},
   194=>{[:CloseParen, :OpenStaple]=>[:Expression, 1]},
   195=>{[:CloseParen, :OpenStaple]=>[:Expression, 1]},
   196=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]},
   197=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]},
   198=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]},
   199=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]},
   200=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]},
   201=>{[:CloseParen, :OpenStaple, :Equals]=>[:MoreTerms, 0]},
   202=>{},
   203=>{},
   204=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Selectors, 0]},
   205=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Selectors, 0]},
   206=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   207=>{},
   208=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   209=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   210=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   211=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   212=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   213=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   214=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   215=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   216=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   217=>{},
   218=>{},
   219=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   220=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   221=>{[:CloseParen]=>[:Expressions, 0]},
   222=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   223=>{},
   224=>{},
   225=>{[:OpenStaple]=>[:BasicType, 1]},
   226=>{[:OpenStaple]=>[:BasicType, 1]},
   227=>{[:OpenStaple]=>[:BasicType, 1]},
   228=>{[:OpenStaple]=>[:BasicType, 1]},
   229=>{[:OpenStaple]=>[:BasicType, 1]},
   230=>{[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 1]},
   231=>{},
   232=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]},
   233=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 3]},
   234=>{[:CloseBrace]=>[:BlockStatements, 2]},
   235=>{},
   236=>{},
   237=>{},
   238=>{[:Semicolon]=>[:ForInit, 0]},
   239=>{},
   240=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 2]},
   241=>{},
   242=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 2]},
   243=>{},
   244=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Block, 2]},
   245=>{},
   246=>{},
   247=>{[:CloseParen]=>[:FormalParameterList, 3]},
   248=>{[:Semicolon]=>[:FormalParameters, 3]},
   249=>{[:Semicolon]=>[:Assignment, 3]},
   250=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   251=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 3]},
   252=>{},
   253=>{},
   254=>{},
   255=>{},
   256=>{[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 2]},
   257=>{},
   258=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 2]},
   259=>{},
   260=>{},
   261=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 2]},
   262=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Selectors, 0]},
   263=>{},
   264=>{},
   265=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 2]},
   266=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Selectors, 0]},
   267=>{[:CloseParen]=>[:Expressions, 0]},
   268=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   269=>{},
   270=>{},
   271=>{},
   272=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 2]},
   273=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   274=>{},
   275=>{[:CloseStaple]=>[:Expression, 1]},
   276=>{[:CloseStaple]=>[:Expression, 1]},
   277=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   278=>{},
   279=>{},
   280=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   281=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   282=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   283=>{},
   284=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   285=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   286=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   287=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   288=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   289=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   290=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   291=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 3]},
   292=>{},
   293=>{[:CloseParen]=>[:MoreExpressions, 0]},
   294=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   295=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   296=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   297=>{},
   298=>{},
   299=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   300=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   302=>{},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   304=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   305=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   306=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   307=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   308=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   309=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   310=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   311=>{},
   312=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   313=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   314=>{[:CloseParen]=>[:Expressions, 0]},
   315=>{},
   316=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   317=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:LocalVariableDeclarationStatement, 3]},
   318=>{},
   319=>{},
   320=>{},
   321=>{[:CloseParen]=>[:Expression, 1]},
   322=>{[:CloseParen]=>[:Expression, 1]},
   323=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   324=>{},
   325=>{},
   326=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   327=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   328=>{},
   329=>{[:Semicolon]=>[:ForInit, 1]},
   330=>{},
   331=>{},
   332=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 3]},
   333=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Block, 3]},
   334=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   335=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]},
   336=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 4]},
   337=>{},
   338=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 4]},
   339=>{},
   340=>{[:CloseParen, :OpenStaple]=>[:Assignment, 3]},
   341=>{[:CloseParen, :OpenStaple, :Equals]=>[:MoreTerms, 0]},
   342=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   343=>{},
   344=>{},
   345=>{},
   346=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Selectors, 2]},
   347=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   348=>{},
   349=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 3]},
   350=>{},
   351=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   352=>{},
   353=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   354=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   355=>{[:CloseParen]=>[:Expressions, 0]},
   356=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   357=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   358=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   359=>{},
   360=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]},
   361=>{},
   362=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   363=>{},
   364=>{},
   365=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   366=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   367=>{},
   368=>{},
   369=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   370=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   371=>{[:CloseParen]=>[:Expressions, 0]},
   372=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   373=>{},
   374=>{},
   375=>{},
   376=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Arguments, 3]},
   377=>{[:CloseParen]=>[:Expressions, 2]},
   378=>{},
   379=>{},
   380=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]},
   381=>{},
   382=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   383=>{},
   384=>{},
   385=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   386=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   387=>{},
   388=>{},
   389=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   390=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   391=>{[:CloseParen]=>[:Expressions, 0]},
   392=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   393=>{},
   394=>{},
   395=>{},
   396=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 2]},
   397=>{},
   398=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 3]},
   399=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   400=>{},
   401=>{[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 3]},
   402=>{[:Semicolon]=>[:VariableDeclarator, 3]},
   403=>{},
   404=>{},
   405=>{},
   406=>{[:CloseParen, :Equals]=>[:SubExpression, 2]},
   407=>{},
   408=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   409=>{},
   410=>{},
   411=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   412=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   413=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   414=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   415=>{},
   416=>{[:Semicolon]=>[:ForInit, 2]},
   417=>{},
   418=>{},
   419=>{},
   420=>{[:CloseParen, :OpenStaple, :Equals]=>[:MoreTerms, 3]},
   421=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 4]},
   422=>{},
   423=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 4]},
   424=>{},
   425=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   426=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   427=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   428=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 2]},
   429=>{},
   430=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 3]},
   431=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   432=>{},
   433=>{[:CloseStaple]=>[:Assignment, 3]},
   434=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   435=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 3]},
   436=>{},
   437=>{},
   438=>{},
   439=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 2]},
   440=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   441=>{},
   442=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 3]},
   443=>{},
   444=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   445=>{},
   446=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   447=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   448=>{[:CloseParen]=>[:Expressions, 0]},
   449=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   450=>{[:CloseParen]=>[:MoreExpressions, 0]},
   451=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   452=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   453=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   454=>{},
   455=>{},
   456=>{},
   457=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   458=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   459=>{},
   460=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 3]},
   461=>{},
   462=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   463=>{},
   464=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   465=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   466=>{[:CloseParen]=>[:Expressions, 0]},
   467=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   468=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 3]},
   469=>{},
   470=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals,
      :OpenBrace]=>[:Arguments, 3]},
   471=>{},
   472=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 5]},
   473=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 1]},
   474=>{},
   475=>{},
   476=>{},
   477=>{},
   478=>{},
   479=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 1]},
   480=>{},
   481=>{[:CloseParen]=>[:Assignment, 3]},
   482=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   483=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   484=>{},
   485=>{},
   486=>{},
   487=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   488=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 3]},
   489=>{[:CloseParen]=>[:ForUpdate, 0]},
   490=>{},
   491=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 5]},
   492=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 6]},
   493=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 6]},
   494=>{},
   495=>{},
   496=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 3]},
   497=>{},
   498=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals,
      :OpenBrace]=>[:Arguments, 3]},
   499=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]},
   500=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 4]},
   501=>{},
   502=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 4]},
   503=>{},
   504=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   505=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   506=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Arguments, 3]},
   507=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 2]},
   508=>{},
   509=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 3]},
   510=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   511=>{},
   512=>{[:CloseParen]=>[:MoreExpressions, 3]},
   513=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   514=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 4]},
   515=>{},
   516=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 4]},
   517=>{},
   518=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   519=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   520=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   521=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 2]},
   522=>{},
   523=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 3]},
   524=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   525=>{},
   526=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ClassBody, 3]},
   527=>{[:Semicolon]=>[:VariableDeclarator, 5]},
   528=>{},
   529=>{},
   530=>{[:Semicolon]=>[:ForInit, 0]},
   531=>{},
   532=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 2]},
   533=>{},
   534=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 2]},
   535=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Block, 2]},
   536=>{},
   537=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]},
   538=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 4]},
   539=>{},
   540=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 4]},
   541=>{},
   542=>{},
   543=>{[:CloseParen]=>[:ForUpdate, 1]},
   544=>{[:CloseParen]=>[:ForUpdate, 0]},
   545=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 6]},
   546=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenStaple,
      :Equals]=>[:Term, 6]},
   547=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ClassBody, 3]},
   548=>{},
   549=>{},
   550=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 3]},
   551=>{},
   552=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals,
      :OpenBrace]=>[:Arguments, 3]},
   553=>{},
   554=>{},
   555=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 3]},
   556=>{},
   557=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals,
      :OpenBrace]=>[:Arguments, 3]},
   558=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 7]},
   559=>{},
   560=>{},
   561=>{},
   562=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 3]},
   563=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Block, 3]},
   564=>{},
   565=>{},
   566=>{},
   567=>{},
   568=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 6]},
   569=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 6]},
   570=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ClassBody, 3]},
   571=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 6]},
   572=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 6]},
   573=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ClassBody, 3]},
   574=>{},
   575=>{},
   576=>{},
   577=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 6]},
   578=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 6]},
   579=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 8]},
   580=>{},
   581=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 5]},
   582=>{[:CloseParen]=>[:ForUpdate, 0]},
   583=>{},
   584=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 5]},
   585=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral]=>[:Statement, 9]},
   586=>{},
   587=>{},
   588=>{[:CloseParen]=>[:ForUpdate, 0]},
   589=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 7]},
   590=>{},
   591=>{},
   592=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 8]},
   593=>{},
   594=>
    {[:CloseBrace,
      :Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :OpenParen,
      :Not,
      :Minus,
      :This,
      :New,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Else]=>[:Statement, 9]}}}