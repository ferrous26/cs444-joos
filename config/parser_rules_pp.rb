PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   3=>{:QualifiedIdentifier=>16, :Identifier=>17},
   4=>{:ImportDeclarations=>18, :ImportDeclaration=>4, :Import=>5},
   5=>{:Identifier=>19},
   8=>
    {:ClassDeclaration=>20,
     :InterfaceDeclaration=>21,
     :Class=>22,
     :Interface=>23},
   9=>
    {:Modifiers=>24,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   16=>{:Semicolon=>25},
   17=>{:Dot=>26},
   19=>{:MoreImportIdentifiers=>27, :Dot=>28},
   22=>{:Identifier=>29},
   23=>{:Identifier=>30},
   25=>{:ImportDeclarations=>31, :ImportDeclaration=>4, :Import=>5},
   26=>{:QualifiedIdentifier=>32, :Identifier=>17},
   27=>{:Semicolon=>33},
   28=>{:Identifier=>34, :Multiply=>35},
   29=>{:ClassBody=>36, :Extends=>37, :Implements=>38, :OpenBrace=>39},
   30=>{:InterfaceBody=>40, :Extends=>41, :OpenBrace=>42},
   31=>
    {:TypeDeclaration=>43,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   34=>{:MoreImportIdentifiers=>44, :Dot=>28},
   37=>{:QualifiedIdentifier=>45, :Identifier=>46},
   38=>{:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49},
   39=>
    {:ClassBodyDeclarations=>50,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   41=>{:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49},
   42=>
    {:InterfaceBodyDeclarations=>62,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   45=>{:ClassBody=>66, :Implements=>67, :OpenBrace=>39},
   46=>{:Dot=>68},
   47=>{:ClassBody=>69, :OpenBrace=>39},
   48=>{:CommaType=>70, :Comma=>71},
   49=>{:Dot=>72},
   50=>{:CloseBrace=>73},
   51=>
    {:ClassBodyDeclarations=>74,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   53=>
    {:MemberDecl=>75,
     :MethodOrFieldDecl=>76,
     :Void=>77,
     :Identifier=>78,
     :Type=>79,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   54=>
    {:Modifiers=>88,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   61=>{:InterfaceBody=>89, :OpenBrace=>42},
   62=>{:CloseBrace=>90},
   63=>
    {:InterfaceBodyDeclarations=>91,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   65=>
    {:InterfaceMemberDecl=>92,
     :Type=>93,
     :Void=>94,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   67=>{:TypeList=>96, :QualifiedIdentifier=>48, :Identifier=>49},
   68=>{:QualifiedIdentifier=>97, :Identifier=>46},
   71=>
    {:Type=>98,
     :ArrayType=>99,
     :QualifiedIdentifier=>100,
     :BasicType=>101,
     :Identifier=>102,
     :Byte=>103,
     :Char=>104,
     :Int=>105,
     :Boolean=>106,
     :Short=>107},
   72=>{:QualifiedIdentifier=>108, :Identifier=>49},
   77=>{:Identifier=>109},
   78=>
    {:ConstructorDeclaratorRest=>110,
     :Dot=>111,
     :FormalParameters=>112,
     :OpenParen=>113},
   79=>{:Identifier=>114},
   81=>{:OpenStaple=>115},
   82=>{:OpenStaple=>116},
   93=>{:InterfaceMemberDeclRest=>117, :Identifier=>118},
   94=>{:InterfaceMemberDeclRest=>119, :Identifier=>118},
   95=>{:Dot=>111},
   96=>{:ClassBody=>120, :OpenBrace=>39},
   98=>{:CommaType=>121, :Comma=>71},
   100=>{:OpenStaple=>122},
   101=>{:OpenStaple=>123},
   102=>{:Dot=>124},
   109=>{:MethodDeclaratorRest=>125, :FormalParameters=>126, :OpenParen=>127},
   111=>{:QualifiedIdentifier=>128, :Identifier=>95},
   112=>{:MethodBody=>129, :Block=>130, :OpenBrace=>131},
   113=>
    {:CloseParen=>132,
     :FormalParameter=>133,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   114=>
    {:MethodOrFieldRest=>135,
     :Semicolon=>136,
     :Equals=>137,
     :MethodDeclaratorRest=>138,
     :FormalParameters=>126,
     :OpenParen=>127},
   115=>{:CloseStaple=>139},
   116=>{:CloseStaple=>140},
   118=>{:FormalParameters=>141, :OpenParen=>142},
   122=>{:CloseStaple=>143},
   123=>{:CloseStaple=>144},
   124=>{:QualifiedIdentifier=>145, :Identifier=>102},
   126=>{:MethodBody=>146, :Semicolon=>147, :Block=>130, :OpenBrace=>131},
   127=>
    {:CloseParen=>148,
     :FormalParameter=>149,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   131=>
    {:BlockStatements=>150,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181},
   133=>{:MoreFormalParameters=>182, :Comma=>183},
   134=>{:Identifier=>184},
   137=>
    {:Expression=>185,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   141=>{:Semicolon=>188},
   142=>
    {:CloseParen=>189,
     :FormalParameter=>190,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   149=>{:MoreFormalParameters=>191, :Comma=>183},
   150=>{:CloseBrace=>192},
   151=>
    {:BlockStatements=>193,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181},
   154=>{:VariableDeclarator=>194, :Identifier=>195},
   156=>{:OpenParen=>196},
   157=>{:OpenParen=>197},
   158=>{:OpenParen=>198},
   159=>
    {:Semicolon=>199,
     :Expression=>200,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   160=>{:Semicolon=>201},
   162=>
    {:OpenStaple=>202,
     :IdentifierSuffix=>203,
     :Arguments=>204,
     :OpenParen=>205},
   163=>
    {:BlockStatements=>206,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181},
   165=>{:Equals=>207},
   166=>{:Dot=>208},
   167=>
    {:MoreTerms=>209,
     :Infixop=>210,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   168=>
    {:Term=>227,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   172=>
    {:Expression=>228,
     :BasicType=>229,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   173=>{:Selectors=>252, :Selector=>253, :Dot=>254, :OpenStaple=>255},
   176=>
    {:Creator=>256,
     :ArrayCreator=>257,
     :QualifiedIdentifier=>258,
     :BasicType=>259,
     :Identifier=>187,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   182=>{:CloseParen=>265},
   183=>
    {:FormalParameter=>266,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   185=>{:Semicolon=>267},
   186=>
    {:IdentifierSuffix=>203,
     :OpenStaple=>268,
     :Arguments=>204,
     :OpenParen=>205},
   187=>{:Dot=>269},
   190=>{:MoreFormalParameters=>270, :Comma=>183},
   191=>{:CloseParen=>271},
   194=>{:Semicolon=>272},
   195=>{:Equals=>273},
   196=>
    {:Expression=>274,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   197=>
    {:ForInit=>282,
     :Expression=>283,
     :Type=>284,
     :Assignment=>164,
     :SubExpression=>165,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :Term=>167,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181},
   198=>
    {:Expression=>285,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   200=>{:Semicolon=>286},
   202=>
    {:CloseStaple=>139,
     :Expression=>287,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   205=>
    {:Expressions=>305,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   206=>{:CloseBrace=>324},
   207=>
    {:SubExpression=>325,
     :Term=>326,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   208=>{:QualifiedIdentifier=>341, :Identifier=>166},
   210=>
    {:Term=>342,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   228=>{:OpenStaple=>343, :CloseParen=>344},
   229=>{:OpenStaple=>345, :CloseParen=>346},
   231=>{:Equals=>347},
   237=>
    {:MoreTerms=>348,
     :Infixop=>349,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   238=>
    {:Term=>350,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   240=>
    {:Expression=>351,
     :BasicType=>352,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   241=>{:Selectors=>353, :Selector=>354, :Dot=>355, :OpenStaple=>356},
   244=>
    {:IdentifierSuffix=>357,
     :OpenStaple=>358,
     :Arguments=>359,
     :OpenParen=>360},
   245=>
    {:Creator=>361,
     :ArrayCreator=>362,
     :QualifiedIdentifier=>363,
     :BasicType=>364,
     :Identifier=>251,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   251=>{:Dot=>365},
   253=>{:Selectors=>366, :Selector=>253, :Dot=>254, :OpenStaple=>255},
   254=>{:Identifier=>367},
   255=>
    {:Expression=>368,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   258=>{:Arguments=>369, :OpenStaple=>370, :OpenParen=>205},
   259=>{:OpenStaple=>371},
   266=>{:MoreFormalParameters=>372, :Comma=>183},
   268=>
    {:Expression=>287,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   269=>{:QualifiedIdentifier=>373, :Identifier=>187},
   270=>{:CloseParen=>374},
   273=>
    {:Expression=>375,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   274=>{:CloseParen=>376},
   276=>{:Equals=>377},
   277=>
    {:MoreTerms=>378,
     :Infixop=>379,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   278=>
    {:Term=>380,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   280=>
    {:Expression=>381,
     :BasicType=>382,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   281=>{:Selectors=>383, :Selector=>384, :Dot=>355, :OpenStaple=>356},
   282=>{:Semicolon=>385},
   284=>{:VariableDeclarator=>386, :Identifier=>195},
   285=>{:CloseParen=>387},
   287=>{:CloseStaple=>388},
   289=>{:Equals=>389},
   290=>
    {:MoreTerms=>390,
     :Infixop=>391,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   291=>
    {:Term=>392,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   293=>
    {:Expression=>393,
     :BasicType=>394,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   294=>{:Selectors=>395, :Selector=>396, :Dot=>397, :OpenStaple=>398},
   297=>
    {:IdentifierSuffix=>399,
     :OpenStaple=>400,
     :Arguments=>401,
     :OpenParen=>402},
   298=>
    {:Creator=>403,
     :ArrayCreator=>404,
     :QualifiedIdentifier=>405,
     :BasicType=>406,
     :Identifier=>304,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   304=>{:Dot=>407},
   305=>{:CloseParen=>408},
   306=>{:MoreExpressions=>409, :Comma=>410},
   308=>{:Equals=>411},
   309=>
    {:MoreTerms=>412,
     :Infixop=>413,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   310=>
    {:Term=>414,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   312=>
    {:Expression=>415,
     :BasicType=>416,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   313=>{:Selectors=>417, :Selector=>418, :Dot=>419, :OpenStaple=>420},
   316=>
    {:IdentifierSuffix=>421,
     :OpenStaple=>422,
     :Arguments=>423,
     :OpenParen=>424},
   317=>
    {:Creator=>425,
     :ArrayCreator=>426,
     :QualifiedIdentifier=>427,
     :BasicType=>428,
     :Identifier=>323,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   323=>{:Dot=>429},
   326=>
    {:MoreTerms=>430,
     :Infixop=>431,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   327=>
    {:Term=>432,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   329=>
    {:Expression=>433,
     :BasicType=>434,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   330=>{:Selectors=>435, :Selector=>436, :Dot=>437, :OpenStaple=>438},
   333=>
    {:IdentifierSuffix=>439,
     :OpenStaple=>440,
     :Arguments=>441,
     :OpenParen=>442},
   334=>
    {:Creator=>443,
     :ArrayCreator=>444,
     :QualifiedIdentifier=>445,
     :BasicType=>446,
     :Identifier=>340,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   340=>{:Dot=>447},
   342=>
    {:MoreTerms=>448,
     :Infixop=>210,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   343=>{:CloseStaple=>449},
   344=>
    {:Term=>450,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   345=>{:CloseStaple=>451},
   346=>
    {:Term=>452,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   347=>
    {:SubExpression=>453,
     :Term=>454,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   349=>
    {:Term=>469,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   351=>{:OpenStaple=>470, :CloseParen=>471},
   352=>{:OpenStaple=>472, :CloseParen=>473},
   354=>{:Selectors=>474, :Selector=>354, :Dot=>355, :OpenStaple=>356},
   355=>{:Identifier=>475},
   356=>
    {:Expression=>476,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   358=>
    {:Expression=>477,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   360=>
    {:Expressions=>478,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   363=>{:Arguments=>479, :OpenStaple=>480, :OpenParen=>360},
   364=>{:OpenStaple=>481},
   365=>{:QualifiedIdentifier=>482, :Identifier=>251},
   367=>{:Arguments=>483, :OpenParen=>205},
   368=>{:CloseStaple=>484},
   370=>
    {:Expression=>485,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   371=>
    {:Expression=>486,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   376=>
    {:Statement=>487,
     :Block=>488,
     :If=>489,
     :For=>490,
     :While=>491,
     :Return=>492,
     :Expression=>493,
     :Semicolon=>494,
     :OpenBrace=>495,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   377=>
    {:SubExpression=>496,
     :Term=>497,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   379=>
    {:Term=>502,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   381=>{:OpenStaple=>503, :CloseParen=>504},
   382=>{:OpenStaple=>505, :CloseParen=>506},
   384=>{:Selectors=>507, :Selector=>384, :Dot=>355, :OpenStaple=>356},
   385=>
    {:Semicolon=>508,
     :Expression=>509,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   387=>
    {:Statement=>510,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   389=>
    {:SubExpression=>511,
     :Term=>512,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   391=>
    {:Term=>527,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   393=>{:OpenStaple=>528, :CloseParen=>529},
   394=>{:OpenStaple=>530, :CloseParen=>531},
   396=>{:Selectors=>532, :Selector=>396, :Dot=>397, :OpenStaple=>398},
   397=>{:Identifier=>533},
   398=>
    {:Expression=>534,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   400=>
    {:Expression=>535,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   402=>
    {:Expressions=>536,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   405=>{:Arguments=>537, :OpenStaple=>538, :OpenParen=>402},
   406=>{:OpenStaple=>539},
   407=>{:QualifiedIdentifier=>540, :Identifier=>304},
   410=>
    {:Expression=>541,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   411=>
    {:SubExpression=>542,
     :Term=>543,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   413=>
    {:Term=>558,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   415=>{:OpenStaple=>559, :CloseParen=>560},
   416=>{:OpenStaple=>561, :CloseParen=>562},
   418=>{:Selectors=>563, :Selector=>418, :Dot=>419, :OpenStaple=>420},
   419=>{:Identifier=>564},
   420=>
    {:Expression=>565,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   422=>
    {:Expression=>566,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   424=>
    {:Expressions=>567,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   427=>{:Arguments=>568, :OpenStaple=>569, :OpenParen=>424},
   428=>{:OpenStaple=>570},
   429=>{:QualifiedIdentifier=>571, :Identifier=>323},
   431=>
    {:Term=>572,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   433=>{:OpenStaple=>573, :CloseParen=>574},
   434=>{:OpenStaple=>575, :CloseParen=>576},
   436=>{:Selectors=>577, :Selector=>436, :Dot=>437, :OpenStaple=>438},
   437=>{:Identifier=>578},
   438=>
    {:Expression=>579,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   440=>
    {:Expression=>580,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   442=>
    {:Expressions=>581,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   445=>{:Arguments=>582, :OpenStaple=>583, :OpenParen=>442},
   446=>{:OpenStaple=>584},
   447=>{:QualifiedIdentifier=>585, :Identifier=>340},
   449=>{:CloseParen=>586},
   451=>{:CloseParen=>587},
   454=>
    {:MoreTerms=>588,
     :Infixop=>589,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   455=>
    {:Term=>590,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   457=>
    {:Expression=>591,
     :BasicType=>592,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   458=>{:Selectors=>593, :Selector=>594, :Dot=>595, :OpenStaple=>596},
   461=>
    {:IdentifierSuffix=>597,
     :OpenStaple=>598,
     :Arguments=>599,
     :OpenParen=>600},
   462=>
    {:Creator=>601,
     :ArrayCreator=>602,
     :QualifiedIdentifier=>603,
     :BasicType=>604,
     :Identifier=>468,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   468=>{:Dot=>605},
   469=>
    {:MoreTerms=>606,
     :Infixop=>349,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   470=>{:CloseStaple=>607},
   471=>
    {:Term=>608,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   472=>{:CloseStaple=>609},
   473=>
    {:Term=>610,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   475=>{:Arguments=>611, :OpenParen=>360},
   476=>{:CloseStaple=>612},
   477=>{:CloseStaple=>613},
   478=>{:CloseParen=>614},
   480=>
    {:Expression=>615,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   481=>
    {:Expression=>616,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   485=>{:CloseStaple=>617},
   486=>{:CloseStaple=>618},
   487=>{:Else=>619},
   489=>{:OpenParen=>620},
   490=>{:OpenParen=>621},
   491=>{:OpenParen=>622},
   492=>
    {:Semicolon=>623,
     :Expression=>624,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   493=>{:Semicolon=>625},
   495=>
    {:BlockStatements=>626,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181},
   497=>
    {:MoreTerms=>627,
     :Infixop=>628,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   498=>
    {:Term=>629,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   500=>
    {:Expression=>630,
     :BasicType=>631,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   501=>{:Selectors=>632, :Selector=>633, :Dot=>595, :OpenStaple=>596},
   502=>
    {:MoreTerms=>634,
     :Infixop=>379,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   503=>{:CloseStaple=>635},
   504=>
    {:Term=>636,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   505=>{:CloseStaple=>637},
   506=>
    {:Term=>638,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   508=>
    {:ForUpdate=>639,
     :Expression=>640,
     :VariableDeclarator=>641,
     :Assignment=>275,
     :SubExpression=>276,
     :Identifier=>642,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250},
   509=>{:Semicolon=>643},
   512=>
    {:MoreTerms=>644,
     :Infixop=>645,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   513=>
    {:Term=>646,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   515=>
    {:Expression=>647,
     :BasicType=>648,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   516=>{:Selectors=>649, :Selector=>650, :Dot=>651, :OpenStaple=>652},
   519=>
    {:IdentifierSuffix=>653,
     :OpenStaple=>654,
     :Arguments=>655,
     :OpenParen=>656},
   520=>
    {:Creator=>657,
     :ArrayCreator=>658,
     :QualifiedIdentifier=>659,
     :BasicType=>660,
     :Identifier=>526,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   526=>{:Dot=>661},
   527=>
    {:MoreTerms=>662,
     :Infixop=>391,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   528=>{:CloseStaple=>663},
   529=>
    {:Term=>664,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   530=>{:CloseStaple=>665},
   531=>
    {:Term=>666,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   533=>{:Arguments=>667, :OpenParen=>402},
   534=>{:CloseStaple=>668},
   535=>{:CloseStaple=>669},
   536=>{:CloseParen=>670},
   538=>
    {:Expression=>671,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   539=>
    {:Expression=>672,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   541=>{:MoreExpressions=>673, :Comma=>410},
   543=>
    {:MoreTerms=>674,
     :Infixop=>675,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   544=>
    {:Term=>676,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   546=>
    {:Expression=>677,
     :BasicType=>678,
     :Assignment=>230,
     :SubExpression=>231,
     :Byte=>232,
     :Char=>233,
     :Int=>234,
     :Boolean=>235,
     :Short=>236,
     :Term=>237,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   547=>{:Selectors=>679, :Selector=>680, :Dot=>681, :OpenStaple=>682},
   550=>
    {:IdentifierSuffix=>683,
     :OpenStaple=>684,
     :Arguments=>685,
     :OpenParen=>686},
   551=>
    {:Creator=>687,
     :ArrayCreator=>688,
     :QualifiedIdentifier=>689,
     :BasicType=>690,
     :Identifier=>557,
     :Byte=>260,
     :Char=>261,
     :Int=>262,
     :Boolean=>263,
     :Short=>264},
   557=>{:Dot=>691},
   558=>
    {:MoreTerms=>692,
     :Infixop=>413,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   559=>{:CloseStaple=>693},
   560=>
    {:Term=>694,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   561=>{:CloseStaple=>695},
   562=>
    {:Term=>696,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   564=>{:Arguments=>697, :OpenParen=>424},
   565=>{:CloseStaple=>698},
   566=>{:CloseStaple=>699},
   567=>{:CloseParen=>700},
   569=>
    {:Expression=>701,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   570=>
    {:Expression=>702,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   572=>
    {:MoreTerms=>703,
     :Infixop=>431,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   573=>{:CloseStaple=>704},
   574=>
    {:Term=>705,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   575=>{:CloseStaple=>706},
   576=>
    {:Term=>707,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   578=>{:Arguments=>708, :OpenParen=>442},
   579=>{:CloseStaple=>709},
   580=>{:CloseStaple=>710},
   581=>{:CloseParen=>711},
   583=>
    {:Expression=>712,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   584=>
    {:Expression=>713,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   586=>
    {:Term=>714,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   587=>
    {:Term=>715,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   589=>
    {:Term=>716,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   591=>{:OpenStaple=>717, :CloseParen=>718},
   592=>{:OpenStaple=>719, :CloseParen=>720},
   594=>{:Selectors=>721, :Selector=>594, :Dot=>595, :OpenStaple=>596},
   595=>{:Identifier=>722},
   596=>
    {:Expression=>723,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   598=>
    {:Expression=>724,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   600=>
    {:Expressions=>725,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   603=>{:Arguments=>726, :OpenStaple=>727, :OpenParen=>600},
   604=>{:OpenStaple=>728},
   605=>{:QualifiedIdentifier=>729, :Identifier=>468},
   607=>{:CloseParen=>730},
   609=>{:CloseParen=>731},
   615=>{:CloseStaple=>732},
   616=>{:CloseStaple=>733},
   619=>
    {:Statement=>734,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   620=>
    {:Expression=>735,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   621=>
    {:ForInit=>736,
     :Expression=>283,
     :Type=>284,
     :Assignment=>164,
     :SubExpression=>165,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :Term=>167,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181},
   622=>
    {:Expression=>737,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   624=>{:Semicolon=>738},
   626=>{:CloseBrace=>739},
   628=>
    {:Term=>740,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   630=>{:OpenStaple=>741, :CloseParen=>742},
   631=>{:OpenStaple=>743, :CloseParen=>744},
   633=>{:Selectors=>745, :Selector=>633, :Dot=>595, :OpenStaple=>596},
   635=>{:CloseParen=>746},
   637=>{:CloseParen=>747},
   639=>{:CloseParen=>748},
   642=>{:Equals=>749, :Dot=>365},
   643=>
    {:ForUpdate=>750,
     :Expression=>640,
     :VariableDeclarator=>641,
     :Assignment=>275,
     :SubExpression=>276,
     :Identifier=>642,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250},
   645=>
    {:Term=>751,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   647=>{:OpenStaple=>752, :CloseParen=>753},
   648=>{:OpenStaple=>754, :CloseParen=>755},
   650=>{:Selectors=>756, :Selector=>650, :Dot=>651, :OpenStaple=>652},
   651=>{:Identifier=>757},
   652=>
    {:Expression=>758,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   654=>
    {:Expression=>759,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   656=>
    {:Expressions=>760,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   659=>{:Arguments=>761, :OpenStaple=>762, :OpenParen=>656},
   660=>{:OpenStaple=>763},
   661=>{:QualifiedIdentifier=>764, :Identifier=>526},
   663=>{:CloseParen=>765},
   665=>{:CloseParen=>766},
   671=>{:CloseStaple=>767},
   672=>{:CloseStaple=>768},
   675=>
    {:Term=>769,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   677=>{:OpenStaple=>770, :CloseParen=>771},
   678=>{:OpenStaple=>772, :CloseParen=>773},
   680=>{:Selectors=>774, :Selector=>680, :Dot=>681, :OpenStaple=>682},
   681=>{:Identifier=>775},
   682=>
    {:Expression=>776,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   684=>
    {:Expression=>777,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   686=>
    {:Expressions=>778,
     :Expression=>306,
     :Assignment=>307,
     :SubExpression=>308,
     :Term=>309,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   689=>{:Arguments=>779, :OpenStaple=>780, :OpenParen=>686},
   690=>{:OpenStaple=>781},
   691=>{:QualifiedIdentifier=>782, :Identifier=>557},
   693=>{:CloseParen=>783},
   695=>{:CloseParen=>784},
   701=>{:CloseStaple=>785},
   702=>{:CloseStaple=>786},
   704=>{:CloseParen=>787},
   706=>{:CloseParen=>788},
   712=>{:CloseStaple=>789},
   713=>{:CloseStaple=>790},
   716=>
    {:MoreTerms=>791,
     :Infixop=>589,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   717=>{:CloseStaple=>792},
   718=>
    {:Term=>793,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   719=>{:CloseStaple=>794},
   720=>
    {:Term=>795,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   722=>{:Arguments=>796, :OpenParen=>600},
   723=>{:CloseStaple=>797},
   724=>{:CloseStaple=>798},
   725=>{:CloseParen=>799},
   727=>
    {:Expression=>800,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   728=>
    {:Expression=>801,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   730=>
    {:Term=>802,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   731=>
    {:Term=>803,
     :TermModifier=>238,
     :UnmodifiedTerm=>239,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>240,
     :Primary=>241,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   735=>{:CloseParen=>804},
   736=>{:Semicolon=>805},
   737=>{:CloseParen=>806},
   740=>
    {:MoreTerms=>807,
     :Infixop=>628,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   741=>{:CloseStaple=>808},
   742=>
    {:Term=>809,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   743=>{:CloseStaple=>810},
   744=>
    {:Term=>811,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   746=>
    {:Term=>812,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   747=>
    {:Term=>813,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   748=>
    {:Statement=>814,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   749=>
    {:Expression=>815,
     :Assignment=>275,
     :SubExpression=>276,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250,
     :Identifier=>251},
   750=>{:CloseParen=>816},
   751=>
    {:MoreTerms=>817,
     :Infixop=>645,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   752=>{:CloseStaple=>818},
   753=>
    {:Term=>819,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   754=>{:CloseStaple=>820},
   755=>
    {:Term=>821,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   757=>{:Arguments=>822, :OpenParen=>656},
   758=>{:CloseStaple=>823},
   759=>{:CloseStaple=>824},
   760=>{:CloseParen=>825},
   762=>
    {:Expression=>826,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   763=>
    {:Expression=>827,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   765=>
    {:Term=>828,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   766=>
    {:Term=>829,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   769=>
    {:MoreTerms=>830,
     :Infixop=>675,
     :LazyOr=>211,
     :LazyAnd=>212,
     :EagerOr=>213,
     :EagerAnd=>214,
     :Equality=>215,
     :NotEqual=>216,
     :LessThan=>217,
     :GreaterThan=>218,
     :LessOrEqual=>219,
     :GreaterOrEqual=>220,
     :Plus=>221,
     :Minus=>222,
     :Multiply=>223,
     :Divide=>224,
     :Modulo=>225,
     :Instanceof=>226},
   770=>{:CloseStaple=>831},
   771=>
    {:Term=>832,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   772=>{:CloseStaple=>833},
   773=>
    {:Term=>834,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   775=>{:Arguments=>835, :OpenParen=>686},
   776=>{:CloseStaple=>836},
   777=>{:CloseStaple=>837},
   778=>{:CloseParen=>838},
   780=>
    {:Expression=>839,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   781=>
    {:Expression=>840,
     :Assignment=>288,
     :SubExpression=>289,
     :Term=>290,
     :TermModifier=>291,
     :UnmodifiedTerm=>292,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>293,
     :Primary=>294,
     :This=>295,
     :Literal=>296,
     :QualifiedIdentifier=>297,
     :New=>298,
     :IntegerLiteral=>299,
     :CharacterLiteral=>300,
     :StringLiteral=>301,
     :BooleanLiteral=>302,
     :NullLiteral=>303,
     :Identifier=>304},
   783=>
    {:Term=>841,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   784=>
    {:Term=>842,
     :TermModifier=>310,
     :UnmodifiedTerm=>311,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>312,
     :Primary=>313,
     :This=>314,
     :Literal=>315,
     :QualifiedIdentifier=>316,
     :New=>317,
     :IntegerLiteral=>318,
     :CharacterLiteral=>319,
     :StringLiteral=>320,
     :BooleanLiteral=>321,
     :NullLiteral=>322,
     :Identifier=>323},
   787=>
    {:Term=>843,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   788=>
    {:Term=>844,
     :TermModifier=>327,
     :UnmodifiedTerm=>328,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>329,
     :Primary=>330,
     :This=>331,
     :Literal=>332,
     :QualifiedIdentifier=>333,
     :New=>334,
     :IntegerLiteral=>335,
     :CharacterLiteral=>336,
     :StringLiteral=>337,
     :BooleanLiteral=>338,
     :NullLiteral=>339,
     :Identifier=>340},
   792=>{:CloseParen=>845},
   794=>{:CloseParen=>846},
   800=>{:CloseStaple=>847},
   801=>{:CloseStaple=>848},
   804=>
    {:Statement=>849,
     :Block=>488,
     :If=>489,
     :For=>490,
     :While=>491,
     :Return=>492,
     :Expression=>493,
     :Semicolon=>494,
     :OpenBrace=>495,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   805=>
    {:Semicolon=>850,
     :Expression=>851,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   806=>
    {:Statement=>852,
     :Block=>488,
     :If=>489,
     :For=>490,
     :While=>491,
     :Return=>492,
     :Expression=>493,
     :Semicolon=>494,
     :OpenBrace=>495,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   808=>{:CloseParen=>853},
   810=>{:CloseParen=>854},
   816=>
    {:Statement=>855,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   818=>{:CloseParen=>856},
   820=>{:CloseParen=>857},
   826=>{:CloseStaple=>858},
   827=>{:CloseStaple=>859},
   831=>{:CloseParen=>860},
   833=>{:CloseParen=>861},
   839=>{:CloseStaple=>862},
   840=>{:CloseStaple=>863},
   845=>
    {:Term=>864,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   846=>
    {:Term=>865,
     :TermModifier=>455,
     :UnmodifiedTerm=>456,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>457,
     :Primary=>458,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   849=>{:Else=>866},
   850=>
    {:ForUpdate=>867,
     :Expression=>640,
     :VariableDeclarator=>641,
     :Assignment=>275,
     :SubExpression=>276,
     :Identifier=>642,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250},
   851=>{:Semicolon=>868},
   853=>
    {:Term=>869,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   854=>
    {:Term=>870,
     :TermModifier=>498,
     :UnmodifiedTerm=>499,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>500,
     :Primary=>501,
     :This=>459,
     :Literal=>460,
     :QualifiedIdentifier=>461,
     :New=>462,
     :IntegerLiteral=>463,
     :CharacterLiteral=>464,
     :StringLiteral=>465,
     :BooleanLiteral=>466,
     :NullLiteral=>467,
     :Identifier=>468},
   856=>
    {:Term=>871,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   857=>
    {:Term=>872,
     :TermModifier=>513,
     :UnmodifiedTerm=>514,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>515,
     :Primary=>516,
     :This=>517,
     :Literal=>518,
     :QualifiedIdentifier=>519,
     :New=>520,
     :IntegerLiteral=>521,
     :CharacterLiteral=>522,
     :StringLiteral=>523,
     :BooleanLiteral=>524,
     :NullLiteral=>525,
     :Identifier=>526},
   860=>
    {:Term=>873,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   861=>
    {:Term=>874,
     :TermModifier=>544,
     :UnmodifiedTerm=>545,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>546,
     :Primary=>547,
     :This=>548,
     :Literal=>549,
     :QualifiedIdentifier=>550,
     :New=>551,
     :IntegerLiteral=>552,
     :CharacterLiteral=>553,
     :StringLiteral=>554,
     :BooleanLiteral=>555,
     :NullLiteral=>556,
     :Identifier=>557},
   866=>
    {:Statement=>875,
     :Block=>488,
     :If=>489,
     :For=>490,
     :While=>491,
     :Return=>492,
     :Expression=>493,
     :Semicolon=>494,
     :OpenBrace=>495,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   867=>{:CloseParen=>876},
   868=>
    {:ForUpdate=>877,
     :Expression=>640,
     :VariableDeclarator=>641,
     :Assignment=>275,
     :SubExpression=>276,
     :Identifier=>642,
     :Term=>277,
     :TermModifier=>278,
     :UnmodifiedTerm=>279,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>280,
     :Primary=>281,
     :This=>242,
     :Literal=>243,
     :QualifiedIdentifier=>244,
     :New=>245,
     :IntegerLiteral=>246,
     :CharacterLiteral=>247,
     :StringLiteral=>248,
     :BooleanLiteral=>249,
     :NullLiteral=>250},
   876=>
    {:Statement=>878,
     :Block=>488,
     :If=>489,
     :For=>490,
     :While=>491,
     :Return=>492,
     :Expression=>493,
     :Semicolon=>494,
     :OpenBrace=>495,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187},
   877=>{:CloseParen=>879},
   879=>
    {:Statement=>880,
     :Block=>488,
     :If=>489,
     :For=>490,
     :While=>491,
     :Return=>492,
     :Expression=>493,
     :Semicolon=>494,
     :OpenBrace=>495,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>186,
     :New=>176,
     :IntegerLiteral=>177,
     :CharacterLiteral=>178,
     :StringLiteral=>179,
     :BooleanLiteral=>180,
     :NullLiteral=>181,
     :Identifier=>187}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:Class, :Interface]=>[:Modifiers, 0]},
   10=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>{},
   17=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   18=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   19=>{[:Semicolon]=>[:MoreImportIdentifiers, 0]},
   20=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   21=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   22=>{},
   23=>{},
   24=>{[:Class, :Interface]=>[:Modifiers, 2]},
   25=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   26=>{},
   27=>{},
   28=>{},
   29=>{},
   30=>{},
   31=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   32=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   33=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 4]},
   34=>{[:Semicolon]=>[:MoreImportIdentifiers, 0]},
   35=>{[:Semicolon]=>[:MoreImportIdentifiers, 2]},
   36=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   37=>{},
   38=>{},
   39=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   40=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   41=>{},
   42=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   43=>{[:EndProgram]=>[:CompilationUnit, 5]},
   44=>{[:Semicolon]=>[:MoreImportIdentifiers, 3]},
   45=>{},
   46=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   47=>{},
   48=>{[:OpenBrace]=>[:CommaType, 0]},
   49=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 1]},
   50=>{},
   51=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   52=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   53=>{},
   54=>
    {[:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   55=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   61=>{},
   62=>{},
   63=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   64=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   65=>{},
   66=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   67=>{},
   68=>{},
   69=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   70=>{[:OpenBrace]=>[:TypeList, 2]},
   71=>{},
   72=>{},
   73=>{[:EndProgram]=>[:ClassBody, 3]},
   74=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   75=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 2]},
   76=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 1]},
   77=>{},
   78=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   79=>{},
   80=>{[:Identifier]=>[:Type, 1]},
   81=>{[:Identifier]=>[:Type, 1]},
   82=>{[:Identifier]=>[:Type, 1]},
   83=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   84=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   85=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   86=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   87=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   88=>
    {[:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 2]},
   89=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   90=>{[:EndProgram]=>[:InterfaceBody, 3]},
   91=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   92=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 2]},
   93=>{},
   94=>{},
   95=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   96=>{},
   97=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   98=>{[:OpenBrace]=>[:CommaType, 0]},
   99=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   100=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   101=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   102=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   103=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   104=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   105=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   106=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   107=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   108=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 3]},
   109=>{},
   110=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 2]},
   111=>{},
   112=>{},
   113=>{},
   114=>{},
   115=>{},
   116=>{},
   117=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   118=>{},
   119=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   120=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   121=>{[:OpenBrace]=>[:CommaType, 3]},
   122=>{},
   123=>{},
   124=>{},
   125=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 3]},
   126=>{},
   127=>{},
   128=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   129=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   130=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodBody, 1]},
   131=>{[:CloseBrace]=>[:BlockStatements, 0]},
   132=>{[:OpenBrace]=>[:FormalParameters, 2]},
   133=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   134=>{},
   135=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldDecl, 3]},
   136=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   137=>{},
   138=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   139=>{[:Identifier]=>[:ArrayType, 3]},
   140=>{[:Identifier]=>[:ArrayType, 3]},
   141=>{},
   142=>{},
   143=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   144=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   145=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   146=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   147=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   148=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   149=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   150=>{},
   151=>{[:CloseBrace]=>[:BlockStatements, 0]},
   152=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   153=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   154=>{},
   155=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   156=>{},
   157=>{},
   158=>{},
   159=>{},
   160=>{},
   161=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   162=>
    {[:Identifier]=>[:Type, 1],
     [:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   163=>{[:CloseBrace]=>[:BlockStatements, 0]},
   164=>{[:Semicolon]=>[:Expression, 1]},
   165=>{[:Semicolon]=>[:Expression, 1]},
   166=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   167=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   168=>{},
   169=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 1]},
   170=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   171=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   172=>{},
   173=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   174=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   175=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   176=>{},
   177=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   178=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   179=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   180=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   181=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   182=>{},
   183=>{},
   184=>{[:Comma, :CloseParen]=>[:FormalParameter, 2]},
   185=>{},
   186=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   187=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   188=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 3]},
   189=>{[:Semicolon]=>[:FormalParameters, 2]},
   190=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   191=>{},
   192=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 3]},
   193=>{[:CloseBrace]=>[:BlockStatements, 2]},
   194=>{},
   195=>{},
   196=>{},
   197=>{[:Semicolon]=>[:ForInit, 0]},
   198=>{},
   199=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   200=>{},
   201=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   202=>{},
   203=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   204=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 1]},
   205=>{[:CloseParen]=>[:Expressions, 0]},
   206=>{},
   207=>{},
   208=>{},
   209=>{[:Semicolon, :Equals]=>[:SubExpression, 2]},
   210=>{},
   211=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   212=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   213=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   214=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   215=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   216=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   217=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   218=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   219=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   220=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   221=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   222=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   223=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   224=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   225=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   226=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   227=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   228=>{},
   229=>{},
   230=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   231=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   232=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   233=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   234=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   235=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   236=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   237=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   238=>{},
   239=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   240=>{},
   241=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   242=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   243=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   244=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   245=>{},
   246=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   247=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   248=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   249=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   250=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   251=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   252=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 2]},
   253=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   254=>{},
   255=>{},
   256=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   257=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   258=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   259=>{},
   260=>{[:OpenStaple]=>[:BasicType, 1]},
   261=>{[:OpenStaple]=>[:BasicType, 1]},
   262=>{[:OpenStaple]=>[:BasicType, 1]},
   263=>{[:OpenStaple]=>[:BasicType, 1]},
   264=>{[:OpenStaple]=>[:BasicType, 1]},
   265=>{[:OpenBrace]=>[:FormalParameters, 4]},
   266=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   267=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 3]},
   268=>{},
   269=>{},
   270=>{},
   271=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 4]},
   272=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]},
   273=>{},
   274=>{},
   275=>{[:CloseParen]=>[:Expression, 1]},
   276=>{[:CloseParen]=>[:Expression, 1]},
   277=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   278=>{},
   279=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   280=>{},
   281=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   282=>{},
   283=>{[:Semicolon]=>[:ForInit, 1]},
   284=>{},
   285=>{},
   286=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 3]},
   287=>{},
   288=>{[:CloseStaple]=>[:Expression, 1]},
   289=>{[:CloseStaple]=>[:Expression, 1]},
   290=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   291=>{},
   292=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 1]},
   293=>{},
   294=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   295=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   296=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   297=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   298=>{},
   299=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   300=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   302=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   304=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   305=>{},
   306=>{[:CloseParen]=>[:MoreExpressions, 0]},
   307=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   308=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   309=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   310=>{},
   311=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   312=>{},
   313=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   314=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   315=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   316=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   317=>{},
   318=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   319=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   320=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   321=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   322=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   323=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   324=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Block, 3]},
   325=>{[:Semicolon]=>[:Assignment, 3]},
   326=>{[:Semicolon]=>[:MoreTerms, 0]},
   327=>{},
   328=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 1]},
   329=>{},
   330=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   331=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   332=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   333=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   334=>{},
   335=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   336=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   337=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   338=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   339=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   340=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   341=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   342=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   343=>{},
   344=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 3]},
   345=>{},
   346=>{},
   347=>{},
   348=>{[:OpenStaple, :CloseParen, :Equals]=>[:SubExpression, 2]},
   349=>{},
   350=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   351=>{},
   352=>{},
   353=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   354=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   355=>{},
   356=>{},
   357=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   358=>{},
   359=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   360=>{[:CloseParen]=>[:Expressions, 0]},
   361=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   362=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   363=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   364=>{},
   365=>{},
   366=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 2]},
   367=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   368=>{},
   369=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   370=>{},
   371=>{},
   372=>{[:CloseParen]=>[:MoreFormalParameters, 3]},
   373=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   374=>{[:Semicolon]=>[:FormalParameters, 4]},
   375=>{[:Semicolon]=>[:VariableDeclarator, 3]},
   376=>{},
   377=>{},
   378=>{[:CloseParen, :Equals]=>[:SubExpression, 2]},
   379=>{},
   380=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   381=>{},
   382=>{},
   383=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   384=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   385=>{},
   386=>{[:Semicolon]=>[:ForInit, 2]},
   387=>{},
   388=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 3]},
   389=>{},
   390=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]},
   391=>{},
   392=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   393=>{},
   394=>{},
   395=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 2]},
   396=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   397=>{},
   398=>{},
   399=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   400=>{},
   401=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 1]},
   402=>{[:CloseParen]=>[:Expressions, 0]},
   403=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   404=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   405=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   406=>{},
   407=>{},
   408=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Arguments, 3]},
   409=>{[:CloseParen]=>[:Expressions, 2]},
   410=>{},
   411=>{},
   412=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]},
   413=>{},
   414=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   415=>{},
   416=>{},
   417=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   418=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   419=>{},
   420=>{},
   421=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   422=>{},
   423=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   424=>{[:CloseParen]=>[:Expressions, 0]},
   425=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   426=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   427=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   428=>{},
   429=>{},
   430=>{[:Semicolon]=>[:SubExpression, 2]},
   431=>{},
   432=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 2]},
   433=>{},
   434=>{},
   435=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   436=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   437=>{},
   438=>{},
   439=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   440=>{},
   441=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 1]},
   442=>{[:CloseParen]=>[:Expressions, 0]},
   443=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   444=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   445=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   446=>{},
   447=>{},
   448=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]},
   449=>{},
   450=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   451=>{},
   452=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   453=>{[:OpenStaple, :CloseParen]=>[:Assignment, 3]},
   454=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   455=>{},
   456=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 1]},
   457=>{},
   458=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   459=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   460=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   461=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   462=>{},
   463=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   464=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   465=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   466=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   467=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   468=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   469=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   470=>{},
   471=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   472=>{},
   473=>{},
   474=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   475=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   476=>{},
   477=>{},
   478=>{},
   479=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   480=>{},
   481=>{},
   482=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   483=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   484=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   485=>{},
   486=>{},
   487=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   488=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   489=>{},
   490=>{},
   491=>{},
   492=>{},
   493=>{},
   494=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   495=>{[:CloseBrace]=>[:BlockStatements, 0]},
   496=>{[:CloseParen]=>[:Assignment, 3]},
   497=>{[:CloseParen]=>[:MoreTerms, 0]},
   498=>{},
   499=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 1]},
   500=>{},
   501=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   502=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   503=>{},
   504=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   505=>{},
   506=>{},
   507=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   508=>{[:CloseParen]=>[:ForUpdate, 0]},
   509=>{},
   510=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   511=>{[:CloseStaple]=>[:Assignment, 3]},
   512=>{[:CloseStaple]=>[:MoreTerms, 0]},
   513=>{},
   514=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 1]},
   515=>{},
   516=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   517=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   518=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   519=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   520=>{},
   521=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   522=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   523=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   524=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   525=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   526=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   527=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   528=>{},
   529=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 3]},
   530=>{},
   531=>{},
   532=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 2]},
   533=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   534=>{},
   535=>{},
   536=>{},
   537=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   538=>{},
   539=>{},
   540=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   541=>{[:CloseParen]=>[:MoreExpressions, 0]},
   542=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   543=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   544=>{},
   545=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 1]},
   546=>{},
   547=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   548=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   549=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   550=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   551=>{},
   552=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   553=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   554=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   555=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   556=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   557=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   558=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   559=>{},
   560=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   561=>{},
   562=>{},
   563=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   564=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   565=>{},
   566=>{},
   567=>{},
   568=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   569=>{},
   570=>{},
   571=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   572=>{[:Semicolon]=>[:MoreTerms, 0]},
   573=>{},
   574=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 3]},
   575=>{},
   576=>{},
   577=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 2]},
   578=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 2]},
   579=>{},
   580=>{},
   581=>{},
   582=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 2]},
   583=>{},
   584=>{},
   585=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   586=>{},
   587=>{},
   588=>{[:OpenStaple, :CloseParen]=>[:SubExpression, 2]},
   589=>{},
   590=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 2]},
   591=>{},
   592=>{},
   593=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   594=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   595=>{},
   596=>{},
   597=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   598=>{},
   599=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   600=>{[:CloseParen]=>[:Expressions, 0]},
   601=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   602=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   603=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   604=>{},
   605=>{},
   606=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   607=>{},
   608=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   609=>{},
   610=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   611=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   612=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   613=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   614=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   615=>{},
   616=>{},
   617=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   618=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   619=>{},
   620=>{},
   621=>{[:Semicolon]=>[:ForInit, 0]},
   622=>{},
   623=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   624=>{},
   625=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   626=>{},
   627=>{[:CloseParen]=>[:SubExpression, 2]},
   628=>{},
   629=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 2]},
   630=>{},
   631=>{},
   632=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   633=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   634=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]},
   635=>{},
   636=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   637=>{},
   638=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   639=>{},
   640=>{[:CloseParen]=>[:ForUpdate, 1]},
   641=>{[:CloseParen]=>[:ForUpdate, 1]},
   642=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   643=>{[:CloseParen]=>[:ForUpdate, 0]},
   644=>{[:CloseStaple]=>[:SubExpression, 2]},
   645=>{},
   646=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 2]},
   647=>{},
   648=>{},
   649=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   650=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   651=>{},
   652=>{},
   653=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   654=>{},
   655=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 1]},
   656=>{[:CloseParen]=>[:Expressions, 0]},
   657=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   658=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   659=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   660=>{},
   661=>{},
   662=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]},
   663=>{},
   664=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   665=>{},
   666=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   667=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   668=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   669=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 3]},
   670=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Arguments, 3]},
   671=>{},
   672=>{},
   673=>{[:CloseParen]=>[:MoreExpressions, 3]},
   674=>{[:Comma, :CloseParen]=>[:SubExpression, 2]},
   675=>{},
   676=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 2]},
   677=>{},
   678=>{},
   679=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   680=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   681=>{},
   682=>{},
   683=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   684=>{},
   685=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   686=>{[:CloseParen]=>[:Expressions, 0]},
   687=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   688=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   689=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   690=>{},
   691=>{},
   692=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   693=>{},
   694=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   695=>{},
   696=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   697=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   698=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   699=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   700=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   701=>{},
   702=>{},
   703=>{[:Semicolon]=>[:MoreTerms, 3]},
   704=>{},
   705=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   706=>{},
   707=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   708=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   709=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   710=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 3]},
   711=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Arguments, 3]},
   712=>{},
   713=>{},
   714=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   715=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   716=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   717=>{},
   718=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   719=>{},
   720=>{},
   721=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 2]},
   722=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 2]},
   723=>{},
   724=>{},
   725=>{},
   726=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 2]},
   727=>{},
   728=>{},
   729=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   730=>{},
   731=>{},
   732=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   733=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   734=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 7]},
   735=>{},
   736=>{},
   737=>{},
   738=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 3]},
   739=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Block, 3]},
   740=>{[:CloseParen]=>[:MoreTerms, 0]},
   741=>{},
   742=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   743=>{},
   744=>{},
   745=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 2]},
   746=>{},
   747=>{},
   748=>{},
   749=>{},
   750=>{},
   751=>{[:CloseStaple]=>[:MoreTerms, 0]},
   752=>{},
   753=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 3]},
   754=>{},
   755=>{},
   756=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 2]},
   757=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 2]},
   758=>{},
   759=>{},
   760=>{},
   761=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 2]},
   762=>{},
   763=>{},
   764=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   765=>{},
   766=>{},
   767=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   768=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   769=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   770=>{},
   771=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 3]},
   772=>{},
   773=>{},
   774=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 2]},
   775=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   776=>{},
   777=>{},
   778=>{},
   779=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 2]},
   780=>{},
   781=>{},
   782=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   783=>{},
   784=>{},
   785=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   786=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   787=>{},
   788=>{},
   789=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   790=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   791=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 3]},
   792=>{},
   793=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   794=>{},
   795=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   796=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   797=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   798=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   799=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Arguments, 3]},
   800=>{},
   801=>{},
   802=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   803=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   804=>{},
   805=>{},
   806=>{},
   807=>{[:CloseParen]=>[:MoreTerms, 3]},
   808=>{},
   809=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   810=>{},
   811=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   812=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   813=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   814=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 8]},
   815=>{[:CloseParen]=>[:VariableDeclarator, 3]},
   816=>{},
   817=>{[:CloseStaple]=>[:MoreTerms, 3]},
   818=>{},
   819=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   820=>{},
   821=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   822=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   823=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   824=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 3]},
   825=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Arguments, 3]},
   826=>{},
   827=>{},
   828=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   829=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   830=>{[:Comma, :CloseParen]=>[:MoreTerms, 3]},
   831=>{},
   832=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   833=>{},
   834=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   835=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   836=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   837=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   838=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Arguments, 3]},
   839=>{},
   840=>{},
   841=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   842=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   843=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   844=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   845=>{},
   846=>{},
   847=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   848=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   849=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   850=>{[:CloseParen]=>[:ForUpdate, 0]},
   851=>{},
   852=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   853=>{},
   854=>{},
   855=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 9]},
   856=>{},
   857=>{},
   858=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   859=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   860=>{},
   861=>{},
   862=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   863=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   864=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   865=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   866=>{},
   867=>{},
   868=>{[:CloseParen]=>[:ForUpdate, 0]},
   869=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   870=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   871=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   872=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   873=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   874=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   875=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 7]},
   876=>{},
   877=>{},
   878=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 8]},
   879=>{},
   880=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 9]}}}