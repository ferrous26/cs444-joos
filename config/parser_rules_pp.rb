PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   3=>{:QualifiedIdentifier=>16, :Identifier=>17},
   4=>{:ImportDeclarations=>18, :ImportDeclaration=>4, :Import=>5},
   5=>{:QualifiedIdentifier=>19, :Identifier=>20},
   8=>
    {:ClassDeclaration=>21,
     :InterfaceDeclaration=>22,
     :Class=>23,
     :Interface=>24},
   9=>
    {:Modifiers=>25,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   16=>{:Semicolon=>26},
   17=>{:Dot=>27},
   19=>{:Semicolon=>28, :Dot=>29},
   20=>{:Dot=>30},
   23=>{:Identifier=>31},
   24=>{:Identifier=>32},
   26=>{:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5},
   27=>{:QualifiedIdentifier=>34, :Identifier=>17},
   29=>{:Multiply=>35},
   30=>{:QualifiedIdentifier=>36, :Identifier=>20},
   31=>{:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40},
   32=>{:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43},
   33=>
    {:TypeDeclaration=>44,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   35=>{:Semicolon=>45},
   38=>{:QualifiedIdentifier=>46, :Identifier=>47},
   39=>{:TypeList=>48, :QualifiedIdentifier=>49, :Identifier=>50},
   40=>
    {:ClassBodyDeclarations=>51,
     :ClassBodyDeclaration=>52,
     :Semicolon=>53,
     :Modifiers=>54,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   42=>{:TypeList=>62, :QualifiedIdentifier=>49, :Identifier=>50},
   43=>
    {:InterfaceBodyDeclarations=>63,
     :InterfaceBodyDeclaration=>64,
     :Semicolon=>65,
     :Modifiers=>66,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   46=>{:ClassBody=>67, :Implements=>68, :OpenBrace=>40},
   47=>{:Dot=>69},
   48=>{:ClassBody=>70, :OpenBrace=>40},
   49=>{:CommaType=>71, :Comma=>72},
   50=>{:Dot=>73},
   51=>{:CloseBrace=>74},
   52=>
    {:ClassBodyDeclarations=>75,
     :ClassBodyDeclaration=>52,
     :Semicolon=>53,
     :Modifiers=>54,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   54=>
    {:MemberDecl=>76,
     :MethodOrFieldDecl=>77,
     :Void=>78,
     :Identifier=>79,
     :Type=>80,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88},
   55=>
    {:Modifiers=>89,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   62=>{:InterfaceBody=>90, :OpenBrace=>43},
   63=>{:CloseBrace=>91},
   64=>
    {:InterfaceBodyDeclarations=>92,
     :InterfaceBodyDeclaration=>64,
     :Semicolon=>65,
     :Modifiers=>66,
     :Modifier=>55,
     :Public=>56,
     :Protected=>57,
     :Static=>58,
     :Abstract=>59,
     :Final=>60,
     :Native=>61},
   66=>
    {:InterfaceMemberDecl=>93,
     :Type=>94,
     :Void=>95,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>96,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88},
   68=>{:TypeList=>97, :QualifiedIdentifier=>49, :Identifier=>50},
   69=>{:QualifiedIdentifier=>98, :Identifier=>47},
   72=>
    {:Type=>99,
     :ArrayType=>100,
     :QualifiedIdentifier=>101,
     :BasicType=>102,
     :Identifier=>103,
     :Byte=>104,
     :Char=>105,
     :Int=>106,
     :Boolean=>107,
     :Short=>108},
   73=>{:QualifiedIdentifier=>109, :Identifier=>50},
   78=>{:Identifier=>110},
   79=>
    {:ConstructorDeclaratorRest=>111,
     :Dot=>112,
     :FormalParameters=>113,
     :OpenParen=>114},
   80=>{:Identifier=>115},
   82=>{:OpenStaple=>116},
   83=>{:OpenStaple=>117},
   94=>{:InterfaceMemberDeclRest=>118, :Identifier=>119},
   95=>{:InterfaceMemberDeclRest=>120, :Identifier=>119},
   96=>{:Dot=>112},
   97=>{:ClassBody=>121, :OpenBrace=>40},
   99=>{:CommaType=>122, :Comma=>72},
   101=>{:OpenStaple=>123},
   102=>{:OpenStaple=>124},
   103=>{:Dot=>125},
   110=>{:MethodDeclaratorRest=>126, :FormalParameters=>127, :OpenParen=>128},
   112=>{:QualifiedIdentifier=>129, :Identifier=>96},
   113=>{:MethodBody=>130, :Block=>131, :OpenBrace=>132},
   114=>
    {:CloseParen=>133,
     :FormalParameter=>134,
     :Type=>135,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>96,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88},
   115=>
    {:MethodOrFieldRest=>136,
     :Semicolon=>137,
     :Equals=>138,
     :MethodDeclaratorRest=>139,
     :FormalParameters=>127,
     :OpenParen=>128},
   116=>{:CloseStaple=>140},
   117=>{:CloseStaple=>141},
   119=>{:FormalParameters=>142, :OpenParen=>143},
   123=>{:CloseStaple=>144},
   124=>{:CloseStaple=>145},
   125=>{:QualifiedIdentifier=>146, :Identifier=>103},
   127=>{:MethodBody=>147, :Semicolon=>148, :Block=>131, :OpenBrace=>132},
   128=>
    {:CloseParen=>149,
     :FormalParameter=>150,
     :Type=>135,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>96,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88},
   132=>
    {:BlockStatements=>151,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>81,
     :QualifiedIdentifier=>163,
     :BasicType=>83,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183},
   134=>{:MoreFormalParameters=>184, :Comma=>185},
   135=>{:Identifier=>186},
   138=>
    {:Expression=>187,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   142=>{:Semicolon=>190},
   143=>
    {:CloseParen=>191,
     :FormalParameter=>192,
     :Type=>135,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>96,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88},
   150=>{:MoreFormalParameters=>193, :Comma=>185},
   151=>{:CloseBrace=>194},
   152=>
    {:BlockStatements=>195,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>81,
     :QualifiedIdentifier=>163,
     :BasicType=>83,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183},
   155=>{:VariableDeclarator=>196, :Identifier=>197},
   157=>{:OpenParen=>198},
   158=>{:OpenParen=>199},
   159=>{:OpenParen=>200},
   160=>
    {:Semicolon=>201,
     :Expression=>202,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   161=>{:Semicolon=>203},
   163=>
    {:OpenStaple=>204,
     :IdentifierSuffix=>205,
     :Arguments=>206,
     :Dot=>207,
     :OpenParen=>208},
   164=>
    {:BlockStatements=>209,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>81,
     :QualifiedIdentifier=>163,
     :BasicType=>83,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183},
   166=>{:Equals=>210},
   167=>{:Dot=>211},
   168=>
    {:MoreTerms=>212,
     :Infixop=>213,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   169=>
    {:Term=>230,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   173=>
    {:Expression=>231,
     :BasicType=>232,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   174=>{:Selectors=>256, :Selector=>257, :Dot=>258, :OpenStaple=>259},
   177=>
    {:Creator=>260,
     :ArrayCreator=>261,
     :QualifiedIdentifier=>262,
     :BasicType=>263,
     :Identifier=>189,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   184=>{:CloseParen=>269},
   185=>
    {:FormalParameter=>270,
     :Type=>135,
     :ArrayType=>81,
     :QualifiedIdentifier=>82,
     :BasicType=>83,
     :Identifier=>96,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88},
   187=>{:Semicolon=>271},
   188=>
    {:IdentifierSuffix=>205,
     :OpenStaple=>272,
     :Arguments=>206,
     :Dot=>207,
     :OpenParen=>208},
   189=>{:Dot=>273},
   192=>{:MoreFormalParameters=>274, :Comma=>185},
   193=>{:CloseParen=>275},
   196=>{:Semicolon=>276},
   197=>{:Equals=>277},
   198=>
    {:Expression=>278,
     :Assignment=>279,
     :SubExpression=>280,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   199=>
    {:ForInit=>286,
     :Expression=>287,
     :Type=>288,
     :Assignment=>165,
     :SubExpression=>166,
     :ArrayType=>81,
     :QualifiedIdentifier=>163,
     :BasicType=>83,
     :Term=>168,
     :Identifier=>167,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183},
   200=>
    {:Expression=>289,
     :Assignment=>279,
     :SubExpression=>280,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   202=>{:Semicolon=>290},
   204=>
    {:CloseStaple=>140,
     :Expression=>291,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   207=>{:This=>310},
   208=>
    {:Expressions=>311,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   209=>{:CloseBrace=>331},
   210=>
    {:SubExpression=>332,
     :Term=>333,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   211=>{:QualifiedIdentifier=>349, :Identifier=>167},
   213=>
    {:Term=>350,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   231=>{:OpenStaple=>351, :CloseParen=>352},
   232=>{:OpenStaple=>353, :CloseParen=>354},
   234=>{:Equals=>355},
   240=>
    {:MoreTerms=>356,
     :Infixop=>357,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   241=>
    {:Term=>358,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   243=>
    {:Expression=>359,
     :BasicType=>360,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   244=>{:Selectors=>361, :Selector=>362, :Dot=>363, :OpenStaple=>364},
   247=>
    {:IdentifierSuffix=>365,
     :OpenStaple=>366,
     :Arguments=>367,
     :Dot=>368,
     :OpenParen=>369},
   248=>
    {:Creator=>370,
     :ArrayCreator=>371,
     :QualifiedIdentifier=>372,
     :BasicType=>373,
     :Identifier=>255,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   255=>{:Dot=>374},
   257=>{:Selectors=>375, :Selector=>257, :Dot=>258, :OpenStaple=>259},
   258=>{:Identifier=>376, :This=>377},
   259=>
    {:Expression=>378,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   262=>{:Arguments=>379, :OpenStaple=>380, :OpenParen=>208},
   263=>{:OpenStaple=>381},
   270=>{:MoreFormalParameters=>382, :Comma=>185},
   272=>
    {:Expression=>291,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   273=>{:QualifiedIdentifier=>383, :Identifier=>189},
   274=>{:CloseParen=>384},
   277=>
    {:Expression=>385,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   278=>{:CloseParen=>386},
   280=>{:Equals=>387},
   281=>
    {:MoreTerms=>388,
     :Infixop=>389,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   282=>
    {:Term=>390,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   284=>
    {:Expression=>391,
     :BasicType=>392,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   285=>{:Selectors=>393, :Selector=>394, :Dot=>363, :OpenStaple=>364},
   286=>{:Semicolon=>395},
   288=>{:VariableDeclarator=>396, :Identifier=>197},
   289=>{:CloseParen=>397},
   291=>{:CloseStaple=>398},
   293=>{:Equals=>399},
   294=>
    {:MoreTerms=>400,
     :Infixop=>401,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   295=>
    {:Term=>402,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   297=>
    {:Expression=>403,
     :BasicType=>404,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   298=>{:Selectors=>405, :Selector=>406, :Dot=>407, :OpenStaple=>408},
   301=>
    {:IdentifierSuffix=>409,
     :OpenStaple=>410,
     :Arguments=>411,
     :Dot=>412,
     :OpenParen=>413},
   302=>
    {:Creator=>414,
     :ArrayCreator=>415,
     :QualifiedIdentifier=>416,
     :BasicType=>417,
     :Identifier=>309,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   309=>{:Dot=>418},
   311=>{:CloseParen=>419},
   312=>{:MoreExpressions=>420, :Comma=>421},
   314=>{:Equals=>422},
   315=>
    {:MoreTerms=>423,
     :Infixop=>424,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   316=>
    {:Term=>425,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   318=>
    {:Expression=>426,
     :BasicType=>427,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   319=>{:Selectors=>428, :Selector=>429, :Dot=>430, :OpenStaple=>431},
   322=>
    {:IdentifierSuffix=>432,
     :OpenStaple=>433,
     :Arguments=>434,
     :Dot=>435,
     :OpenParen=>436},
   323=>
    {:Creator=>437,
     :ArrayCreator=>438,
     :QualifiedIdentifier=>439,
     :BasicType=>440,
     :Identifier=>330,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   330=>{:Dot=>441},
   333=>
    {:MoreTerms=>442,
     :Infixop=>443,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   334=>
    {:Term=>444,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   336=>
    {:Expression=>445,
     :BasicType=>446,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   337=>{:Selectors=>447, :Selector=>448, :Dot=>449, :OpenStaple=>450},
   340=>
    {:IdentifierSuffix=>451,
     :OpenStaple=>452,
     :Arguments=>453,
     :Dot=>454,
     :OpenParen=>455},
   341=>
    {:Creator=>456,
     :ArrayCreator=>457,
     :QualifiedIdentifier=>458,
     :BasicType=>459,
     :Identifier=>348,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   348=>{:Dot=>460},
   350=>
    {:MoreTerms=>461,
     :Infixop=>213,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   351=>{:CloseStaple=>462},
   352=>
    {:Term=>463,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   353=>{:CloseStaple=>464},
   354=>
    {:Term=>465,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   355=>
    {:SubExpression=>466,
     :Term=>467,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   357=>
    {:Term=>483,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   359=>{:OpenStaple=>484, :CloseParen=>485},
   360=>{:OpenStaple=>486, :CloseParen=>487},
   362=>{:Selectors=>488, :Selector=>362, :Dot=>363, :OpenStaple=>364},
   363=>{:Identifier=>489, :This=>490},
   364=>
    {:Expression=>491,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   366=>
    {:Expression=>492,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   368=>{:This=>493},
   369=>
    {:Expressions=>494,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   372=>{:Arguments=>495, :OpenStaple=>496, :OpenParen=>369},
   373=>{:OpenStaple=>497},
   374=>{:QualifiedIdentifier=>498, :Identifier=>255},
   376=>{:Arguments=>499, :OpenParen=>208},
   378=>{:CloseStaple=>500},
   380=>
    {:Expression=>501,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   381=>
    {:Expression=>502,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   386=>
    {:Statement=>503,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   387=>
    {:SubExpression=>512,
     :Term=>513,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   389=>
    {:Term=>518,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   391=>{:OpenStaple=>519, :CloseParen=>520},
   392=>{:OpenStaple=>521, :CloseParen=>522},
   394=>{:Selectors=>523, :Selector=>394, :Dot=>363, :OpenStaple=>364},
   395=>
    {:Semicolon=>524,
     :Expression=>525,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   397=>
    {:Statement=>526,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   399=>
    {:SubExpression=>527,
     :Term=>528,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   401=>
    {:Term=>544,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   403=>{:OpenStaple=>545, :CloseParen=>546},
   404=>{:OpenStaple=>547, :CloseParen=>548},
   406=>{:Selectors=>549, :Selector=>406, :Dot=>407, :OpenStaple=>408},
   407=>{:Identifier=>550, :This=>551},
   408=>
    {:Expression=>552,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   410=>
    {:Expression=>553,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   412=>{:This=>554},
   413=>
    {:Expressions=>555,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   416=>{:Arguments=>556, :OpenStaple=>557, :OpenParen=>413},
   417=>{:OpenStaple=>558},
   418=>{:QualifiedIdentifier=>559, :Identifier=>309},
   421=>
    {:Expression=>560,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   422=>
    {:SubExpression=>561,
     :Term=>562,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   424=>
    {:Term=>578,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   426=>{:OpenStaple=>579, :CloseParen=>580},
   427=>{:OpenStaple=>581, :CloseParen=>582},
   429=>{:Selectors=>583, :Selector=>429, :Dot=>430, :OpenStaple=>431},
   430=>{:Identifier=>584, :This=>585},
   431=>
    {:Expression=>586,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   433=>
    {:Expression=>587,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   435=>{:This=>588},
   436=>
    {:Expressions=>589,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   439=>{:Arguments=>590, :OpenStaple=>591, :OpenParen=>436},
   440=>{:OpenStaple=>592},
   441=>{:QualifiedIdentifier=>593, :Identifier=>330},
   443=>
    {:Term=>594,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   445=>{:OpenStaple=>595, :CloseParen=>596},
   446=>{:OpenStaple=>597, :CloseParen=>598},
   448=>{:Selectors=>599, :Selector=>448, :Dot=>449, :OpenStaple=>450},
   449=>{:Identifier=>600, :This=>601},
   450=>
    {:Expression=>602,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   452=>
    {:Expression=>603,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   454=>{:This=>604},
   455=>
    {:Expressions=>605,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   458=>{:Arguments=>606, :OpenStaple=>607, :OpenParen=>455},
   459=>{:OpenStaple=>608},
   460=>{:QualifiedIdentifier=>609, :Identifier=>348},
   462=>{:CloseParen=>610},
   464=>{:CloseParen=>611},
   467=>
    {:MoreTerms=>612,
     :Infixop=>613,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   468=>
    {:Term=>614,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   470=>
    {:Expression=>615,
     :BasicType=>616,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   471=>{:Selectors=>617, :Selector=>618, :Dot=>619, :OpenStaple=>620},
   474=>
    {:IdentifierSuffix=>621,
     :OpenStaple=>622,
     :Arguments=>623,
     :Dot=>624,
     :OpenParen=>625},
   475=>
    {:Creator=>626,
     :ArrayCreator=>627,
     :QualifiedIdentifier=>628,
     :BasicType=>629,
     :Identifier=>482,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   482=>{:Dot=>630},
   483=>
    {:MoreTerms=>631,
     :Infixop=>357,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   484=>{:CloseStaple=>632},
   485=>
    {:Term=>633,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   486=>{:CloseStaple=>634},
   487=>
    {:Term=>635,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   489=>{:Arguments=>636, :OpenParen=>369},
   491=>{:CloseStaple=>637},
   492=>{:CloseStaple=>638},
   494=>{:CloseParen=>639},
   496=>
    {:Expression=>640,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   497=>
    {:Expression=>641,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   501=>{:CloseStaple=>642},
   502=>{:CloseStaple=>643},
   503=>{:Else=>644},
   505=>{:OpenParen=>645},
   506=>{:OpenParen=>646},
   507=>{:OpenParen=>647},
   508=>
    {:Semicolon=>648,
     :Expression=>649,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   509=>{:Semicolon=>650},
   511=>
    {:BlockStatements=>651,
     :BlockStatement=>152,
     :LocalVariableDeclarationStatement=>153,
     :Statement=>154,
     :Type=>155,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :ArrayType=>81,
     :QualifiedIdentifier=>163,
     :BasicType=>83,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Identifier=>167,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183},
   513=>
    {:MoreTerms=>652,
     :Infixop=>653,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   514=>
    {:Term=>654,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   516=>
    {:Expression=>655,
     :BasicType=>656,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   517=>{:Selectors=>657, :Selector=>658, :Dot=>619, :OpenStaple=>620},
   518=>
    {:MoreTerms=>659,
     :Infixop=>389,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   519=>{:CloseStaple=>660},
   520=>
    {:Term=>661,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   521=>{:CloseStaple=>662},
   522=>
    {:Term=>663,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   524=>
    {:ForUpdate=>664,
     :Expression=>665,
     :VariableDeclarator=>666,
     :Assignment=>279,
     :SubExpression=>280,
     :Identifier=>667,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254},
   525=>{:Semicolon=>668},
   528=>
    {:MoreTerms=>669,
     :Infixop=>670,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   529=>
    {:Term=>671,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   531=>
    {:Expression=>672,
     :BasicType=>673,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   532=>{:Selectors=>674, :Selector=>675, :Dot=>676, :OpenStaple=>677},
   535=>
    {:IdentifierSuffix=>678,
     :OpenStaple=>679,
     :Arguments=>680,
     :Dot=>681,
     :OpenParen=>682},
   536=>
    {:Creator=>683,
     :ArrayCreator=>684,
     :QualifiedIdentifier=>685,
     :BasicType=>686,
     :Identifier=>543,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   543=>{:Dot=>687},
   544=>
    {:MoreTerms=>688,
     :Infixop=>401,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   545=>{:CloseStaple=>689},
   546=>
    {:Term=>690,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   547=>{:CloseStaple=>691},
   548=>
    {:Term=>692,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   550=>{:Arguments=>693, :OpenParen=>413},
   552=>{:CloseStaple=>694},
   553=>{:CloseStaple=>695},
   555=>{:CloseParen=>696},
   557=>
    {:Expression=>697,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   558=>
    {:Expression=>698,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   560=>{:MoreExpressions=>699, :Comma=>421},
   562=>
    {:MoreTerms=>700,
     :Infixop=>701,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   563=>
    {:Term=>702,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   565=>
    {:Expression=>703,
     :BasicType=>704,
     :Assignment=>233,
     :SubExpression=>234,
     :Byte=>235,
     :Char=>236,
     :Int=>237,
     :Boolean=>238,
     :Short=>239,
     :Term=>240,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   566=>{:Selectors=>705, :Selector=>706, :Dot=>707, :OpenStaple=>708},
   569=>
    {:IdentifierSuffix=>709,
     :OpenStaple=>710,
     :Arguments=>711,
     :Dot=>712,
     :OpenParen=>713},
   570=>
    {:Creator=>714,
     :ArrayCreator=>715,
     :QualifiedIdentifier=>716,
     :BasicType=>717,
     :Identifier=>577,
     :Byte=>264,
     :Char=>265,
     :Int=>266,
     :Boolean=>267,
     :Short=>268},
   577=>{:Dot=>718},
   578=>
    {:MoreTerms=>719,
     :Infixop=>424,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   579=>{:CloseStaple=>720},
   580=>
    {:Term=>721,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   581=>{:CloseStaple=>722},
   582=>
    {:Term=>723,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   584=>{:Arguments=>724, :OpenParen=>436},
   586=>{:CloseStaple=>725},
   587=>{:CloseStaple=>726},
   589=>{:CloseParen=>727},
   591=>
    {:Expression=>728,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   592=>
    {:Expression=>729,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   594=>
    {:MoreTerms=>730,
     :Infixop=>443,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   595=>{:CloseStaple=>731},
   596=>
    {:Term=>732,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   597=>{:CloseStaple=>733},
   598=>
    {:Term=>734,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   600=>{:Arguments=>735, :OpenParen=>455},
   602=>{:CloseStaple=>736},
   603=>{:CloseStaple=>737},
   605=>{:CloseParen=>738},
   607=>
    {:Expression=>739,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   608=>
    {:Expression=>740,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   610=>
    {:Term=>741,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   611=>
    {:Term=>742,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   613=>
    {:Term=>743,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   615=>{:OpenStaple=>744, :CloseParen=>745},
   616=>{:OpenStaple=>746, :CloseParen=>747},
   618=>{:Selectors=>748, :Selector=>618, :Dot=>619, :OpenStaple=>620},
   619=>{:Identifier=>749, :This=>750},
   620=>
    {:Expression=>751,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   622=>
    {:Expression=>752,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   624=>{:This=>753},
   625=>
    {:Expressions=>754,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   628=>{:Arguments=>755, :OpenStaple=>756, :OpenParen=>625},
   629=>{:OpenStaple=>757},
   630=>{:QualifiedIdentifier=>758, :Identifier=>482},
   632=>{:CloseParen=>759},
   634=>{:CloseParen=>760},
   640=>{:CloseStaple=>761},
   641=>{:CloseStaple=>762},
   644=>
    {:Statement=>763,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   645=>
    {:Expression=>764,
     :Assignment=>279,
     :SubExpression=>280,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   646=>
    {:ForInit=>765,
     :Expression=>287,
     :Type=>288,
     :Assignment=>165,
     :SubExpression=>166,
     :ArrayType=>81,
     :QualifiedIdentifier=>163,
     :BasicType=>83,
     :Term=>168,
     :Identifier=>167,
     :Byte=>84,
     :Char=>85,
     :Int=>86,
     :Boolean=>87,
     :Short=>88,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183},
   647=>
    {:Expression=>766,
     :Assignment=>279,
     :SubExpression=>280,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   649=>{:Semicolon=>767},
   651=>{:CloseBrace=>768},
   653=>
    {:Term=>769,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   655=>{:OpenStaple=>770, :CloseParen=>771},
   656=>{:OpenStaple=>772, :CloseParen=>773},
   658=>{:Selectors=>774, :Selector=>658, :Dot=>619, :OpenStaple=>620},
   660=>{:CloseParen=>775},
   662=>{:CloseParen=>776},
   664=>{:CloseParen=>777},
   667=>{:Equals=>778, :Dot=>374},
   668=>
    {:ForUpdate=>779,
     :Expression=>665,
     :VariableDeclarator=>666,
     :Assignment=>279,
     :SubExpression=>280,
     :Identifier=>667,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254},
   670=>
    {:Term=>780,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   672=>{:OpenStaple=>781, :CloseParen=>782},
   673=>{:OpenStaple=>783, :CloseParen=>784},
   675=>{:Selectors=>785, :Selector=>675, :Dot=>676, :OpenStaple=>677},
   676=>{:Identifier=>786, :This=>787},
   677=>
    {:Expression=>788,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   679=>
    {:Expression=>789,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   681=>{:This=>790},
   682=>
    {:Expressions=>791,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   685=>{:Arguments=>792, :OpenStaple=>793, :OpenParen=>682},
   686=>{:OpenStaple=>794},
   687=>{:QualifiedIdentifier=>795, :Identifier=>543},
   689=>{:CloseParen=>796},
   691=>{:CloseParen=>797},
   697=>{:CloseStaple=>798},
   698=>{:CloseStaple=>799},
   701=>
    {:Term=>800,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   703=>{:OpenStaple=>801, :CloseParen=>802},
   704=>{:OpenStaple=>803, :CloseParen=>804},
   706=>{:Selectors=>805, :Selector=>706, :Dot=>707, :OpenStaple=>708},
   707=>{:Identifier=>806, :This=>807},
   708=>
    {:Expression=>808,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   710=>
    {:Expression=>809,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   712=>{:This=>810},
   713=>
    {:Expressions=>811,
     :Expression=>312,
     :Assignment=>313,
     :SubExpression=>314,
     :Term=>315,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   716=>{:Arguments=>812, :OpenStaple=>813, :OpenParen=>713},
   717=>{:OpenStaple=>814},
   718=>{:QualifiedIdentifier=>815, :Identifier=>577},
   720=>{:CloseParen=>816},
   722=>{:CloseParen=>817},
   728=>{:CloseStaple=>818},
   729=>{:CloseStaple=>819},
   731=>{:CloseParen=>820},
   733=>{:CloseParen=>821},
   739=>{:CloseStaple=>822},
   740=>{:CloseStaple=>823},
   743=>
    {:MoreTerms=>824,
     :Infixop=>613,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   744=>{:CloseStaple=>825},
   745=>
    {:Term=>826,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   746=>{:CloseStaple=>827},
   747=>
    {:Term=>828,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   749=>{:Arguments=>829, :OpenParen=>625},
   751=>{:CloseStaple=>830},
   752=>{:CloseStaple=>831},
   754=>{:CloseParen=>832},
   756=>
    {:Expression=>833,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   757=>
    {:Expression=>834,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   759=>
    {:Term=>835,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   760=>
    {:Term=>836,
     :TermModifier=>241,
     :UnmodifiedTerm=>242,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>243,
     :Primary=>244,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   764=>{:CloseParen=>837},
   765=>{:Semicolon=>838},
   766=>{:CloseParen=>839},
   769=>
    {:MoreTerms=>840,
     :Infixop=>653,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   770=>{:CloseStaple=>841},
   771=>
    {:Term=>842,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   772=>{:CloseStaple=>843},
   773=>
    {:Term=>844,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   775=>
    {:Term=>845,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   776=>
    {:Term=>846,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   777=>
    {:Statement=>847,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   778=>
    {:Expression=>848,
     :Assignment=>279,
     :SubExpression=>280,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254,
     :Identifier=>255},
   779=>{:CloseParen=>849},
   780=>
    {:MoreTerms=>850,
     :Infixop=>670,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   781=>{:CloseStaple=>851},
   782=>
    {:Term=>852,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   783=>{:CloseStaple=>853},
   784=>
    {:Term=>854,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   786=>{:Arguments=>855, :OpenParen=>682},
   788=>{:CloseStaple=>856},
   789=>{:CloseStaple=>857},
   791=>{:CloseParen=>858},
   793=>
    {:Expression=>859,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   794=>
    {:Expression=>860,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   796=>
    {:Term=>861,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   797=>
    {:Term=>862,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   800=>
    {:MoreTerms=>863,
     :Infixop=>701,
     :LazyOr=>214,
     :LazyAnd=>215,
     :EagerOr=>216,
     :EagerAnd=>217,
     :Equality=>218,
     :NotEqual=>219,
     :LessThan=>220,
     :GreaterThan=>221,
     :LessOrEqual=>222,
     :GreaterOrEqual=>223,
     :Plus=>224,
     :Minus=>225,
     :Multiply=>226,
     :Divide=>227,
     :Modulo=>228,
     :Instanceof=>229},
   801=>{:CloseStaple=>864},
   802=>
    {:Term=>865,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   803=>{:CloseStaple=>866},
   804=>
    {:Term=>867,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   806=>{:Arguments=>868, :OpenParen=>713},
   808=>{:CloseStaple=>869},
   809=>{:CloseStaple=>870},
   811=>{:CloseParen=>871},
   813=>
    {:Expression=>872,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   814=>
    {:Expression=>873,
     :Assignment=>292,
     :SubExpression=>293,
     :Term=>294,
     :TermModifier=>295,
     :UnmodifiedTerm=>296,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>297,
     :Primary=>298,
     :This=>299,
     :Literal=>300,
     :QualifiedIdentifier=>301,
     :New=>302,
     :IntegerLiteral=>303,
     :FloatingPointLiteral=>304,
     :CharacterLiteral=>305,
     :StringLiteral=>306,
     :BooleanLiteral=>307,
     :NullLiteral=>308,
     :Identifier=>309},
   816=>
    {:Term=>874,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   817=>
    {:Term=>875,
     :TermModifier=>316,
     :UnmodifiedTerm=>317,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>318,
     :Primary=>319,
     :This=>320,
     :Literal=>321,
     :QualifiedIdentifier=>322,
     :New=>323,
     :IntegerLiteral=>324,
     :FloatingPointLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   820=>
    {:Term=>876,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   821=>
    {:Term=>877,
     :TermModifier=>334,
     :UnmodifiedTerm=>335,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>336,
     :Primary=>337,
     :This=>338,
     :Literal=>339,
     :QualifiedIdentifier=>340,
     :New=>341,
     :IntegerLiteral=>342,
     :FloatingPointLiteral=>343,
     :CharacterLiteral=>344,
     :StringLiteral=>345,
     :BooleanLiteral=>346,
     :NullLiteral=>347,
     :Identifier=>348},
   825=>{:CloseParen=>878},
   827=>{:CloseParen=>879},
   833=>{:CloseStaple=>880},
   834=>{:CloseStaple=>881},
   837=>
    {:Statement=>882,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   838=>
    {:Semicolon=>883,
     :Expression=>884,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   839=>
    {:Statement=>885,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   841=>{:CloseParen=>886},
   843=>{:CloseParen=>887},
   849=>
    {:Statement=>888,
     :Block=>156,
     :If=>157,
     :For=>158,
     :While=>159,
     :Return=>160,
     :Expression=>161,
     :Semicolon=>162,
     :OpenBrace=>164,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   851=>{:CloseParen=>889},
   853=>{:CloseParen=>890},
   859=>{:CloseStaple=>891},
   860=>{:CloseStaple=>892},
   864=>{:CloseParen=>893},
   866=>{:CloseParen=>894},
   872=>{:CloseStaple=>895},
   873=>{:CloseStaple=>896},
   878=>
    {:Term=>897,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   879=>
    {:Term=>898,
     :TermModifier=>468,
     :UnmodifiedTerm=>469,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>470,
     :Primary=>471,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   882=>{:Else=>899},
   883=>
    {:ForUpdate=>900,
     :Expression=>665,
     :VariableDeclarator=>666,
     :Assignment=>279,
     :SubExpression=>280,
     :Identifier=>667,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254},
   884=>{:Semicolon=>901},
   886=>
    {:Term=>902,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   887=>
    {:Term=>903,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>516,
     :Primary=>517,
     :This=>472,
     :Literal=>473,
     :QualifiedIdentifier=>474,
     :New=>475,
     :IntegerLiteral=>476,
     :FloatingPointLiteral=>477,
     :CharacterLiteral=>478,
     :StringLiteral=>479,
     :BooleanLiteral=>480,
     :NullLiteral=>481,
     :Identifier=>482},
   889=>
    {:Term=>904,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   890=>
    {:Term=>905,
     :TermModifier=>529,
     :UnmodifiedTerm=>530,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>531,
     :Primary=>532,
     :This=>533,
     :Literal=>534,
     :QualifiedIdentifier=>535,
     :New=>536,
     :IntegerLiteral=>537,
     :FloatingPointLiteral=>538,
     :CharacterLiteral=>539,
     :StringLiteral=>540,
     :BooleanLiteral=>541,
     :NullLiteral=>542,
     :Identifier=>543},
   893=>
    {:Term=>906,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   894=>
    {:Term=>907,
     :TermModifier=>563,
     :UnmodifiedTerm=>564,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>565,
     :Primary=>566,
     :This=>567,
     :Literal=>568,
     :QualifiedIdentifier=>569,
     :New=>570,
     :IntegerLiteral=>571,
     :FloatingPointLiteral=>572,
     :CharacterLiteral=>573,
     :StringLiteral=>574,
     :BooleanLiteral=>575,
     :NullLiteral=>576,
     :Identifier=>577},
   899=>
    {:Statement=>908,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   900=>{:CloseParen=>909},
   901=>
    {:ForUpdate=>910,
     :Expression=>665,
     :VariableDeclarator=>666,
     :Assignment=>279,
     :SubExpression=>280,
     :Identifier=>667,
     :Term=>281,
     :TermModifier=>282,
     :UnmodifiedTerm=>283,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>284,
     :Primary=>285,
     :This=>245,
     :Literal=>246,
     :QualifiedIdentifier=>247,
     :New=>248,
     :IntegerLiteral=>249,
     :FloatingPointLiteral=>250,
     :CharacterLiteral=>251,
     :StringLiteral=>252,
     :BooleanLiteral=>253,
     :NullLiteral=>254},
   909=>
    {:Statement=>911,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189},
   910=>{:CloseParen=>912},
   912=>
    {:Statement=>913,
     :Block=>504,
     :If=>505,
     :For=>506,
     :While=>507,
     :Return=>508,
     :Expression=>509,
     :Semicolon=>510,
     :OpenBrace=>511,
     :Assignment=>165,
     :SubExpression=>166,
     :Term=>168,
     :TermModifier=>169,
     :UnmodifiedTerm=>170,
     :Not=>171,
     :Minus=>172,
     :OpenParen=>173,
     :Primary=>174,
     :This=>175,
     :Literal=>176,
     :QualifiedIdentifier=>188,
     :New=>177,
     :IntegerLiteral=>178,
     :FloatingPointLiteral=>179,
     :CharacterLiteral=>180,
     :StringLiteral=>181,
     :BooleanLiteral=>182,
     :NullLiteral=>183,
     :Identifier=>189}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:Class, :Interface]=>[:Modifiers, 0]},
   10=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>{},
   17=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   18=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   19=>{},
   20=>{[:Semicolon, :Dot]=>[:QualifiedIdentifier, 1]},
   21=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   22=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   23=>{},
   24=>{},
   25=>{[:Class, :Interface]=>[:Modifiers, 2]},
   26=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   27=>{},
   28=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 3]},
   29=>{},
   30=>{},
   31=>{},
   32=>{},
   33=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   34=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   35=>{},
   36=>{[:Semicolon, :Dot]=>[:QualifiedIdentifier, 3]},
   37=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   38=>{},
   39=>{},
   40=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   41=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   42=>{},
   43=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   44=>{[:EndProgram]=>[:CompilationUnit, 5]},
   45=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 5]},
   46=>{},
   47=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   48=>{},
   49=>{[:OpenBrace]=>[:CommaType, 0]},
   50=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 1]},
   51=>{},
   52=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   53=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   54=>{},
   55=>
    {[:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   61=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   62=>{},
   63=>{},
   64=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   65=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   66=>{},
   67=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   68=>{},
   69=>{},
   70=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   71=>{[:OpenBrace]=>[:TypeList, 2]},
   72=>{},
   73=>{},
   74=>{[:EndProgram]=>[:ClassBody, 3]},
   75=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   76=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 2]},
   77=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 1]},
   78=>{},
   79=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   80=>{},
   81=>{[:Identifier]=>[:Type, 1]},
   82=>{[:Identifier]=>[:Type, 1]},
   83=>{[:Identifier]=>[:Type, 1]},
   84=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   85=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   86=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   87=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   88=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   89=>
    {[:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 2]},
   90=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   91=>{[:EndProgram]=>[:InterfaceBody, 3]},
   92=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   93=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 2]},
   94=>{},
   95=>{},
   96=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   97=>{},
   98=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   99=>{[:OpenBrace]=>[:CommaType, 0]},
   100=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   101=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   102=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   103=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   104=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   105=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   106=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   107=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   108=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   109=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 3]},
   110=>{},
   111=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 2]},
   112=>{},
   113=>{},
   114=>{},
   115=>{},
   116=>{},
   117=>{},
   118=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   119=>{},
   120=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   121=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   122=>{[:OpenBrace]=>[:CommaType, 3]},
   123=>{},
   124=>{},
   125=>{},
   126=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 3]},
   127=>{},
   128=>{},
   129=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   130=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   131=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodBody, 1]},
   132=>{[:CloseBrace]=>[:BlockStatements, 0]},
   133=>{[:OpenBrace]=>[:FormalParameters, 2]},
   134=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   135=>{},
   136=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldDecl, 3]},
   137=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   138=>{},
   139=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   140=>{[:Identifier]=>[:ArrayType, 3]},
   141=>{[:Identifier]=>[:ArrayType, 3]},
   142=>{},
   143=>{},
   144=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   145=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   146=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   147=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   148=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   149=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   150=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   151=>{},
   152=>{[:CloseBrace]=>[:BlockStatements, 0]},
   153=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   154=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   155=>{},
   156=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   157=>{},
   158=>{},
   159=>{},
   160=>{},
   161=>{},
   162=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   163=>
    {[:Identifier]=>[:Type, 1],
     [:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   164=>{[:CloseBrace]=>[:BlockStatements, 0]},
   165=>{[:Semicolon]=>[:Expression, 1]},
   166=>{[:Semicolon]=>[:Expression, 1]},
   167=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   168=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   169=>{},
   170=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 1]},
   171=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   172=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   173=>{},
   174=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   175=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   176=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   177=>{},
   178=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   179=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   180=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   181=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   182=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   183=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   184=>{},
   185=>{},
   186=>{[:Comma, :CloseParen]=>[:FormalParameter, 2]},
   187=>{},
   188=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   189=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   190=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 3]},
   191=>{[:Semicolon]=>[:FormalParameters, 2]},
   192=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   193=>{},
   194=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 3]},
   195=>{[:CloseBrace]=>[:BlockStatements, 2]},
   196=>{},
   197=>{},
   198=>{},
   199=>{[:Semicolon]=>[:ForInit, 0]},
   200=>{},
   201=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   202=>{},
   203=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   204=>{},
   205=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   206=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 1]},
   207=>{},
   208=>{[:CloseParen]=>[:Expressions, 0]},
   209=>{},
   210=>{},
   211=>{},
   212=>{[:Semicolon, :Equals]=>[:SubExpression, 2]},
   213=>{},
   214=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   215=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   216=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   217=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   218=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   219=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   220=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   221=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   222=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   223=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   224=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   225=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   226=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   227=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   228=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   229=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   230=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   231=>{},
   232=>{},
   233=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   234=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   235=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   236=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   237=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   238=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   239=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   240=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   241=>{},
   242=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   243=>{},
   244=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   245=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   246=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   247=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   248=>{},
   249=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   250=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   251=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   252=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   253=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   254=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   255=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   256=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 2]},
   257=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   258=>{},
   259=>{},
   260=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   261=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   262=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   263=>{},
   264=>{[:OpenStaple]=>[:BasicType, 1]},
   265=>{[:OpenStaple]=>[:BasicType, 1]},
   266=>{[:OpenStaple]=>[:BasicType, 1]},
   267=>{[:OpenStaple]=>[:BasicType, 1]},
   268=>{[:OpenStaple]=>[:BasicType, 1]},
   269=>{[:OpenBrace]=>[:FormalParameters, 4]},
   270=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   271=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 3]},
   272=>{},
   273=>{},
   274=>{},
   275=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 4]},
   276=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]},
   277=>{},
   278=>{},
   279=>{[:CloseParen]=>[:Expression, 1]},
   280=>{[:CloseParen]=>[:Expression, 1]},
   281=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   282=>{},
   283=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   284=>{},
   285=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   286=>{},
   287=>{[:Semicolon]=>[:ForInit, 1]},
   288=>{},
   289=>{},
   290=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 3]},
   291=>{},
   292=>{[:CloseStaple]=>[:Expression, 1]},
   293=>{[:CloseStaple]=>[:Expression, 1]},
   294=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   295=>{},
   296=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 1]},
   297=>{},
   298=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   299=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   300=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   302=>{},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   304=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   305=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   306=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   307=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   308=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   309=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   310=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 2]},
   311=>{},
   312=>{[:CloseParen]=>[:MoreExpressions, 0]},
   313=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   314=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   315=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   316=>{},
   317=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   318=>{},
   319=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   320=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   321=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   322=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   323=>{},
   324=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   325=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   326=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   327=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   328=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   329=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   330=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   331=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Block, 3]},
   332=>{[:Semicolon]=>[:Assignment, 3]},
   333=>{[:Semicolon]=>[:MoreTerms, 0]},
   334=>{},
   335=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 1]},
   336=>{},
   337=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   338=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   339=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   340=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   341=>{},
   342=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   343=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   344=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   345=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   346=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   347=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   348=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   349=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   350=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   351=>{},
   352=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 3]},
   353=>{},
   354=>{},
   355=>{},
   356=>{[:OpenStaple, :CloseParen, :Equals]=>[:SubExpression, 2]},
   357=>{},
   358=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   359=>{},
   360=>{},
   361=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   362=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   363=>{},
   364=>{},
   365=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   366=>{},
   367=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   368=>{},
   369=>{[:CloseParen]=>[:Expressions, 0]},
   370=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   371=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   372=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   373=>{},
   374=>{},
   375=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 2]},
   376=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   377=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   378=>{},
   379=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   380=>{},
   381=>{},
   382=>{[:CloseParen]=>[:MoreFormalParameters, 3]},
   383=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   384=>{[:Semicolon]=>[:FormalParameters, 4]},
   385=>{[:Semicolon]=>[:VariableDeclarator, 3]},
   386=>{},
   387=>{},
   388=>{[:CloseParen, :Equals]=>[:SubExpression, 2]},
   389=>{},
   390=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   391=>{},
   392=>{},
   393=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   394=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   395=>{},
   396=>{[:Semicolon]=>[:ForInit, 2]},
   397=>{},
   398=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 3]},
   399=>{},
   400=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]},
   401=>{},
   402=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   403=>{},
   404=>{},
   405=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 2]},
   406=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   407=>{},
   408=>{},
   409=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   410=>{},
   411=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 1]},
   412=>{},
   413=>{[:CloseParen]=>[:Expressions, 0]},
   414=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   415=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   416=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   417=>{},
   418=>{},
   419=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Arguments, 3]},
   420=>{[:CloseParen]=>[:Expressions, 2]},
   421=>{},
   422=>{},
   423=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]},
   424=>{},
   425=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   426=>{},
   427=>{},
   428=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   429=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   430=>{},
   431=>{},
   432=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   433=>{},
   434=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   435=>{},
   436=>{[:CloseParen]=>[:Expressions, 0]},
   437=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   438=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   439=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   440=>{},
   441=>{},
   442=>{[:Semicolon]=>[:SubExpression, 2]},
   443=>{},
   444=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 2]},
   445=>{},
   446=>{},
   447=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   448=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   449=>{},
   450=>{},
   451=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   452=>{},
   453=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 1]},
   454=>{},
   455=>{[:CloseParen]=>[:Expressions, 0]},
   456=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   457=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   458=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   459=>{},
   460=>{},
   461=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]},
   462=>{},
   463=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   464=>{},
   465=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   466=>{[:OpenStaple, :CloseParen]=>[:Assignment, 3]},
   467=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   468=>{},
   469=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 1]},
   470=>{},
   471=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   472=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   473=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   474=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   475=>{},
   476=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   477=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   478=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   479=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   480=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   481=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   482=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   483=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   484=>{},
   485=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   486=>{},
   487=>{},
   488=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   489=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   490=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   491=>{},
   492=>{},
   493=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 2]},
   494=>{},
   495=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   496=>{},
   497=>{},
   498=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   499=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   500=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   501=>{},
   502=>{},
   503=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   504=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   505=>{},
   506=>{},
   507=>{},
   508=>{},
   509=>{},
   510=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   511=>{[:CloseBrace]=>[:BlockStatements, 0]},
   512=>{[:CloseParen]=>[:Assignment, 3]},
   513=>{[:CloseParen]=>[:MoreTerms, 0]},
   514=>{},
   515=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 1]},
   516=>{},
   517=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   518=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   519=>{},
   520=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   521=>{},
   522=>{},
   523=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   524=>{[:CloseParen]=>[:ForUpdate, 0]},
   525=>{},
   526=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   527=>{[:CloseStaple]=>[:Assignment, 3]},
   528=>{[:CloseStaple]=>[:MoreTerms, 0]},
   529=>{},
   530=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 1]},
   531=>{},
   532=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   533=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   534=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   535=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   536=>{},
   537=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   538=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   539=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   540=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   541=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   542=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   543=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   544=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   545=>{},
   546=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 3]},
   547=>{},
   548=>{},
   549=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 2]},
   550=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   551=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   552=>{},
   553=>{},
   554=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 2]},
   555=>{},
   556=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   557=>{},
   558=>{},
   559=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   560=>{[:CloseParen]=>[:MoreExpressions, 0]},
   561=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   562=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   563=>{},
   564=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 1]},
   565=>{},
   566=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   567=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   568=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   569=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   570=>{},
   571=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   572=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   573=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   574=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   575=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   576=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   577=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   578=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   579=>{},
   580=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   581=>{},
   582=>{},
   583=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   584=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   585=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   586=>{},
   587=>{},
   588=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 2]},
   589=>{},
   590=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   591=>{},
   592=>{},
   593=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   594=>{[:Semicolon]=>[:MoreTerms, 0]},
   595=>{},
   596=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 3]},
   597=>{},
   598=>{},
   599=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 2]},
   600=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 2]},
   601=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 2]},
   602=>{},
   603=>{},
   604=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 2]},
   605=>{},
   606=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 2]},
   607=>{},
   608=>{},
   609=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   610=>{},
   611=>{},
   612=>{[:OpenStaple, :CloseParen]=>[:SubExpression, 2]},
   613=>{},
   614=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 2]},
   615=>{},
   616=>{},
   617=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   618=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   619=>{},
   620=>{},
   621=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   622=>{},
   623=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   624=>{},
   625=>{[:CloseParen]=>[:Expressions, 0]},
   626=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   627=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   628=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   629=>{},
   630=>{},
   631=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   632=>{},
   633=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   634=>{},
   635=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   636=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   637=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   638=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   639=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   640=>{},
   641=>{},
   642=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   643=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   644=>{},
   645=>{},
   646=>{[:Semicolon]=>[:ForInit, 0]},
   647=>{},
   648=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   649=>{},
   650=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   651=>{},
   652=>{[:CloseParen]=>[:SubExpression, 2]},
   653=>{},
   654=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 2]},
   655=>{},
   656=>{},
   657=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   658=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   659=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]},
   660=>{},
   661=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   662=>{},
   663=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   664=>{},
   665=>{[:CloseParen]=>[:ForUpdate, 1]},
   666=>{[:CloseParen]=>[:ForUpdate, 1]},
   667=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   668=>{[:CloseParen]=>[:ForUpdate, 0]},
   669=>{[:CloseStaple]=>[:SubExpression, 2]},
   670=>{},
   671=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 2]},
   672=>{},
   673=>{},
   674=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   675=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   676=>{},
   677=>{},
   678=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   679=>{},
   680=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 1]},
   681=>{},
   682=>{[:CloseParen]=>[:Expressions, 0]},
   683=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   684=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   685=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   686=>{},
   687=>{},
   688=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]},
   689=>{},
   690=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   691=>{},
   692=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   693=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   694=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   695=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 3]},
   696=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Arguments, 3]},
   697=>{},
   698=>{},
   699=>{[:CloseParen]=>[:MoreExpressions, 3]},
   700=>{[:Comma, :CloseParen]=>[:SubExpression, 2]},
   701=>{},
   702=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 2]},
   703=>{},
   704=>{},
   705=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   706=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   707=>{},
   708=>{},
   709=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   710=>{},
   711=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   712=>{},
   713=>{[:CloseParen]=>[:Expressions, 0]},
   714=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   715=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   716=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   717=>{},
   718=>{},
   719=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   720=>{},
   721=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   722=>{},
   723=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   724=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   725=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   726=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   727=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   728=>{},
   729=>{},
   730=>{[:Semicolon]=>[:MoreTerms, 3]},
   731=>{},
   732=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   733=>{},
   734=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   735=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   736=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   737=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 3]},
   738=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Arguments, 3]},
   739=>{},
   740=>{},
   741=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   742=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   743=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   744=>{},
   745=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   746=>{},
   747=>{},
   748=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 2]},
   749=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 2]},
   750=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 2]},
   751=>{},
   752=>{},
   753=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 2]},
   754=>{},
   755=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 2]},
   756=>{},
   757=>{},
   758=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   759=>{},
   760=>{},
   761=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   762=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   763=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 7]},
   764=>{},
   765=>{},
   766=>{},
   767=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 3]},
   768=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Block, 3]},
   769=>{[:CloseParen]=>[:MoreTerms, 0]},
   770=>{},
   771=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   772=>{},
   773=>{},
   774=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 2]},
   775=>{},
   776=>{},
   777=>{},
   778=>{},
   779=>{},
   780=>{[:CloseStaple]=>[:MoreTerms, 0]},
   781=>{},
   782=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 3]},
   783=>{},
   784=>{},
   785=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 2]},
   786=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 2]},
   787=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 2]},
   788=>{},
   789=>{},
   790=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 2]},
   791=>{},
   792=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 2]},
   793=>{},
   794=>{},
   795=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   796=>{},
   797=>{},
   798=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   799=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   800=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   801=>{},
   802=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 3]},
   803=>{},
   804=>{},
   805=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 2]},
   806=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   807=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   808=>{},
   809=>{},
   810=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 2]},
   811=>{},
   812=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 2]},
   813=>{},
   814=>{},
   815=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   816=>{},
   817=>{},
   818=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   819=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   820=>{},
   821=>{},
   822=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   823=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   824=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 3]},
   825=>{},
   826=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   827=>{},
   828=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   829=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   830=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   831=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   832=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Arguments, 3]},
   833=>{},
   834=>{},
   835=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   836=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   837=>{},
   838=>{},
   839=>{},
   840=>{[:CloseParen]=>[:MoreTerms, 3]},
   841=>{},
   842=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   843=>{},
   844=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   845=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   846=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   847=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 8]},
   848=>{[:CloseParen]=>[:VariableDeclarator, 3]},
   849=>{},
   850=>{[:CloseStaple]=>[:MoreTerms, 3]},
   851=>{},
   852=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   853=>{},
   854=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   855=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   856=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   857=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 3]},
   858=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Arguments, 3]},
   859=>{},
   860=>{},
   861=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   862=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   863=>{[:Comma, :CloseParen]=>[:MoreTerms, 3]},
   864=>{},
   865=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   866=>{},
   867=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   868=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   869=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   870=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   871=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Arguments, 3]},
   872=>{},
   873=>{},
   874=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   875=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   876=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   877=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   878=>{},
   879=>{},
   880=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   881=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   882=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   883=>{[:CloseParen]=>[:ForUpdate, 0]},
   884=>{},
   885=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   886=>{},
   887=>{},
   888=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 9]},
   889=>{},
   890=>{},
   891=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   892=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   893=>{},
   894=>{},
   895=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   896=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   897=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   898=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   899=>{},
   900=>{},
   901=>{[:CloseParen]=>[:ForUpdate, 0]},
   902=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   903=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   904=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   905=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   906=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   907=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   908=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 7]},
   909=>{},
   910=>{},
   911=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 8]},
   912=>{},
   913=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 9]}}}