PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   3=>{:QualifiedIdentifier=>16, :Identifier=>17},
   4=>{:ImportDeclarations=>18, :ImportDeclaration=>4, :Import=>5},
   5=>{:Identifier=>19},
   8=>
    {:ClassDeclaration=>20,
     :InterfaceDeclaration=>21,
     :Class=>22,
     :Interface=>23},
   9=>
    {:Modifiers=>24,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   16=>{:Semicolon=>25},
   17=>{:Dot=>26},
   19=>{:MoreImportIdentifiers=>27, :Dot=>28},
   22=>{:Identifier=>29},
   23=>{:Identifier=>30},
   25=>{:ImportDeclarations=>31, :ImportDeclaration=>4, :Import=>5},
   26=>{:QualifiedIdentifier=>32, :Identifier=>17},
   27=>{:Semicolon=>33},
   28=>{:Identifier=>34, :Multiply=>35},
   29=>{:ClassBody=>36, :Extends=>37, :Implements=>38, :OpenBrace=>39},
   30=>{:InterfaceBody=>40, :Extends=>41, :OpenBrace=>42},
   31=>
    {:TypeDeclaration=>43,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   34=>{:MoreImportIdentifiers=>44, :Dot=>28},
   37=>{:QualifiedIdentifier=>45, :Identifier=>46},
   38=>{:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49},
   39=>
    {:ClassBodyDeclarations=>50,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   41=>{:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49},
   42=>
    {:InterfaceBodyDeclarations=>62,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   45=>{:ClassBody=>66, :Implements=>67, :OpenBrace=>39},
   46=>{:Dot=>68},
   47=>{:ClassBody=>69, :OpenBrace=>39},
   48=>{:Comma=>70},
   49=>{:Dot=>71},
   50=>{:CloseBrace=>72},
   51=>
    {:ClassBodyDeclarations=>73,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   53=>
    {:Type=>74,
     :Void=>75,
     :Identifier=>76,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   54=>
    {:Modifiers=>85,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   61=>{:InterfaceBody=>86, :OpenBrace=>42},
   62=>{:CloseBrace=>87},
   63=>
    {:InterfaceBodyDeclarations=>88,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   65=>
    {:InterfaceMemberDecl=>89,
     :Type=>90,
     :Void=>91,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   67=>{:TypeList=>93, :QualifiedIdentifier=>48, :Identifier=>49},
   68=>{:QualifiedIdentifier=>94, :Identifier=>46},
   70=>{:TypeList=>95, :QualifiedIdentifier=>48, :Identifier=>49},
   71=>{:QualifiedIdentifier=>96, :Identifier=>49},
   74=>{:Identifier=>97},
   75=>{:Identifier=>98},
   76=>
    {:ConstructorDeclaratorRest=>99,
     :Dot=>100,
     :FormalParameters=>101,
     :OpenParen=>102},
   78=>{:OpenStaple=>103},
   79=>{:OpenStaple=>104},
   90=>{:InterfaceMemberDeclRest=>105, :Identifier=>106},
   91=>{:InterfaceMemberDeclRest=>107, :Identifier=>106},
   92=>{:Dot=>100},
   93=>{:ClassBody=>108, :OpenBrace=>39},
   97=>
    {:Semicolon=>109,
     :Equals=>110,
     :MethodDeclaratorRest=>111,
     :FormalParameters=>112,
     :OpenParen=>113},
   98=>{:MethodDeclaratorRest=>114, :FormalParameters=>112, :OpenParen=>113},
   100=>{:QualifiedIdentifier=>115, :Identifier=>92},
   101=>{:MethodBody=>116, :Block=>117, :OpenBrace=>118},
   102=>
    {:CloseParen=>119,
     :FormalParameter=>120,
     :Type=>121,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   103=>{:CloseStaple=>122},
   104=>{:CloseStaple=>123},
   106=>{:FormalParameters=>124, :OpenParen=>125},
   110=>
    {:Expression=>126,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   112=>{:MethodBody=>146, :Semicolon=>147, :Block=>117, :OpenBrace=>118},
   113=>
    {:CloseParen=>148,
     :FormalParameter=>149,
     :Type=>121,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   118=>
    {:BlockStatements=>150,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>77,
     :QualifiedIdentifier=>162,
     :BasicType=>79,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   120=>{:MoreFormalParameters=>165, :Comma=>166},
   121=>{:Identifier=>167},
   124=>{:Semicolon=>168},
   125=>
    {:CloseParen=>169,
     :FormalParameter=>170,
     :Type=>121,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   126=>{:Semicolon=>171},
   128=>{:Equals=>172},
   129=>
    {:MoreTerms=>173,
     :Infixop=>174,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   130=>
    {:Term=>191,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   134=>
    {:Expression=>192,
     :BasicType=>193,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   135=>{:Selectors=>216, :Selector=>217, :Dot=>218, :OpenStaple=>219},
   138=>
    {:IdentifierSuffix=>220,
     :OpenStaple=>221,
     :Arguments=>222,
     :OpenParen=>223},
   139=>
    {:Creator=>224,
     :ArrayCreator=>225,
     :QualifiedIdentifier=>226,
     :BasicType=>227,
     :Identifier=>145,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   145=>{:Dot=>233},
   149=>{:MoreFormalParameters=>234, :Comma=>166},
   150=>{:CloseBrace=>235},
   151=>
    {:BlockStatements=>236,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>77,
     :QualifiedIdentifier=>162,
     :BasicType=>79,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   154=>{:VariableDeclarator=>237, :Identifier=>238},
   156=>{:OpenParen=>239},
   157=>{:OpenParen=>240},
   158=>{:OpenParen=>241},
   159=>
    {:Semicolon=>242,
     :Expression=>243,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   160=>{:Semicolon=>244},
   162=>
    {:OpenStaple=>245,
     :IdentifierSuffix=>220,
     :Arguments=>222,
     :OpenParen=>223},
   163=>
    {:BlockStatements=>246,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>77,
     :QualifiedIdentifier=>162,
     :BasicType=>79,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   164=>{:Dot=>247},
   165=>{:CloseParen=>248},
   166=>
    {:FormalParameter=>249,
     :Type=>121,
     :ArrayType=>77,
     :QualifiedIdentifier=>78,
     :BasicType=>79,
     :Identifier=>92,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84},
   170=>{:MoreFormalParameters=>250, :Comma=>166},
   172=>
    {:SubExpression=>251,
     :Term=>252,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   174=>
    {:Term=>267,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   192=>{:OpenStaple=>268, :CloseParen=>269},
   193=>{:OpenStaple=>270, :CloseParen=>271},
   195=>{:Equals=>272},
   201=>
    {:MoreTerms=>273,
     :Infixop=>274,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   202=>
    {:Term=>275,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   204=>
    {:Expression=>276,
     :BasicType=>277,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   205=>{:Selectors=>278, :Selector=>279, :Dot=>280, :OpenStaple=>281},
   208=>
    {:IdentifierSuffix=>282,
     :OpenStaple=>283,
     :Arguments=>284,
     :OpenParen=>285},
   209=>
    {:Creator=>286,
     :ArrayCreator=>287,
     :QualifiedIdentifier=>288,
     :BasicType=>289,
     :Identifier=>215,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   215=>{:Dot=>290},
   217=>{:Selectors=>291, :Selector=>217, :Dot=>218, :OpenStaple=>219},
   218=>{:Identifier=>292},
   219=>
    {:Expression=>293,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   221=>
    {:Expression=>311,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   223=>
    {:Expressions=>312,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   226=>{:Arguments=>331, :OpenStaple=>332, :OpenParen=>223},
   227=>{:OpenStaple=>333},
   233=>{:QualifiedIdentifier=>334, :Identifier=>145},
   234=>{:CloseParen=>335},
   237=>{:Semicolon=>336},
   238=>{:Equals=>337},
   239=>
    {:Expression=>338,
     :Assignment=>339,
     :SubExpression=>340,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   240=>
    {:ForInit=>346,
     :Expression=>347,
     :Type=>348,
     :Assignment=>127,
     :SubExpression=>128,
     :ArrayType=>77,
     :QualifiedIdentifier=>162,
     :BasicType=>79,
     :Term=>129,
     :Identifier=>164,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   241=>
    {:Expression=>349,
     :Assignment=>339,
     :SubExpression=>340,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   243=>{:Semicolon=>350},
   245=>
    {:CloseStaple=>122,
     :Expression=>311,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   246=>{:CloseBrace=>351},
   247=>{:QualifiedIdentifier=>352, :Identifier=>164},
   249=>{:MoreFormalParameters=>353, :Comma=>166},
   250=>{:CloseParen=>354},
   252=>
    {:MoreTerms=>355,
     :Infixop=>356,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   253=>
    {:Term=>357,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   255=>
    {:Expression=>358,
     :BasicType=>359,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   256=>{:Selectors=>360, :Selector=>361, :Dot=>362, :OpenStaple=>363},
   259=>
    {:IdentifierSuffix=>364,
     :OpenStaple=>365,
     :Arguments=>366,
     :OpenParen=>367},
   260=>
    {:Creator=>368,
     :ArrayCreator=>369,
     :QualifiedIdentifier=>370,
     :BasicType=>371,
     :Identifier=>266,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   266=>{:Dot=>372},
   267=>
    {:MoreTerms=>373,
     :Infixop=>174,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   268=>{:CloseStaple=>374},
   269=>
    {:Term=>375,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   270=>{:CloseStaple=>376},
   271=>
    {:Term=>377,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   272=>
    {:SubExpression=>378,
     :Term=>379,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   274=>
    {:Term=>394,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   276=>{:OpenStaple=>395, :CloseParen=>396},
   277=>{:OpenStaple=>397, :CloseParen=>398},
   279=>{:Selectors=>399, :Selector=>279, :Dot=>280, :OpenStaple=>281},
   280=>{:Identifier=>400},
   281=>
    {:Expression=>401,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   283=>
    {:Expression=>402,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   285=>
    {:Expressions=>403,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   288=>{:Arguments=>404, :OpenStaple=>405, :OpenParen=>285},
   289=>{:OpenStaple=>406},
   290=>{:QualifiedIdentifier=>407, :Identifier=>215},
   292=>{:Arguments=>408, :OpenParen=>223},
   293=>{:CloseStaple=>409},
   295=>{:Equals=>410},
   296=>
    {:MoreTerms=>411,
     :Infixop=>412,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   297=>
    {:Term=>413,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   299=>
    {:Expression=>414,
     :BasicType=>415,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   300=>{:Selectors=>416, :Selector=>417, :Dot=>418, :OpenStaple=>419},
   303=>
    {:IdentifierSuffix=>420,
     :OpenStaple=>421,
     :Arguments=>422,
     :OpenParen=>423},
   304=>
    {:Creator=>424,
     :ArrayCreator=>425,
     :QualifiedIdentifier=>426,
     :BasicType=>427,
     :Identifier=>310,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   310=>{:Dot=>428},
   311=>{:CloseStaple=>429},
   312=>{:CloseParen=>430},
   313=>{:MoreExpressions=>431, :Comma=>432},
   315=>{:Equals=>433},
   316=>
    {:MoreTerms=>434,
     :Infixop=>435,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   317=>
    {:Term=>436,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   319=>
    {:Expression=>437,
     :BasicType=>438,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   320=>{:Selectors=>439, :Selector=>440, :Dot=>441, :OpenStaple=>442},
   323=>
    {:IdentifierSuffix=>443,
     :OpenStaple=>444,
     :Arguments=>445,
     :OpenParen=>446},
   324=>
    {:Creator=>447,
     :ArrayCreator=>448,
     :QualifiedIdentifier=>449,
     :BasicType=>450,
     :Identifier=>330,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   330=>{:Dot=>451},
   332=>
    {:Expression=>452,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   333=>
    {:Expression=>453,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   337=>
    {:Expression=>454,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   338=>{:CloseParen=>455},
   340=>{:Equals=>456},
   341=>
    {:MoreTerms=>457,
     :Infixop=>458,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   342=>
    {:Term=>459,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   344=>
    {:Expression=>460,
     :BasicType=>461,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   345=>{:Selectors=>462, :Selector=>463, :Dot=>280, :OpenStaple=>281},
   346=>{:Semicolon=>464},
   348=>{:VariableDeclarator=>465, :Identifier=>238},
   349=>{:CloseParen=>466},
   356=>
    {:Term=>467,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   358=>{:OpenStaple=>468, :CloseParen=>469},
   359=>{:OpenStaple=>470, :CloseParen=>471},
   361=>{:Selectors=>472, :Selector=>361, :Dot=>362, :OpenStaple=>363},
   362=>{:Identifier=>473},
   363=>
    {:Expression=>474,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   365=>
    {:Expression=>475,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   367=>
    {:Expressions=>476,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   370=>{:Arguments=>477, :OpenStaple=>478, :OpenParen=>367},
   371=>{:OpenStaple=>479},
   372=>{:QualifiedIdentifier=>480, :Identifier=>266},
   374=>{:CloseParen=>481},
   376=>{:CloseParen=>482},
   379=>
    {:MoreTerms=>483,
     :Infixop=>484,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   380=>
    {:Term=>485,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   382=>
    {:Expression=>486,
     :BasicType=>487,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   383=>{:Selectors=>488, :Selector=>489, :Dot=>490, :OpenStaple=>491},
   386=>
    {:IdentifierSuffix=>492,
     :OpenStaple=>493,
     :Arguments=>494,
     :OpenParen=>495},
   387=>
    {:Creator=>496,
     :ArrayCreator=>497,
     :QualifiedIdentifier=>498,
     :BasicType=>499,
     :Identifier=>393,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   393=>{:Dot=>500},
   394=>
    {:MoreTerms=>501,
     :Infixop=>274,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   395=>{:CloseStaple=>502},
   396=>
    {:Term=>503,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   397=>{:CloseStaple=>504},
   398=>
    {:Term=>505,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   400=>{:Arguments=>506, :OpenParen=>285},
   401=>{:CloseStaple=>507},
   402=>{:CloseStaple=>508},
   403=>{:CloseParen=>509},
   405=>
    {:Expression=>510,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   406=>
    {:Expression=>511,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   410=>
    {:SubExpression=>512,
     :Term=>513,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   412=>
    {:Term=>528,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   414=>{:OpenStaple=>529, :CloseParen=>530},
   415=>{:OpenStaple=>531, :CloseParen=>532},
   417=>{:Selectors=>533, :Selector=>417, :Dot=>418, :OpenStaple=>419},
   418=>{:Identifier=>534},
   419=>
    {:Expression=>535,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   421=>
    {:Expression=>536,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   423=>
    {:Expressions=>537,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   426=>{:Arguments=>538, :OpenStaple=>539, :OpenParen=>423},
   427=>{:OpenStaple=>540},
   428=>{:QualifiedIdentifier=>541, :Identifier=>310},
   432=>
    {:Expression=>542,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   433=>
    {:SubExpression=>543,
     :Term=>544,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   435=>
    {:Term=>559,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   437=>{:OpenStaple=>560, :CloseParen=>561},
   438=>{:OpenStaple=>562, :CloseParen=>563},
   440=>{:Selectors=>564, :Selector=>440, :Dot=>441, :OpenStaple=>442},
   441=>{:Identifier=>565},
   442=>
    {:Expression=>566,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   444=>
    {:Expression=>567,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   446=>
    {:Expressions=>568,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   449=>{:Arguments=>569, :OpenStaple=>570, :OpenParen=>446},
   450=>{:OpenStaple=>571},
   451=>{:QualifiedIdentifier=>572, :Identifier=>330},
   452=>{:CloseStaple=>573},
   453=>{:CloseStaple=>574},
   455=>
    {:Statement=>575,
     :Block=>576,
     :If=>577,
     :For=>578,
     :While=>579,
     :Return=>580,
     :Expression=>581,
     :Semicolon=>582,
     :OpenBrace=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   456=>
    {:SubExpression=>584,
     :Term=>585,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   458=>
    {:Term=>590,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   460=>{:OpenStaple=>591, :CloseParen=>592},
   461=>{:OpenStaple=>593, :CloseParen=>594},
   463=>{:Selectors=>595, :Selector=>463, :Dot=>280, :OpenStaple=>281},
   464=>
    {:Semicolon=>596,
     :Expression=>597,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   466=>
    {:Statement=>598,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   467=>
    {:MoreTerms=>599,
     :Infixop=>356,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   468=>{:CloseStaple=>600},
   469=>
    {:Term=>601,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   470=>{:CloseStaple=>602},
   471=>
    {:Term=>603,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   473=>{:Arguments=>604, :OpenParen=>367},
   474=>{:CloseStaple=>605},
   475=>{:CloseStaple=>606},
   476=>{:CloseParen=>607},
   478=>
    {:Expression=>608,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   479=>
    {:Expression=>609,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   481=>
    {:Term=>610,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   482=>
    {:Term=>611,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   484=>
    {:Term=>612,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   486=>{:OpenStaple=>613, :CloseParen=>614},
   487=>{:OpenStaple=>615, :CloseParen=>616},
   489=>{:Selectors=>617, :Selector=>489, :Dot=>490, :OpenStaple=>491},
   490=>{:Identifier=>618},
   491=>
    {:Expression=>619,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   493=>
    {:Expression=>620,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   495=>
    {:Expressions=>621,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   498=>{:Arguments=>622, :OpenStaple=>623, :OpenParen=>495},
   499=>{:OpenStaple=>624},
   500=>{:QualifiedIdentifier=>625, :Identifier=>393},
   502=>{:CloseParen=>626},
   504=>{:CloseParen=>627},
   510=>{:CloseStaple=>628},
   511=>{:CloseStaple=>629},
   513=>
    {:MoreTerms=>630,
     :Infixop=>631,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   514=>
    {:Term=>632,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   516=>
    {:Expression=>633,
     :BasicType=>634,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   517=>{:Selectors=>635, :Selector=>636, :Dot=>637, :OpenStaple=>638},
   520=>
    {:IdentifierSuffix=>639,
     :OpenStaple=>640,
     :Arguments=>641,
     :OpenParen=>642},
   521=>
    {:Creator=>643,
     :ArrayCreator=>644,
     :QualifiedIdentifier=>645,
     :BasicType=>646,
     :Identifier=>527,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   527=>{:Dot=>647},
   528=>
    {:MoreTerms=>648,
     :Infixop=>412,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   529=>{:CloseStaple=>649},
   530=>
    {:Term=>650,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   531=>{:CloseStaple=>651},
   532=>
    {:Term=>652,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   534=>{:Arguments=>653, :OpenParen=>423},
   535=>{:CloseStaple=>654},
   536=>{:CloseStaple=>655},
   537=>{:CloseParen=>656},
   539=>
    {:Expression=>657,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   540=>
    {:Expression=>658,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   542=>{:MoreExpressions=>659, :Comma=>432},
   544=>
    {:MoreTerms=>660,
     :Infixop=>661,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   545=>
    {:Term=>662,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   547=>
    {:Expression=>663,
     :BasicType=>664,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   548=>{:Selectors=>665, :Selector=>666, :Dot=>667, :OpenStaple=>668},
   551=>
    {:IdentifierSuffix=>669,
     :OpenStaple=>670,
     :Arguments=>671,
     :OpenParen=>672},
   552=>
    {:Creator=>673,
     :ArrayCreator=>674,
     :QualifiedIdentifier=>675,
     :BasicType=>676,
     :Identifier=>558,
     :Byte=>228,
     :Char=>229,
     :Int=>230,
     :Boolean=>231,
     :Short=>232},
   558=>{:Dot=>677},
   559=>
    {:MoreTerms=>678,
     :Infixop=>435,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   560=>{:CloseStaple=>679},
   561=>
    {:Term=>680,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   562=>{:CloseStaple=>681},
   563=>
    {:Term=>682,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   565=>{:Arguments=>683, :OpenParen=>446},
   566=>{:CloseStaple=>684},
   567=>{:CloseStaple=>685},
   568=>{:CloseParen=>686},
   570=>
    {:Expression=>687,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   571=>
    {:Expression=>688,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   575=>{:Else=>689},
   577=>{:OpenParen=>690},
   578=>{:OpenParen=>691},
   579=>{:OpenParen=>692},
   580=>
    {:Semicolon=>693,
     :Expression=>694,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   581=>{:Semicolon=>695},
   583=>
    {:BlockStatements=>696,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>77,
     :QualifiedIdentifier=>162,
     :BasicType=>79,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Identifier=>164,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   585=>
    {:MoreTerms=>697,
     :Infixop=>698,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   586=>
    {:Term=>699,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   588=>
    {:Expression=>700,
     :BasicType=>701,
     :Assignment=>194,
     :SubExpression=>195,
     :Byte=>196,
     :Char=>197,
     :Int=>198,
     :Boolean=>199,
     :Short=>200,
     :Term=>201,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   589=>{:Selectors=>702, :Selector=>703, :Dot=>490, :OpenStaple=>491},
   590=>
    {:MoreTerms=>704,
     :Infixop=>458,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   591=>{:CloseStaple=>705},
   592=>
    {:Term=>706,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   593=>{:CloseStaple=>707},
   594=>
    {:Term=>708,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   596=>
    {:ForUpdate=>709,
     :Expression=>710,
     :VariableDeclarator=>711,
     :Assignment=>339,
     :SubExpression=>340,
     :Identifier=>712,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   597=>{:Semicolon=>713},
   600=>{:CloseParen=>714},
   602=>{:CloseParen=>715},
   608=>{:CloseStaple=>716},
   609=>{:CloseStaple=>717},
   612=>
    {:MoreTerms=>718,
     :Infixop=>484,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   613=>{:CloseStaple=>719},
   614=>
    {:Term=>720,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   615=>{:CloseStaple=>721},
   616=>
    {:Term=>722,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   618=>{:Arguments=>723, :OpenParen=>495},
   619=>{:CloseStaple=>724},
   620=>{:CloseStaple=>725},
   621=>{:CloseParen=>726},
   623=>
    {:Expression=>727,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   624=>
    {:Expression=>728,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   626=>
    {:Term=>729,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   627=>
    {:Term=>730,
     :TermModifier=>202,
     :UnmodifiedTerm=>203,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>204,
     :Primary=>205,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   631=>
    {:Term=>731,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   633=>{:OpenStaple=>732, :CloseParen=>733},
   634=>{:OpenStaple=>734, :CloseParen=>735},
   636=>{:Selectors=>736, :Selector=>636, :Dot=>637, :OpenStaple=>638},
   637=>{:Identifier=>737},
   638=>
    {:Expression=>738,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   640=>
    {:Expression=>739,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   642=>
    {:Expressions=>740,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   645=>{:Arguments=>741, :OpenStaple=>742, :OpenParen=>642},
   646=>{:OpenStaple=>743},
   647=>{:QualifiedIdentifier=>744, :Identifier=>527},
   649=>{:CloseParen=>745},
   651=>{:CloseParen=>746},
   657=>{:CloseStaple=>747},
   658=>{:CloseStaple=>748},
   661=>
    {:Term=>749,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   663=>{:OpenStaple=>750, :CloseParen=>751},
   664=>{:OpenStaple=>752, :CloseParen=>753},
   666=>{:Selectors=>754, :Selector=>666, :Dot=>667, :OpenStaple=>668},
   667=>{:Identifier=>755},
   668=>
    {:Expression=>756,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   670=>
    {:Expression=>757,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   672=>
    {:Expressions=>758,
     :Expression=>313,
     :Assignment=>314,
     :SubExpression=>315,
     :Term=>316,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   675=>{:Arguments=>759, :OpenStaple=>760, :OpenParen=>672},
   676=>{:OpenStaple=>761},
   677=>{:QualifiedIdentifier=>762, :Identifier=>558},
   679=>{:CloseParen=>763},
   681=>{:CloseParen=>764},
   687=>{:CloseStaple=>765},
   688=>{:CloseStaple=>766},
   689=>
    {:Statement=>767,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   690=>
    {:Expression=>768,
     :Assignment=>339,
     :SubExpression=>340,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   691=>
    {:ForInit=>769,
     :Expression=>347,
     :Type=>348,
     :Assignment=>127,
     :SubExpression=>128,
     :ArrayType=>77,
     :QualifiedIdentifier=>162,
     :BasicType=>79,
     :Term=>129,
     :Identifier=>164,
     :Byte=>80,
     :Char=>81,
     :Int=>82,
     :Boolean=>83,
     :Short=>84,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144},
   692=>
    {:Expression=>770,
     :Assignment=>339,
     :SubExpression=>340,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   694=>{:Semicolon=>771},
   696=>{:CloseBrace=>772},
   698=>
    {:Term=>773,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   700=>{:OpenStaple=>774, :CloseParen=>775},
   701=>{:OpenStaple=>776, :CloseParen=>777},
   703=>{:Selectors=>778, :Selector=>703, :Dot=>490, :OpenStaple=>491},
   705=>{:CloseParen=>779},
   707=>{:CloseParen=>780},
   709=>{:CloseParen=>781},
   712=>{:Equals=>782, :Dot=>290},
   713=>
    {:ForUpdate=>783,
     :Expression=>710,
     :VariableDeclarator=>711,
     :Assignment=>339,
     :SubExpression=>340,
     :Identifier=>712,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   714=>
    {:Term=>784,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   715=>
    {:Term=>785,
     :TermModifier=>253,
     :UnmodifiedTerm=>254,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>255,
     :Primary=>256,
     :This=>257,
     :Literal=>258,
     :QualifiedIdentifier=>259,
     :New=>260,
     :IntegerLiteral=>261,
     :CharacterLiteral=>262,
     :StringLiteral=>263,
     :BooleanLiteral=>264,
     :NullLiteral=>265,
     :Identifier=>266},
   719=>{:CloseParen=>786},
   721=>{:CloseParen=>787},
   727=>{:CloseStaple=>788},
   728=>{:CloseStaple=>789},
   731=>
    {:MoreTerms=>790,
     :Infixop=>631,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   732=>{:CloseStaple=>791},
   733=>
    {:Term=>792,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   734=>{:CloseStaple=>793},
   735=>
    {:Term=>794,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   737=>{:Arguments=>795, :OpenParen=>642},
   738=>{:CloseStaple=>796},
   739=>{:CloseStaple=>797},
   740=>{:CloseParen=>798},
   742=>
    {:Expression=>799,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   743=>
    {:Expression=>800,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   745=>
    {:Term=>801,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   746=>
    {:Term=>802,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   749=>
    {:MoreTerms=>803,
     :Infixop=>661,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   750=>{:CloseStaple=>804},
   751=>
    {:Term=>805,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   752=>{:CloseStaple=>806},
   753=>
    {:Term=>807,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   755=>{:Arguments=>808, :OpenParen=>672},
   756=>{:CloseStaple=>809},
   757=>{:CloseStaple=>810},
   758=>{:CloseParen=>811},
   760=>
    {:Expression=>812,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   761=>
    {:Expression=>813,
     :Assignment=>294,
     :SubExpression=>295,
     :Term=>296,
     :TermModifier=>297,
     :UnmodifiedTerm=>298,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>299,
     :Primary=>300,
     :This=>301,
     :Literal=>302,
     :QualifiedIdentifier=>303,
     :New=>304,
     :IntegerLiteral=>305,
     :CharacterLiteral=>306,
     :StringLiteral=>307,
     :BooleanLiteral=>308,
     :NullLiteral=>309,
     :Identifier=>310},
   763=>
    {:Term=>814,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   764=>
    {:Term=>815,
     :TermModifier=>317,
     :UnmodifiedTerm=>318,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>319,
     :Primary=>320,
     :This=>321,
     :Literal=>322,
     :QualifiedIdentifier=>323,
     :New=>324,
     :IntegerLiteral=>325,
     :CharacterLiteral=>326,
     :StringLiteral=>327,
     :BooleanLiteral=>328,
     :NullLiteral=>329,
     :Identifier=>330},
   768=>{:CloseParen=>816},
   769=>{:Semicolon=>817},
   770=>{:CloseParen=>818},
   773=>
    {:MoreTerms=>819,
     :Infixop=>698,
     :LazyOr=>175,
     :LazyAnd=>176,
     :EagerOr=>177,
     :EagerAnd=>178,
     :Equality=>179,
     :NotEqual=>180,
     :LessThan=>181,
     :GreaterThan=>182,
     :LessOrEqual=>183,
     :GreaterOrEqual=>184,
     :Plus=>185,
     :Minus=>186,
     :Multiply=>187,
     :Divide=>188,
     :Modulo=>189,
     :Instanceof=>190},
   774=>{:CloseStaple=>820},
   775=>
    {:Term=>821,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   776=>{:CloseStaple=>822},
   777=>
    {:Term=>823,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   779=>
    {:Term=>824,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   780=>
    {:Term=>825,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   781=>
    {:Statement=>826,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   782=>
    {:Expression=>827,
     :Assignment=>339,
     :SubExpression=>340,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214,
     :Identifier=>215},
   783=>{:CloseParen=>828},
   786=>
    {:Term=>829,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   787=>
    {:Term=>830,
     :TermModifier=>380,
     :UnmodifiedTerm=>381,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>382,
     :Primary=>383,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   791=>{:CloseParen=>831},
   793=>{:CloseParen=>832},
   799=>{:CloseStaple=>833},
   800=>{:CloseStaple=>834},
   804=>{:CloseParen=>835},
   806=>{:CloseParen=>836},
   812=>{:CloseStaple=>837},
   813=>{:CloseStaple=>838},
   816=>
    {:Statement=>839,
     :Block=>576,
     :If=>577,
     :For=>578,
     :While=>579,
     :Return=>580,
     :Expression=>581,
     :Semicolon=>582,
     :OpenBrace=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   817=>
    {:Semicolon=>840,
     :Expression=>841,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   818=>
    {:Statement=>842,
     :Block=>576,
     :If=>577,
     :For=>578,
     :While=>579,
     :Return=>580,
     :Expression=>581,
     :Semicolon=>582,
     :OpenBrace=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   820=>{:CloseParen=>843},
   822=>{:CloseParen=>844},
   828=>
    {:Statement=>845,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   831=>
    {:Term=>846,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   832=>
    {:Term=>847,
     :TermModifier=>514,
     :UnmodifiedTerm=>515,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>516,
     :Primary=>517,
     :This=>518,
     :Literal=>519,
     :QualifiedIdentifier=>520,
     :New=>521,
     :IntegerLiteral=>522,
     :CharacterLiteral=>523,
     :StringLiteral=>524,
     :BooleanLiteral=>525,
     :NullLiteral=>526,
     :Identifier=>527},
   835=>
    {:Term=>848,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   836=>
    {:Term=>849,
     :TermModifier=>545,
     :UnmodifiedTerm=>546,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>547,
     :Primary=>548,
     :This=>549,
     :Literal=>550,
     :QualifiedIdentifier=>551,
     :New=>552,
     :IntegerLiteral=>553,
     :CharacterLiteral=>554,
     :StringLiteral=>555,
     :BooleanLiteral=>556,
     :NullLiteral=>557,
     :Identifier=>558},
   839=>{:Else=>850},
   840=>
    {:ForUpdate=>851,
     :Expression=>710,
     :VariableDeclarator=>711,
     :Assignment=>339,
     :SubExpression=>340,
     :Identifier=>712,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   841=>{:Semicolon=>852},
   843=>
    {:Term=>853,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   844=>
    {:Term=>854,
     :TermModifier=>586,
     :UnmodifiedTerm=>587,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>588,
     :Primary=>589,
     :This=>384,
     :Literal=>385,
     :QualifiedIdentifier=>386,
     :New=>387,
     :IntegerLiteral=>388,
     :CharacterLiteral=>389,
     :StringLiteral=>390,
     :BooleanLiteral=>391,
     :NullLiteral=>392,
     :Identifier=>393},
   850=>
    {:Statement=>855,
     :Block=>576,
     :If=>577,
     :For=>578,
     :While=>579,
     :Return=>580,
     :Expression=>581,
     :Semicolon=>582,
     :OpenBrace=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   851=>{:CloseParen=>856},
   852=>
    {:ForUpdate=>857,
     :Expression=>710,
     :VariableDeclarator=>711,
     :Assignment=>339,
     :SubExpression=>340,
     :Identifier=>712,
     :Term=>341,
     :TermModifier=>342,
     :UnmodifiedTerm=>343,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>344,
     :Primary=>345,
     :This=>206,
     :Literal=>207,
     :QualifiedIdentifier=>208,
     :New=>209,
     :IntegerLiteral=>210,
     :CharacterLiteral=>211,
     :StringLiteral=>212,
     :BooleanLiteral=>213,
     :NullLiteral=>214},
   856=>
    {:Statement=>858,
     :Block=>576,
     :If=>577,
     :For=>578,
     :While=>579,
     :Return=>580,
     :Expression=>581,
     :Semicolon=>582,
     :OpenBrace=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145},
   857=>{:CloseParen=>859},
   859=>
    {:Statement=>860,
     :Block=>576,
     :If=>577,
     :For=>578,
     :While=>579,
     :Return=>580,
     :Expression=>581,
     :Semicolon=>582,
     :OpenBrace=>583,
     :Assignment=>127,
     :SubExpression=>128,
     :Term=>129,
     :TermModifier=>130,
     :UnmodifiedTerm=>131,
     :Not=>132,
     :Minus=>133,
     :OpenParen=>134,
     :Primary=>135,
     :This=>136,
     :Literal=>137,
     :QualifiedIdentifier=>138,
     :New=>139,
     :IntegerLiteral=>140,
     :CharacterLiteral=>141,
     :StringLiteral=>142,
     :BooleanLiteral=>143,
     :NullLiteral=>144,
     :Identifier=>145}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:Class, :Interface]=>[:Modifiers, 0]},
   10=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>{},
   17=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   18=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   19=>{[:Semicolon]=>[:MoreImportIdentifiers, 0]},
   20=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   21=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   22=>{},
   23=>{},
   24=>{[:Class, :Interface]=>[:Modifiers, 2]},
   25=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   26=>{},
   27=>{},
   28=>{},
   29=>{},
   30=>{},
   31=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   32=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   33=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 4]},
   34=>{[:Semicolon]=>[:MoreImportIdentifiers, 0]},
   35=>{[:Semicolon]=>[:MoreImportIdentifiers, 2]},
   36=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   37=>{},
   38=>{},
   39=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   40=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   41=>{},
   42=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   43=>{[:EndProgram]=>[:CompilationUnit, 5]},
   44=>{[:Semicolon]=>[:MoreImportIdentifiers, 3]},
   45=>{},
   46=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   47=>{},
   48=>{[:OpenBrace]=>[:TypeList, 1]},
   49=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]},
   50=>{},
   51=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   52=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   53=>{},
   54=>
    {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 0]},
   55=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Void]=>[:Modifier, 1]},
   61=>{},
   62=>{},
   63=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   64=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   65=>{},
   66=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   67=>{},
   68=>{},
   69=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   70=>{},
   71=>{},
   72=>{[:EndProgram]=>[:ClassBody, 3]},
   73=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   74=>{},
   75=>{},
   76=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   77=>{[:Identifier]=>[:Type, 1]},
   78=>{[:Identifier]=>[:Type, 1]},
   79=>{[:Identifier]=>[:Type, 1]},
   80=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   81=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   82=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   83=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   84=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   85=>
    {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>
      [:Modifiers, 2]},
   86=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   87=>{[:EndProgram]=>[:InterfaceBody, 3]},
   88=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   89=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 2]},
   90=>{},
   91=>{},
   92=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   93=>{},
   94=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   95=>{[:OpenBrace]=>[:TypeList, 3]},
   96=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]},
   97=>{},
   98=>{},
   99=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 3]},
   100=>{},
   101=>{},
   102=>{},
   103=>{},
   104=>{},
   105=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   106=>{},
   107=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   108=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   109=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   110=>{},
   111=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   112=>{},
   113=>{},
   114=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 4]},
   115=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   116=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   117=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodBody, 1]},
   118=>{[:CloseBrace]=>[:BlockStatements, 0]},
   119=>{[:OpenBrace]=>[:FormalParameters, 2]},
   120=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   121=>{},
   122=>{[:Identifier]=>[:ArrayType, 3]},
   123=>{[:Identifier]=>[:ArrayType, 3]},
   124=>{},
   125=>{},
   126=>{},
   127=>{[:Semicolon]=>[:Expression, 1]},
   128=>{[:Semicolon]=>[:Expression, 1]},
   129=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   130=>{},
   131=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 1]},
   132=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   133=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   134=>{},
   135=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   136=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   137=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   138=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   139=>{},
   140=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   141=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   142=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   143=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   144=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   145=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   146=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   147=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   148=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   149=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   150=>{},
   151=>{[:CloseBrace]=>[:BlockStatements, 0]},
   152=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   153=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   154=>{},
   155=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   156=>{},
   157=>{},
   158=>{},
   159=>{},
   160=>{},
   161=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   162=>
    {[:Identifier]=>[:Type, 1],
     [:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   163=>{[:CloseBrace]=>[:BlockStatements, 0]},
   164=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   165=>{},
   166=>{},
   167=>{[:Comma, :CloseParen]=>[:FormalParameter, 2]},
   168=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 3]},
   169=>{[:Semicolon]=>[:FormalParameters, 2]},
   170=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   171=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 6]},
   172=>{},
   173=>{[:Semicolon, :Equals]=>[:SubExpression, 2]},
   174=>{},
   175=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   176=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   177=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   178=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   179=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   180=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   181=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   182=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   183=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   184=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   185=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   186=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   187=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   188=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   189=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   190=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   191=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   192=>{},
   193=>{},
   194=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   195=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   196=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   197=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   198=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   199=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   200=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   201=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   202=>{},
   203=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   204=>{},
   205=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   206=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   207=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   208=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   209=>{},
   210=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   211=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   212=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   213=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   214=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   215=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   216=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 2]},
   217=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   218=>{},
   219=>{},
   220=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   221=>{},
   222=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 1]},
   223=>{[:CloseParen]=>[:Expressions, 0]},
   224=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   225=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   226=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   227=>{},
   228=>{[:OpenStaple]=>[:BasicType, 1]},
   229=>{[:OpenStaple]=>[:BasicType, 1]},
   230=>{[:OpenStaple]=>[:BasicType, 1]},
   231=>{[:OpenStaple]=>[:BasicType, 1]},
   232=>{[:OpenStaple]=>[:BasicType, 1]},
   233=>{},
   234=>{},
   235=>
    {[:Semicolon,
      :Identifier,
      :Void,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 3]},
   236=>{[:CloseBrace]=>[:BlockStatements, 2]},
   237=>{},
   238=>{},
   239=>{},
   240=>{[:Semicolon]=>[:ForInit, 0]},
   241=>{},
   242=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   243=>{},
   244=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   245=>{},
   246=>{},
   247=>{},
   248=>{[:OpenBrace]=>[:FormalParameters, 4]},
   249=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   250=>{},
   251=>{[:Semicolon]=>[:Assignment, 3]},
   252=>{[:Semicolon]=>[:MoreTerms, 0]},
   253=>{},
   254=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 1]},
   255=>{},
   256=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   257=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   258=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   259=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   260=>{},
   261=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   262=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   263=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   264=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   265=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   266=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   267=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   268=>{},
   269=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 3]},
   270=>{},
   271=>{},
   272=>{},
   273=>{[:OpenStaple, :CloseParen, :Equals]=>[:SubExpression, 2]},
   274=>{},
   275=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   276=>{},
   277=>{},
   278=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   279=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   280=>{},
   281=>{},
   282=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   283=>{},
   284=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   285=>{[:CloseParen]=>[:Expressions, 0]},
   286=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   287=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   288=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   289=>{},
   290=>{},
   291=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 2]},
   292=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   293=>{},
   294=>{[:CloseStaple]=>[:Expression, 1]},
   295=>{[:CloseStaple]=>[:Expression, 1]},
   296=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   297=>{},
   298=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 1]},
   299=>{},
   300=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   302=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   304=>{},
   305=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   306=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   307=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   308=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   309=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   310=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   311=>{},
   312=>{},
   313=>{[:CloseParen]=>[:MoreExpressions, 0]},
   314=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   315=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   316=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   317=>{},
   318=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   319=>{},
   320=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   321=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   322=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   323=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   324=>{},
   325=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   326=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   327=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   328=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   329=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   330=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   331=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   332=>{},
   333=>{},
   334=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   335=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 4]},
   336=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]},
   337=>{},
   338=>{},
   339=>{[:CloseParen]=>[:Expression, 1]},
   340=>{[:CloseParen]=>[:Expression, 1]},
   341=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   342=>{},
   343=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   344=>{},
   345=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   346=>{},
   347=>{[:Semicolon]=>[:ForInit, 1]},
   348=>{},
   349=>{},
   350=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 3]},
   351=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Block, 3]},
   352=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   353=>{[:CloseParen]=>[:MoreFormalParameters, 3]},
   354=>{[:Semicolon]=>[:FormalParameters, 4]},
   355=>{[:Semicolon]=>[:SubExpression, 2]},
   356=>{},
   357=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 2]},
   358=>{},
   359=>{},
   360=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   361=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   362=>{},
   363=>{},
   364=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   365=>{},
   366=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 1]},
   367=>{[:CloseParen]=>[:Expressions, 0]},
   368=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   369=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   370=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   371=>{},
   372=>{},
   373=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]},
   374=>{},
   375=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   376=>{},
   377=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   378=>{[:OpenStaple, :CloseParen]=>[:Assignment, 3]},
   379=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   380=>{},
   381=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 1]},
   382=>{},
   383=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   384=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   385=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   386=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   387=>{},
   388=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   389=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   390=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   391=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   392=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   393=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   394=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   395=>{},
   396=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   397=>{},
   398=>{},
   399=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   400=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   401=>{},
   402=>{},
   403=>{},
   404=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   405=>{},
   406=>{},
   407=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   408=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   409=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   410=>{},
   411=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]},
   412=>{},
   413=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   414=>{},
   415=>{},
   416=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 2]},
   417=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   418=>{},
   419=>{},
   420=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   421=>{},
   422=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 1]},
   423=>{[:CloseParen]=>[:Expressions, 0]},
   424=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   425=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   426=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   427=>{},
   428=>{},
   429=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 3]},
   430=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Arguments, 3]},
   431=>{[:CloseParen]=>[:Expressions, 2]},
   432=>{},
   433=>{},
   434=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]},
   435=>{},
   436=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   437=>{},
   438=>{},
   439=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   440=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   441=>{},
   442=>{},
   443=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   444=>{},
   445=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   446=>{[:CloseParen]=>[:Expressions, 0]},
   447=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   448=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   449=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   450=>{},
   451=>{},
   452=>{},
   453=>{},
   454=>{[:Semicolon]=>[:VariableDeclarator, 3]},
   455=>{},
   456=>{},
   457=>{[:CloseParen, :Equals]=>[:SubExpression, 2]},
   458=>{},
   459=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   460=>{},
   461=>{},
   462=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   463=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   464=>{},
   465=>{[:Semicolon]=>[:ForInit, 2]},
   466=>{},
   467=>{[:Semicolon]=>[:MoreTerms, 0]},
   468=>{},
   469=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 3]},
   470=>{},
   471=>{},
   472=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 2]},
   473=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 2]},
   474=>{},
   475=>{},
   476=>{},
   477=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 2]},
   478=>{},
   479=>{},
   480=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   481=>{},
   482=>{},
   483=>{[:OpenStaple, :CloseParen]=>[:SubExpression, 2]},
   484=>{},
   485=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 2]},
   486=>{},
   487=>{},
   488=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   489=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   490=>{},
   491=>{},
   492=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   493=>{},
   494=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   495=>{[:CloseParen]=>[:Expressions, 0]},
   496=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   497=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   498=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   499=>{},
   500=>{},
   501=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   502=>{},
   503=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   504=>{},
   505=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   506=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   507=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   508=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   509=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   510=>{},
   511=>{},
   512=>{[:CloseStaple]=>[:Assignment, 3]},
   513=>{[:CloseStaple]=>[:MoreTerms, 0]},
   514=>{},
   515=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 1]},
   516=>{},
   517=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   518=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   519=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   520=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   521=>{},
   522=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   523=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   524=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   525=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   526=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   527=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   528=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   529=>{},
   530=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 3]},
   531=>{},
   532=>{},
   533=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 2]},
   534=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   535=>{},
   536=>{},
   537=>{},
   538=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   539=>{},
   540=>{},
   541=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   542=>{[:CloseParen]=>[:MoreExpressions, 0]},
   543=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   544=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   545=>{},
   546=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 1]},
   547=>{},
   548=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   549=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   550=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   551=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   552=>{},
   553=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   554=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   555=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   556=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   557=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   558=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   559=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   560=>{},
   561=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   562=>{},
   563=>{},
   564=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   565=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   566=>{},
   567=>{},
   568=>{},
   569=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   570=>{},
   571=>{},
   572=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   573=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   574=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   575=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   576=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   577=>{},
   578=>{},
   579=>{},
   580=>{},
   581=>{},
   582=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   583=>{[:CloseBrace]=>[:BlockStatements, 0]},
   584=>{[:CloseParen]=>[:Assignment, 3]},
   585=>{[:CloseParen]=>[:MoreTerms, 0]},
   586=>{},
   587=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 1]},
   588=>{},
   589=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   590=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   591=>{},
   592=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   593=>{},
   594=>{},
   595=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   596=>{[:CloseParen]=>[:ForUpdate, 0]},
   597=>{},
   598=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   599=>{[:Semicolon]=>[:MoreTerms, 3]},
   600=>{},
   601=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   602=>{},
   603=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   604=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   605=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   606=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 3]},
   607=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Arguments, 3]},
   608=>{},
   609=>{},
   610=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   611=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   612=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   613=>{},
   614=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   615=>{},
   616=>{},
   617=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 2]},
   618=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 2]},
   619=>{},
   620=>{},
   621=>{},
   622=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 2]},
   623=>{},
   624=>{},
   625=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   626=>{},
   627=>{},
   628=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   629=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   630=>{[:CloseStaple]=>[:SubExpression, 2]},
   631=>{},
   632=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 2]},
   633=>{},
   634=>{},
   635=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   636=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   637=>{},
   638=>{},
   639=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   640=>{},
   641=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 1]},
   642=>{[:CloseParen]=>[:Expressions, 0]},
   643=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   644=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   645=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   646=>{},
   647=>{},
   648=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]},
   649=>{},
   650=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   651=>{},
   652=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   653=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   654=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   655=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 3]},
   656=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Arguments, 3]},
   657=>{},
   658=>{},
   659=>{[:CloseParen]=>[:MoreExpressions, 3]},
   660=>{[:Comma, :CloseParen]=>[:SubExpression, 2]},
   661=>{},
   662=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 2]},
   663=>{},
   664=>{},
   665=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   666=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   667=>{},
   668=>{},
   669=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   670=>{},
   671=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   672=>{[:CloseParen]=>[:Expressions, 0]},
   673=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   674=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   675=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   676=>{},
   677=>{},
   678=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   679=>{},
   680=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   681=>{},
   682=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   683=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   684=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   685=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   686=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   687=>{},
   688=>{},
   689=>{},
   690=>{},
   691=>{[:Semicolon]=>[:ForInit, 0]},
   692=>{},
   693=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   694=>{},
   695=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   696=>{},
   697=>{[:CloseParen]=>[:SubExpression, 2]},
   698=>{},
   699=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 2]},
   700=>{},
   701=>{},
   702=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   703=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   704=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]},
   705=>{},
   706=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   707=>{},
   708=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   709=>{},
   710=>{[:CloseParen]=>[:ForUpdate, 1]},
   711=>{[:CloseParen]=>[:ForUpdate, 1]},
   712=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   713=>{[:CloseParen]=>[:ForUpdate, 0]},
   714=>{},
   715=>{},
   716=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   717=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   718=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 3]},
   719=>{},
   720=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   721=>{},
   722=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   723=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   724=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   725=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   726=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Arguments, 3]},
   727=>{},
   728=>{},
   729=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   730=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   731=>{[:CloseStaple]=>[:MoreTerms, 0]},
   732=>{},
   733=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 3]},
   734=>{},
   735=>{},
   736=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 2]},
   737=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 2]},
   738=>{},
   739=>{},
   740=>{},
   741=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 2]},
   742=>{},
   743=>{},
   744=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   745=>{},
   746=>{},
   747=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   748=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   749=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   750=>{},
   751=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 3]},
   752=>{},
   753=>{},
   754=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 2]},
   755=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   756=>{},
   757=>{},
   758=>{},
   759=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 2]},
   760=>{},
   761=>{},
   762=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   763=>{},
   764=>{},
   765=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   766=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   767=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 7]},
   768=>{},
   769=>{},
   770=>{},
   771=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 3]},
   772=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Block, 3]},
   773=>{[:CloseParen]=>[:MoreTerms, 0]},
   774=>{},
   775=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   776=>{},
   777=>{},
   778=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 2]},
   779=>{},
   780=>{},
   781=>{},
   782=>{},
   783=>{},
   784=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   785=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   786=>{},
   787=>{},
   788=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   789=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   790=>{[:CloseStaple]=>[:MoreTerms, 3]},
   791=>{},
   792=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   793=>{},
   794=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   795=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   796=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   797=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 3]},
   798=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Arguments, 3]},
   799=>{},
   800=>{},
   801=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   802=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   803=>{[:Comma, :CloseParen]=>[:MoreTerms, 3]},
   804=>{},
   805=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   806=>{},
   807=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   808=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   809=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   810=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   811=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Arguments, 3]},
   812=>{},
   813=>{},
   814=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   815=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   816=>{},
   817=>{},
   818=>{},
   819=>{[:CloseParen]=>[:MoreTerms, 3]},
   820=>{},
   821=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   822=>{},
   823=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   824=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   825=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   826=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 8]},
   827=>{[:CloseParen]=>[:VariableDeclarator, 3]},
   828=>{},
   829=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   830=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   831=>{},
   832=>{},
   833=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   834=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   835=>{},
   836=>{},
   837=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   838=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   839=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   840=>{[:CloseParen]=>[:ForUpdate, 0]},
   841=>{},
   842=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   843=>{},
   844=>{},
   845=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 9]},
   846=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   847=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   848=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   849=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   850=>{},
   851=>{},
   852=>{[:CloseParen]=>[:ForUpdate, 0]},
   853=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   854=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   855=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 7]},
   856=>{},
   857=>{},
   858=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 8]},
   859=>{},
   860=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 9]}}}