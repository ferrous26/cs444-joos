PARSER_RULES = 
{:transitions=>
  {0=>
    {:CompilationUnit=>1,
     :ImportDeclarations=>2,
     :Package=>3,
     :ImportDeclaration=>4,
     :Import=>5},
   1=>{:EndProgram=>6},
   2=>
    {:TypeDeclaration=>7,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   3=>{:QualifiedIdentifier=>16, :Identifier=>17},
   4=>{:ImportDeclarations=>18, :ImportDeclaration=>4, :Import=>5},
   5=>{:Identifier=>19},
   8=>
    {:ClassDeclaration=>20,
     :InterfaceDeclaration=>21,
     :Class=>22,
     :Interface=>23},
   9=>
    {:Modifiers=>24,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   16=>{:Semicolon=>25},
   17=>{:Dot=>26},
   19=>{:MoreImportIdentifiers=>27, :Dot=>28},
   22=>{:Identifier=>29},
   23=>{:Identifier=>30},
   25=>{:ImportDeclarations=>31, :ImportDeclaration=>4, :Import=>5},
   26=>{:QualifiedIdentifier=>32, :Identifier=>17},
   27=>{:Semicolon=>33},
   28=>{:Identifier=>34, :Multiply=>35},
   29=>{:ClassBody=>36, :Extends=>37, :Implements=>38, :OpenBrace=>39},
   30=>{:InterfaceBody=>40, :Extends=>41, :OpenBrace=>42},
   31=>
    {:TypeDeclaration=>43,
     :Modifiers=>8,
     :Modifier=>9,
     :Public=>10,
     :Protected=>11,
     :Static=>12,
     :Abstract=>13,
     :Final=>14,
     :Native=>15},
   34=>{:MoreImportIdentifiers=>44, :Dot=>28},
   37=>{:QualifiedIdentifier=>45, :Identifier=>46},
   38=>{:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49},
   39=>
    {:ClassBodyDeclarations=>50,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   41=>{:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49},
   42=>
    {:InterfaceBodyDeclarations=>62,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   45=>{:ClassBody=>66, :Implements=>67, :OpenBrace=>39},
   46=>{:Dot=>68},
   47=>{:ClassBody=>69, :OpenBrace=>39},
   48=>{:CommaType=>70, :Comma=>71},
   49=>{:Dot=>72},
   50=>{:CloseBrace=>73},
   51=>
    {:ClassBodyDeclarations=>74,
     :ClassBodyDeclaration=>51,
     :Semicolon=>52,
     :Modifiers=>53,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   53=>
    {:MemberDecl=>75,
     :MethodOrFieldDecl=>76,
     :Void=>77,
     :Identifier=>78,
     :Type=>79,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   54=>
    {:Modifiers=>88,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   61=>{:InterfaceBody=>89, :OpenBrace=>42},
   62=>{:CloseBrace=>90},
   63=>
    {:InterfaceBodyDeclarations=>91,
     :InterfaceBodyDeclaration=>63,
     :Semicolon=>64,
     :Modifiers=>65,
     :Modifier=>54,
     :Public=>55,
     :Protected=>56,
     :Static=>57,
     :Abstract=>58,
     :Final=>59,
     :Native=>60},
   65=>
    {:InterfaceMemberDecl=>92,
     :Type=>93,
     :Void=>94,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   67=>{:TypeList=>96, :QualifiedIdentifier=>48, :Identifier=>49},
   68=>{:QualifiedIdentifier=>97, :Identifier=>46},
   71=>
    {:Type=>98,
     :ArrayType=>99,
     :QualifiedIdentifier=>100,
     :BasicType=>101,
     :Identifier=>102,
     :Byte=>103,
     :Char=>104,
     :Int=>105,
     :Boolean=>106,
     :Short=>107},
   72=>{:QualifiedIdentifier=>108, :Identifier=>49},
   77=>{:Identifier=>109},
   78=>
    {:ConstructorDeclaratorRest=>110,
     :Dot=>111,
     :FormalParameters=>112,
     :OpenParen=>113},
   79=>{:Identifier=>114},
   81=>{:OpenStaple=>115},
   82=>{:OpenStaple=>116},
   93=>{:InterfaceMemberDeclRest=>117, :Identifier=>118},
   94=>{:InterfaceMemberDeclRest=>119, :Identifier=>118},
   95=>{:Dot=>111},
   96=>{:ClassBody=>120, :OpenBrace=>39},
   98=>{:CommaType=>121, :Comma=>71},
   100=>{:OpenStaple=>122},
   101=>{:OpenStaple=>123},
   102=>{:Dot=>124},
   109=>{:MethodDeclaratorRest=>125, :FormalParameters=>126, :OpenParen=>127},
   111=>{:QualifiedIdentifier=>128, :Identifier=>95},
   112=>{:MethodBody=>129, :Block=>130, :OpenBrace=>131},
   113=>
    {:CloseParen=>132,
     :FormalParameter=>133,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   114=>
    {:MethodOrFieldRest=>135,
     :Semicolon=>136,
     :Equals=>137,
     :MethodDeclaratorRest=>138,
     :FormalParameters=>126,
     :OpenParen=>127},
   115=>{:CloseStaple=>139},
   116=>{:CloseStaple=>140},
   118=>{:FormalParameters=>141, :OpenParen=>142},
   122=>{:CloseStaple=>143},
   123=>{:CloseStaple=>144},
   124=>{:QualifiedIdentifier=>145, :Identifier=>102},
   126=>{:MethodBody=>146, :Semicolon=>147, :Block=>130, :OpenBrace=>131},
   127=>
    {:CloseParen=>148,
     :FormalParameter=>149,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   131=>
    {:BlockStatements=>150,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182},
   133=>{:MoreFormalParameters=>183, :Comma=>184},
   134=>{:Identifier=>185},
   137=>
    {:Expression=>186,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   141=>{:Semicolon=>189},
   142=>
    {:CloseParen=>190,
     :FormalParameter=>191,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   149=>{:MoreFormalParameters=>192, :Comma=>184},
   150=>{:CloseBrace=>193},
   151=>
    {:BlockStatements=>194,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182},
   154=>{:VariableDeclarator=>195, :Identifier=>196},
   156=>{:OpenParen=>197},
   157=>{:OpenParen=>198},
   158=>{:OpenParen=>199},
   159=>
    {:Semicolon=>200,
     :Expression=>201,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   160=>{:Semicolon=>202},
   162=>
    {:OpenStaple=>203,
     :IdentifierSuffix=>204,
     :Arguments=>205,
     :OpenParen=>206},
   163=>
    {:BlockStatements=>207,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182},
   165=>{:Equals=>208},
   166=>{:Dot=>209},
   167=>
    {:MoreTerms=>210,
     :Infixop=>211,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   168=>
    {:Term=>228,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   172=>
    {:Expression=>229,
     :BasicType=>230,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   173=>{:Selectors=>254, :Selector=>255, :Dot=>256, :OpenStaple=>257},
   176=>
    {:Creator=>258,
     :ArrayCreator=>259,
     :QualifiedIdentifier=>260,
     :BasicType=>261,
     :Identifier=>188,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   183=>{:CloseParen=>267},
   184=>
    {:FormalParameter=>268,
     :Type=>134,
     :ArrayType=>80,
     :QualifiedIdentifier=>81,
     :BasicType=>82,
     :Identifier=>95,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87},
   186=>{:Semicolon=>269},
   187=>
    {:IdentifierSuffix=>204,
     :OpenStaple=>270,
     :Arguments=>205,
     :OpenParen=>206},
   188=>{:Dot=>271},
   191=>{:MoreFormalParameters=>272, :Comma=>184},
   192=>{:CloseParen=>273},
   195=>{:Semicolon=>274},
   196=>{:Equals=>275},
   197=>
    {:Expression=>276,
     :Assignment=>277,
     :SubExpression=>278,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   198=>
    {:ForInit=>284,
     :Expression=>285,
     :Type=>286,
     :Assignment=>164,
     :SubExpression=>165,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :Term=>167,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182},
   199=>
    {:Expression=>287,
     :Assignment=>277,
     :SubExpression=>278,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   201=>{:Semicolon=>288},
   203=>
    {:CloseStaple=>139,
     :Expression=>289,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   206=>
    {:Expressions=>308,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   207=>{:CloseBrace=>328},
   208=>
    {:SubExpression=>329,
     :Term=>330,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   209=>{:QualifiedIdentifier=>346, :Identifier=>166},
   211=>
    {:Term=>347,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   229=>{:OpenStaple=>348, :CloseParen=>349},
   230=>{:OpenStaple=>350, :CloseParen=>351},
   232=>{:Equals=>352},
   238=>
    {:MoreTerms=>353,
     :Infixop=>354,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   239=>
    {:Term=>355,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   241=>
    {:Expression=>356,
     :BasicType=>357,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   242=>{:Selectors=>358, :Selector=>359, :Dot=>360, :OpenStaple=>361},
   245=>
    {:IdentifierSuffix=>362,
     :OpenStaple=>363,
     :Arguments=>364,
     :OpenParen=>365},
   246=>
    {:Creator=>366,
     :ArrayCreator=>367,
     :QualifiedIdentifier=>368,
     :BasicType=>369,
     :Identifier=>253,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   253=>{:Dot=>370},
   255=>{:Selectors=>371, :Selector=>255, :Dot=>256, :OpenStaple=>257},
   256=>{:Identifier=>372},
   257=>
    {:Expression=>373,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   260=>{:Arguments=>374, :OpenStaple=>375, :OpenParen=>206},
   261=>{:OpenStaple=>376},
   268=>{:MoreFormalParameters=>377, :Comma=>184},
   270=>
    {:Expression=>289,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   271=>{:QualifiedIdentifier=>378, :Identifier=>188},
   272=>{:CloseParen=>379},
   275=>
    {:Expression=>380,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   276=>{:CloseParen=>381},
   278=>{:Equals=>382},
   279=>
    {:MoreTerms=>383,
     :Infixop=>384,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   280=>
    {:Term=>385,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   282=>
    {:Expression=>386,
     :BasicType=>387,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   283=>{:Selectors=>388, :Selector=>389, :Dot=>360, :OpenStaple=>361},
   284=>{:Semicolon=>390},
   286=>{:VariableDeclarator=>391, :Identifier=>196},
   287=>{:CloseParen=>392},
   289=>{:CloseStaple=>393},
   291=>{:Equals=>394},
   292=>
    {:MoreTerms=>395,
     :Infixop=>396,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   293=>
    {:Term=>397,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   295=>
    {:Expression=>398,
     :BasicType=>399,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   296=>{:Selectors=>400, :Selector=>401, :Dot=>402, :OpenStaple=>403},
   299=>
    {:IdentifierSuffix=>404,
     :OpenStaple=>405,
     :Arguments=>406,
     :OpenParen=>407},
   300=>
    {:Creator=>408,
     :ArrayCreator=>409,
     :QualifiedIdentifier=>410,
     :BasicType=>411,
     :Identifier=>307,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   307=>{:Dot=>412},
   308=>{:CloseParen=>413},
   309=>{:MoreExpressions=>414, :Comma=>415},
   311=>{:Equals=>416},
   312=>
    {:MoreTerms=>417,
     :Infixop=>418,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   313=>
    {:Term=>419,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   315=>
    {:Expression=>420,
     :BasicType=>421,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   316=>{:Selectors=>422, :Selector=>423, :Dot=>424, :OpenStaple=>425},
   319=>
    {:IdentifierSuffix=>426,
     :OpenStaple=>427,
     :Arguments=>428,
     :OpenParen=>429},
   320=>
    {:Creator=>430,
     :ArrayCreator=>431,
     :QualifiedIdentifier=>432,
     :BasicType=>433,
     :Identifier=>327,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   327=>{:Dot=>434},
   330=>
    {:MoreTerms=>435,
     :Infixop=>436,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   331=>
    {:Term=>437,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   333=>
    {:Expression=>438,
     :BasicType=>439,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   334=>{:Selectors=>440, :Selector=>441, :Dot=>442, :OpenStaple=>443},
   337=>
    {:IdentifierSuffix=>444,
     :OpenStaple=>445,
     :Arguments=>446,
     :OpenParen=>447},
   338=>
    {:Creator=>448,
     :ArrayCreator=>449,
     :QualifiedIdentifier=>450,
     :BasicType=>451,
     :Identifier=>345,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   345=>{:Dot=>452},
   347=>
    {:MoreTerms=>453,
     :Infixop=>211,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   348=>{:CloseStaple=>454},
   349=>
    {:Term=>455,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   350=>{:CloseStaple=>456},
   351=>
    {:Term=>457,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   352=>
    {:SubExpression=>458,
     :Term=>459,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   354=>
    {:Term=>475,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   356=>{:OpenStaple=>476, :CloseParen=>477},
   357=>{:OpenStaple=>478, :CloseParen=>479},
   359=>{:Selectors=>480, :Selector=>359, :Dot=>360, :OpenStaple=>361},
   360=>{:Identifier=>481},
   361=>
    {:Expression=>482,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   363=>
    {:Expression=>483,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   365=>
    {:Expressions=>484,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   368=>{:Arguments=>485, :OpenStaple=>486, :OpenParen=>365},
   369=>{:OpenStaple=>487},
   370=>{:QualifiedIdentifier=>488, :Identifier=>253},
   372=>{:Arguments=>489, :OpenParen=>206},
   373=>{:CloseStaple=>490},
   375=>
    {:Expression=>491,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   376=>
    {:Expression=>492,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   381=>
    {:Statement=>493,
     :Block=>494,
     :If=>495,
     :For=>496,
     :While=>497,
     :Return=>498,
     :Expression=>499,
     :Semicolon=>500,
     :OpenBrace=>501,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   382=>
    {:SubExpression=>502,
     :Term=>503,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   384=>
    {:Term=>508,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   386=>{:OpenStaple=>509, :CloseParen=>510},
   387=>{:OpenStaple=>511, :CloseParen=>512},
   389=>{:Selectors=>513, :Selector=>389, :Dot=>360, :OpenStaple=>361},
   390=>
    {:Semicolon=>514,
     :Expression=>515,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   392=>
    {:Statement=>516,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   394=>
    {:SubExpression=>517,
     :Term=>518,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   396=>
    {:Term=>534,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   398=>{:OpenStaple=>535, :CloseParen=>536},
   399=>{:OpenStaple=>537, :CloseParen=>538},
   401=>{:Selectors=>539, :Selector=>401, :Dot=>402, :OpenStaple=>403},
   402=>{:Identifier=>540},
   403=>
    {:Expression=>541,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   405=>
    {:Expression=>542,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   407=>
    {:Expressions=>543,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   410=>{:Arguments=>544, :OpenStaple=>545, :OpenParen=>407},
   411=>{:OpenStaple=>546},
   412=>{:QualifiedIdentifier=>547, :Identifier=>307},
   415=>
    {:Expression=>548,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   416=>
    {:SubExpression=>549,
     :Term=>550,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   418=>
    {:Term=>566,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   420=>{:OpenStaple=>567, :CloseParen=>568},
   421=>{:OpenStaple=>569, :CloseParen=>570},
   423=>{:Selectors=>571, :Selector=>423, :Dot=>424, :OpenStaple=>425},
   424=>{:Identifier=>572},
   425=>
    {:Expression=>573,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   427=>
    {:Expression=>574,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   429=>
    {:Expressions=>575,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   432=>{:Arguments=>576, :OpenStaple=>577, :OpenParen=>429},
   433=>{:OpenStaple=>578},
   434=>{:QualifiedIdentifier=>579, :Identifier=>327},
   436=>
    {:Term=>580,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   438=>{:OpenStaple=>581, :CloseParen=>582},
   439=>{:OpenStaple=>583, :CloseParen=>584},
   441=>{:Selectors=>585, :Selector=>441, :Dot=>442, :OpenStaple=>443},
   442=>{:Identifier=>586},
   443=>
    {:Expression=>587,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   445=>
    {:Expression=>588,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   447=>
    {:Expressions=>589,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   450=>{:Arguments=>590, :OpenStaple=>591, :OpenParen=>447},
   451=>{:OpenStaple=>592},
   452=>{:QualifiedIdentifier=>593, :Identifier=>345},
   454=>{:CloseParen=>594},
   456=>{:CloseParen=>595},
   459=>
    {:MoreTerms=>596,
     :Infixop=>597,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   460=>
    {:Term=>598,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   462=>
    {:Expression=>599,
     :BasicType=>600,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   463=>{:Selectors=>601, :Selector=>602, :Dot=>603, :OpenStaple=>604},
   466=>
    {:IdentifierSuffix=>605,
     :OpenStaple=>606,
     :Arguments=>607,
     :OpenParen=>608},
   467=>
    {:Creator=>609,
     :ArrayCreator=>610,
     :QualifiedIdentifier=>611,
     :BasicType=>612,
     :Identifier=>474,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   474=>{:Dot=>613},
   475=>
    {:MoreTerms=>614,
     :Infixop=>354,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   476=>{:CloseStaple=>615},
   477=>
    {:Term=>616,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   478=>{:CloseStaple=>617},
   479=>
    {:Term=>618,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   481=>{:Arguments=>619, :OpenParen=>365},
   482=>{:CloseStaple=>620},
   483=>{:CloseStaple=>621},
   484=>{:CloseParen=>622},
   486=>
    {:Expression=>623,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   487=>
    {:Expression=>624,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   491=>{:CloseStaple=>625},
   492=>{:CloseStaple=>626},
   493=>{:Else=>627},
   495=>{:OpenParen=>628},
   496=>{:OpenParen=>629},
   497=>{:OpenParen=>630},
   498=>
    {:Semicolon=>631,
     :Expression=>632,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   499=>{:Semicolon=>633},
   501=>
    {:BlockStatements=>634,
     :BlockStatement=>151,
     :LocalVariableDeclarationStatement=>152,
     :Statement=>153,
     :Type=>154,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182},
   503=>
    {:MoreTerms=>635,
     :Infixop=>636,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   504=>
    {:Term=>637,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   506=>
    {:Expression=>638,
     :BasicType=>639,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   507=>{:Selectors=>640, :Selector=>641, :Dot=>603, :OpenStaple=>604},
   508=>
    {:MoreTerms=>642,
     :Infixop=>384,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   509=>{:CloseStaple=>643},
   510=>
    {:Term=>644,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   511=>{:CloseStaple=>645},
   512=>
    {:Term=>646,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   514=>
    {:ForUpdate=>647,
     :Expression=>648,
     :VariableDeclarator=>649,
     :Assignment=>277,
     :SubExpression=>278,
     :Identifier=>650,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252},
   515=>{:Semicolon=>651},
   518=>
    {:MoreTerms=>652,
     :Infixop=>653,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   519=>
    {:Term=>654,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   521=>
    {:Expression=>655,
     :BasicType=>656,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   522=>{:Selectors=>657, :Selector=>658, :Dot=>659, :OpenStaple=>660},
   525=>
    {:IdentifierSuffix=>661,
     :OpenStaple=>662,
     :Arguments=>663,
     :OpenParen=>664},
   526=>
    {:Creator=>665,
     :ArrayCreator=>666,
     :QualifiedIdentifier=>667,
     :BasicType=>668,
     :Identifier=>533,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   533=>{:Dot=>669},
   534=>
    {:MoreTerms=>670,
     :Infixop=>396,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   535=>{:CloseStaple=>671},
   536=>
    {:Term=>672,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   537=>{:CloseStaple=>673},
   538=>
    {:Term=>674,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   540=>{:Arguments=>675, :OpenParen=>407},
   541=>{:CloseStaple=>676},
   542=>{:CloseStaple=>677},
   543=>{:CloseParen=>678},
   545=>
    {:Expression=>679,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   546=>
    {:Expression=>680,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   548=>{:MoreExpressions=>681, :Comma=>415},
   550=>
    {:MoreTerms=>682,
     :Infixop=>683,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   551=>
    {:Term=>684,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   553=>
    {:Expression=>685,
     :BasicType=>686,
     :Assignment=>231,
     :SubExpression=>232,
     :Byte=>233,
     :Char=>234,
     :Int=>235,
     :Boolean=>236,
     :Short=>237,
     :Term=>238,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   554=>{:Selectors=>687, :Selector=>688, :Dot=>689, :OpenStaple=>690},
   557=>
    {:IdentifierSuffix=>691,
     :OpenStaple=>692,
     :Arguments=>693,
     :OpenParen=>694},
   558=>
    {:Creator=>695,
     :ArrayCreator=>696,
     :QualifiedIdentifier=>697,
     :BasicType=>698,
     :Identifier=>565,
     :Byte=>262,
     :Char=>263,
     :Int=>264,
     :Boolean=>265,
     :Short=>266},
   565=>{:Dot=>699},
   566=>
    {:MoreTerms=>700,
     :Infixop=>418,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   567=>{:CloseStaple=>701},
   568=>
    {:Term=>702,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   569=>{:CloseStaple=>703},
   570=>
    {:Term=>704,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   572=>{:Arguments=>705, :OpenParen=>429},
   573=>{:CloseStaple=>706},
   574=>{:CloseStaple=>707},
   575=>{:CloseParen=>708},
   577=>
    {:Expression=>709,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   578=>
    {:Expression=>710,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   580=>
    {:MoreTerms=>711,
     :Infixop=>436,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   581=>{:CloseStaple=>712},
   582=>
    {:Term=>713,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   583=>{:CloseStaple=>714},
   584=>
    {:Term=>715,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   586=>{:Arguments=>716, :OpenParen=>447},
   587=>{:CloseStaple=>717},
   588=>{:CloseStaple=>718},
   589=>{:CloseParen=>719},
   591=>
    {:Expression=>720,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   592=>
    {:Expression=>721,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   594=>
    {:Term=>722,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   595=>
    {:Term=>723,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   597=>
    {:Term=>724,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   599=>{:OpenStaple=>725, :CloseParen=>726},
   600=>{:OpenStaple=>727, :CloseParen=>728},
   602=>{:Selectors=>729, :Selector=>602, :Dot=>603, :OpenStaple=>604},
   603=>{:Identifier=>730},
   604=>
    {:Expression=>731,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   606=>
    {:Expression=>732,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   608=>
    {:Expressions=>733,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   611=>{:Arguments=>734, :OpenStaple=>735, :OpenParen=>608},
   612=>{:OpenStaple=>736},
   613=>{:QualifiedIdentifier=>737, :Identifier=>474},
   615=>{:CloseParen=>738},
   617=>{:CloseParen=>739},
   623=>{:CloseStaple=>740},
   624=>{:CloseStaple=>741},
   627=>
    {:Statement=>742,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   628=>
    {:Expression=>743,
     :Assignment=>277,
     :SubExpression=>278,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   629=>
    {:ForInit=>744,
     :Expression=>285,
     :Type=>286,
     :Assignment=>164,
     :SubExpression=>165,
     :ArrayType=>80,
     :QualifiedIdentifier=>162,
     :BasicType=>82,
     :Term=>167,
     :Identifier=>166,
     :Byte=>83,
     :Char=>84,
     :Int=>85,
     :Boolean=>86,
     :Short=>87,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182},
   630=>
    {:Expression=>745,
     :Assignment=>277,
     :SubExpression=>278,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   632=>{:Semicolon=>746},
   634=>{:CloseBrace=>747},
   636=>
    {:Term=>748,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   638=>{:OpenStaple=>749, :CloseParen=>750},
   639=>{:OpenStaple=>751, :CloseParen=>752},
   641=>{:Selectors=>753, :Selector=>641, :Dot=>603, :OpenStaple=>604},
   643=>{:CloseParen=>754},
   645=>{:CloseParen=>755},
   647=>{:CloseParen=>756},
   650=>{:Equals=>757, :Dot=>370},
   651=>
    {:ForUpdate=>758,
     :Expression=>648,
     :VariableDeclarator=>649,
     :Assignment=>277,
     :SubExpression=>278,
     :Identifier=>650,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252},
   653=>
    {:Term=>759,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   655=>{:OpenStaple=>760, :CloseParen=>761},
   656=>{:OpenStaple=>762, :CloseParen=>763},
   658=>{:Selectors=>764, :Selector=>658, :Dot=>659, :OpenStaple=>660},
   659=>{:Identifier=>765},
   660=>
    {:Expression=>766,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   662=>
    {:Expression=>767,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   664=>
    {:Expressions=>768,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   667=>{:Arguments=>769, :OpenStaple=>770, :OpenParen=>664},
   668=>{:OpenStaple=>771},
   669=>{:QualifiedIdentifier=>772, :Identifier=>533},
   671=>{:CloseParen=>773},
   673=>{:CloseParen=>774},
   679=>{:CloseStaple=>775},
   680=>{:CloseStaple=>776},
   683=>
    {:Term=>777,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   685=>{:OpenStaple=>778, :CloseParen=>779},
   686=>{:OpenStaple=>780, :CloseParen=>781},
   688=>{:Selectors=>782, :Selector=>688, :Dot=>689, :OpenStaple=>690},
   689=>{:Identifier=>783},
   690=>
    {:Expression=>784,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   692=>
    {:Expression=>785,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   694=>
    {:Expressions=>786,
     :Expression=>309,
     :Assignment=>310,
     :SubExpression=>311,
     :Term=>312,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   697=>{:Arguments=>787, :OpenStaple=>788, :OpenParen=>694},
   698=>{:OpenStaple=>789},
   699=>{:QualifiedIdentifier=>790, :Identifier=>565},
   701=>{:CloseParen=>791},
   703=>{:CloseParen=>792},
   709=>{:CloseStaple=>793},
   710=>{:CloseStaple=>794},
   712=>{:CloseParen=>795},
   714=>{:CloseParen=>796},
   720=>{:CloseStaple=>797},
   721=>{:CloseStaple=>798},
   724=>
    {:MoreTerms=>799,
     :Infixop=>597,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   725=>{:CloseStaple=>800},
   726=>
    {:Term=>801,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   727=>{:CloseStaple=>802},
   728=>
    {:Term=>803,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   730=>{:Arguments=>804, :OpenParen=>608},
   731=>{:CloseStaple=>805},
   732=>{:CloseStaple=>806},
   733=>{:CloseParen=>807},
   735=>
    {:Expression=>808,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   736=>
    {:Expression=>809,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   738=>
    {:Term=>810,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   739=>
    {:Term=>811,
     :TermModifier=>239,
     :UnmodifiedTerm=>240,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>241,
     :Primary=>242,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   743=>{:CloseParen=>812},
   744=>{:Semicolon=>813},
   745=>{:CloseParen=>814},
   748=>
    {:MoreTerms=>815,
     :Infixop=>636,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   749=>{:CloseStaple=>816},
   750=>
    {:Term=>817,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   751=>{:CloseStaple=>818},
   752=>
    {:Term=>819,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   754=>
    {:Term=>820,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   755=>
    {:Term=>821,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   756=>
    {:Statement=>822,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   757=>
    {:Expression=>823,
     :Assignment=>277,
     :SubExpression=>278,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252,
     :Identifier=>253},
   758=>{:CloseParen=>824},
   759=>
    {:MoreTerms=>825,
     :Infixop=>653,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   760=>{:CloseStaple=>826},
   761=>
    {:Term=>827,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   762=>{:CloseStaple=>828},
   763=>
    {:Term=>829,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   765=>{:Arguments=>830, :OpenParen=>664},
   766=>{:CloseStaple=>831},
   767=>{:CloseStaple=>832},
   768=>{:CloseParen=>833},
   770=>
    {:Expression=>834,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   771=>
    {:Expression=>835,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   773=>
    {:Term=>836,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   774=>
    {:Term=>837,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   777=>
    {:MoreTerms=>838,
     :Infixop=>683,
     :LazyOr=>212,
     :LazyAnd=>213,
     :EagerOr=>214,
     :EagerAnd=>215,
     :Equality=>216,
     :NotEqual=>217,
     :LessThan=>218,
     :GreaterThan=>219,
     :LessOrEqual=>220,
     :GreaterOrEqual=>221,
     :Plus=>222,
     :Minus=>223,
     :Multiply=>224,
     :Divide=>225,
     :Modulo=>226,
     :Instanceof=>227},
   778=>{:CloseStaple=>839},
   779=>
    {:Term=>840,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   780=>{:CloseStaple=>841},
   781=>
    {:Term=>842,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   783=>{:Arguments=>843, :OpenParen=>694},
   784=>{:CloseStaple=>844},
   785=>{:CloseStaple=>845},
   786=>{:CloseParen=>846},
   788=>
    {:Expression=>847,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   789=>
    {:Expression=>848,
     :Assignment=>290,
     :SubExpression=>291,
     :Term=>292,
     :TermModifier=>293,
     :UnmodifiedTerm=>294,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>295,
     :Primary=>296,
     :This=>297,
     :Literal=>298,
     :QualifiedIdentifier=>299,
     :New=>300,
     :IntegerLiteral=>301,
     :FloatingPointLiteral=>302,
     :CharacterLiteral=>303,
     :StringLiteral=>304,
     :BooleanLiteral=>305,
     :NullLiteral=>306,
     :Identifier=>307},
   791=>
    {:Term=>849,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   792=>
    {:Term=>850,
     :TermModifier=>313,
     :UnmodifiedTerm=>314,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>315,
     :Primary=>316,
     :This=>317,
     :Literal=>318,
     :QualifiedIdentifier=>319,
     :New=>320,
     :IntegerLiteral=>321,
     :FloatingPointLiteral=>322,
     :CharacterLiteral=>323,
     :StringLiteral=>324,
     :BooleanLiteral=>325,
     :NullLiteral=>326,
     :Identifier=>327},
   795=>
    {:Term=>851,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   796=>
    {:Term=>852,
     :TermModifier=>331,
     :UnmodifiedTerm=>332,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>333,
     :Primary=>334,
     :This=>335,
     :Literal=>336,
     :QualifiedIdentifier=>337,
     :New=>338,
     :IntegerLiteral=>339,
     :FloatingPointLiteral=>340,
     :CharacterLiteral=>341,
     :StringLiteral=>342,
     :BooleanLiteral=>343,
     :NullLiteral=>344,
     :Identifier=>345},
   800=>{:CloseParen=>853},
   802=>{:CloseParen=>854},
   808=>{:CloseStaple=>855},
   809=>{:CloseStaple=>856},
   812=>
    {:Statement=>857,
     :Block=>494,
     :If=>495,
     :For=>496,
     :While=>497,
     :Return=>498,
     :Expression=>499,
     :Semicolon=>500,
     :OpenBrace=>501,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   813=>
    {:Semicolon=>858,
     :Expression=>859,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   814=>
    {:Statement=>860,
     :Block=>494,
     :If=>495,
     :For=>496,
     :While=>497,
     :Return=>498,
     :Expression=>499,
     :Semicolon=>500,
     :OpenBrace=>501,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   816=>{:CloseParen=>861},
   818=>{:CloseParen=>862},
   824=>
    {:Statement=>863,
     :Block=>155,
     :If=>156,
     :For=>157,
     :While=>158,
     :Return=>159,
     :Expression=>160,
     :Semicolon=>161,
     :OpenBrace=>163,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   826=>{:CloseParen=>864},
   828=>{:CloseParen=>865},
   834=>{:CloseStaple=>866},
   835=>{:CloseStaple=>867},
   839=>{:CloseParen=>868},
   841=>{:CloseParen=>869},
   847=>{:CloseStaple=>870},
   848=>{:CloseStaple=>871},
   853=>
    {:Term=>872,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   854=>
    {:Term=>873,
     :TermModifier=>460,
     :UnmodifiedTerm=>461,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>462,
     :Primary=>463,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   857=>{:Else=>874},
   858=>
    {:ForUpdate=>875,
     :Expression=>648,
     :VariableDeclarator=>649,
     :Assignment=>277,
     :SubExpression=>278,
     :Identifier=>650,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252},
   859=>{:Semicolon=>876},
   861=>
    {:Term=>877,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   862=>
    {:Term=>878,
     :TermModifier=>504,
     :UnmodifiedTerm=>505,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>506,
     :Primary=>507,
     :This=>464,
     :Literal=>465,
     :QualifiedIdentifier=>466,
     :New=>467,
     :IntegerLiteral=>468,
     :FloatingPointLiteral=>469,
     :CharacterLiteral=>470,
     :StringLiteral=>471,
     :BooleanLiteral=>472,
     :NullLiteral=>473,
     :Identifier=>474},
   864=>
    {:Term=>879,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   865=>
    {:Term=>880,
     :TermModifier=>519,
     :UnmodifiedTerm=>520,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>521,
     :Primary=>522,
     :This=>523,
     :Literal=>524,
     :QualifiedIdentifier=>525,
     :New=>526,
     :IntegerLiteral=>527,
     :FloatingPointLiteral=>528,
     :CharacterLiteral=>529,
     :StringLiteral=>530,
     :BooleanLiteral=>531,
     :NullLiteral=>532,
     :Identifier=>533},
   868=>
    {:Term=>881,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   869=>
    {:Term=>882,
     :TermModifier=>551,
     :UnmodifiedTerm=>552,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>553,
     :Primary=>554,
     :This=>555,
     :Literal=>556,
     :QualifiedIdentifier=>557,
     :New=>558,
     :IntegerLiteral=>559,
     :FloatingPointLiteral=>560,
     :CharacterLiteral=>561,
     :StringLiteral=>562,
     :BooleanLiteral=>563,
     :NullLiteral=>564,
     :Identifier=>565},
   874=>
    {:Statement=>883,
     :Block=>494,
     :If=>495,
     :For=>496,
     :While=>497,
     :Return=>498,
     :Expression=>499,
     :Semicolon=>500,
     :OpenBrace=>501,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   875=>{:CloseParen=>884},
   876=>
    {:ForUpdate=>885,
     :Expression=>648,
     :VariableDeclarator=>649,
     :Assignment=>277,
     :SubExpression=>278,
     :Identifier=>650,
     :Term=>279,
     :TermModifier=>280,
     :UnmodifiedTerm=>281,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>282,
     :Primary=>283,
     :This=>243,
     :Literal=>244,
     :QualifiedIdentifier=>245,
     :New=>246,
     :IntegerLiteral=>247,
     :FloatingPointLiteral=>248,
     :CharacterLiteral=>249,
     :StringLiteral=>250,
     :BooleanLiteral=>251,
     :NullLiteral=>252},
   884=>
    {:Statement=>886,
     :Block=>494,
     :If=>495,
     :For=>496,
     :While=>497,
     :Return=>498,
     :Expression=>499,
     :Semicolon=>500,
     :OpenBrace=>501,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188},
   885=>{:CloseParen=>887},
   887=>
    {:Statement=>888,
     :Block=>494,
     :If=>495,
     :For=>496,
     :While=>497,
     :Return=>498,
     :Expression=>499,
     :Semicolon=>500,
     :OpenBrace=>501,
     :Assignment=>164,
     :SubExpression=>165,
     :Term=>167,
     :TermModifier=>168,
     :UnmodifiedTerm=>169,
     :Not=>170,
     :Minus=>171,
     :OpenParen=>172,
     :Primary=>173,
     :This=>174,
     :Literal=>175,
     :QualifiedIdentifier=>187,
     :New=>176,
     :IntegerLiteral=>177,
     :FloatingPointLiteral=>178,
     :CharacterLiteral=>179,
     :StringLiteral=>180,
     :BooleanLiteral=>181,
     :NullLiteral=>182,
     :Identifier=>188}},
 :reductions=>
  {0=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   1=>{},
   2=>
    {[:EndProgram]=>[:CompilationUnit, 1],
     [:Class, :Interface]=>[:Modifiers, 0]},
   3=>{},
   4=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   5=>{},
   6=>{[]=>[:AugmentedCompilationUnit, 2]},
   7=>{[:EndProgram]=>[:CompilationUnit, 2]},
   8=>{},
   9=>{[:Class, :Interface]=>[:Modifiers, 0]},
   10=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   11=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   12=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   13=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   14=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   15=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:Modifier, 1]},
   16=>{},
   17=>{[:Semicolon]=>[:QualifiedIdentifier, 1]},
   18=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 2]},
   19=>{[:Semicolon]=>[:MoreImportIdentifiers, 0]},
   20=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   21=>{[:EndProgram]=>[:TypeDeclaration, 2]},
   22=>{},
   23=>{},
   24=>{[:Class, :Interface]=>[:Modifiers, 2]},
   25=>
    {[:EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclarations, 0]},
   26=>{},
   27=>{},
   28=>{},
   29=>{},
   30=>{},
   31=>
    {[:EndProgram]=>[:CompilationUnit, 4],
     [:Class, :Interface]=>[:Modifiers, 0]},
   32=>{[:Semicolon]=>[:QualifiedIdentifier, 3]},
   33=>
    {[:Import,
      :EndProgram,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Class,
      :Interface]=>[:ImportDeclaration, 4]},
   34=>{[:Semicolon]=>[:MoreImportIdentifiers, 0]},
   35=>{[:Semicolon]=>[:MoreImportIdentifiers, 2]},
   36=>{[:EndProgram]=>[:ClassDeclaration, 3]},
   37=>{},
   38=>{},
   39=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   40=>{[:EndProgram]=>[:InterfaceDeclaration, 3]},
   41=>{},
   42=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   43=>{[:EndProgram]=>[:CompilationUnit, 5]},
   44=>{[:Semicolon]=>[:MoreImportIdentifiers, 3]},
   45=>{},
   46=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]},
   47=>{},
   48=>{[:OpenBrace]=>[:CommaType, 0]},
   49=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 1]},
   50=>{},
   51=>
    {[:CloseBrace]=>[:ClassBodyDeclarations, 0],
     [:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   52=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 1]},
   53=>{},
   54=>
    {[:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   55=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   56=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   57=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   58=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   59=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   60=>
    {[:Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short]=>[:Modifier, 1]},
   61=>{},
   62=>{},
   63=>
    {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0],
     [:Identifier, :Void, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 0]},
   64=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 1]},
   65=>{},
   66=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   67=>{},
   68=>{},
   69=>{[:EndProgram]=>[:ClassDeclaration, 5]},
   70=>{[:OpenBrace]=>[:TypeList, 2]},
   71=>{},
   72=>{},
   73=>{[:EndProgram]=>[:ClassBody, 3]},
   74=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]},
   75=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ClassBodyDeclaration, 2]},
   76=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 1]},
   77=>{},
   78=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   79=>{},
   80=>{[:Identifier]=>[:Type, 1]},
   81=>{[:Identifier]=>[:Type, 1]},
   82=>{[:Identifier]=>[:Type, 1]},
   83=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   84=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   85=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   86=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   87=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]},
   88=>
    {[:Void, :Identifier, :Byte, :Char, :Int, :Boolean, :Short]=>
      [:Modifiers, 2]},
   89=>{[:EndProgram]=>[:InterfaceDeclaration, 5]},
   90=>{[:EndProgram]=>[:InterfaceBody, 3]},
   91=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]},
   92=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceBodyDeclaration, 2]},
   93=>{},
   94=>{},
   95=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   96=>{},
   97=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]},
   98=>{[:OpenBrace]=>[:CommaType, 0]},
   99=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   100=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   101=>{[:Comma, :OpenBrace]=>[:Type, 1]},
   102=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 1]},
   103=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   104=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   105=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   106=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   107=>{[:Comma, :OpenBrace, :OpenStaple]=>[:BasicType, 1]},
   108=>{[:Comma, :OpenBrace]=>[:QualifiedIdentifier, 3]},
   109=>{},
   110=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 2]},
   111=>{},
   112=>{},
   113=>{},
   114=>{},
   115=>{},
   116=>{},
   117=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   118=>{},
   119=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDecl, 2]},
   120=>{[:EndProgram]=>[:ClassDeclaration, 7]},
   121=>{[:OpenBrace]=>[:CommaType, 3]},
   122=>{},
   123=>{},
   124=>{},
   125=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MemberDecl, 3]},
   126=>{},
   127=>{},
   128=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   129=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:ConstructorDeclaratorRest, 2]},
   130=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodBody, 1]},
   131=>{[:CloseBrace]=>[:BlockStatements, 0]},
   132=>{[:OpenBrace]=>[:FormalParameters, 2]},
   133=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   134=>{},
   135=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldDecl, 3]},
   136=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   137=>{},
   138=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 1]},
   139=>{[:Identifier]=>[:ArrayType, 3]},
   140=>{[:Identifier]=>[:ArrayType, 3]},
   141=>{},
   142=>{},
   143=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   144=>{[:Comma, :OpenBrace]=>[:ArrayType, 3]},
   145=>{[:Comma, :OpenBrace, :OpenStaple]=>[:QualifiedIdentifier, 3]},
   146=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   147=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodDeclaratorRest, 2]},
   148=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]},
   149=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   150=>{},
   151=>{[:CloseBrace]=>[:BlockStatements, 0]},
   152=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   153=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:BlockStatement, 1]},
   154=>{},
   155=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   156=>{},
   157=>{},
   158=>{},
   159=>{},
   160=>{},
   161=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 1]},
   162=>
    {[:Identifier]=>[:Type, 1],
     [:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   163=>{[:CloseBrace]=>[:BlockStatements, 0]},
   164=>{[:Semicolon]=>[:Expression, 1]},
   165=>{[:Semicolon]=>[:Expression, 1]},
   166=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   167=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   168=>{},
   169=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 1]},
   170=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   171=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:TermModifier, 1]},
   172=>{},
   173=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   174=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   175=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   176=>{},
   177=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   178=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   179=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   180=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   181=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   182=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Literal, 1]},
   183=>{},
   184=>{},
   185=>{[:Comma, :CloseParen]=>[:FormalParameter, 2]},
   186=>{},
   187=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 1]},
   188=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   189=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Identifier,
      :Void,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:InterfaceMemberDeclRest, 3]},
   190=>{[:Semicolon]=>[:FormalParameters, 2]},
   191=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   192=>{},
   193=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:Block, 3]},
   194=>{[:CloseBrace]=>[:BlockStatements, 2]},
   195=>{},
   196=>{},
   197=>{},
   198=>{[:Semicolon]=>[:ForInit, 0]},
   199=>{},
   200=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   201=>{},
   202=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 2]},
   203=>{},
   204=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   205=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 1]},
   206=>{[:CloseParen]=>[:Expressions, 0]},
   207=>{},
   208=>{},
   209=>{},
   210=>{[:Semicolon, :Equals]=>[:SubExpression, 2]},
   211=>{},
   212=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   213=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   214=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   215=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   216=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   217=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   218=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   219=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   220=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   221=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   222=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   223=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   224=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   225=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   226=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   227=>
    {[:Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :Identifier,
      :New]=>[:Infixop, 1]},
   228=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Term, 2]},
   229=>{},
   230=>{},
   231=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   232=>{[:OpenStaple, :CloseParen]=>[:Expression, 1]},
   233=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   234=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   235=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   236=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   237=>{[:OpenStaple, :CloseParen]=>[:BasicType, 1]},
   238=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   239=>{},
   240=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   241=>{},
   242=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   243=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   244=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   245=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   246=>{},
   247=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   248=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   249=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   250=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   251=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   252=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   253=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   254=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 2]},
   255=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 0]},
   256=>{},
   257=>{},
   258=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 2]},
   259=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   260=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 1]},
   261=>{},
   262=>{[:OpenStaple]=>[:BasicType, 1]},
   263=>{[:OpenStaple]=>[:BasicType, 1]},
   264=>{[:OpenStaple]=>[:BasicType, 1]},
   265=>{[:OpenStaple]=>[:BasicType, 1]},
   266=>{[:OpenStaple]=>[:BasicType, 1]},
   267=>{[:OpenBrace]=>[:FormalParameters, 4]},
   268=>{[:CloseParen]=>[:MoreFormalParameters, 0]},
   269=>
    {[:Semicolon,
      :Public,
      :Protected,
      :Static,
      :Abstract,
      :Final,
      :Native,
      :Void,
      :Identifier,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :CloseBrace]=>[:MethodOrFieldRest, 3]},
   270=>{},
   271=>{},
   272=>{},
   273=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 4]},
   274=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]},
   275=>{},
   276=>{},
   277=>{[:CloseParen]=>[:Expression, 1]},
   278=>{[:CloseParen]=>[:Expression, 1]},
   279=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   280=>{},
   281=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   282=>{},
   283=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   284=>{},
   285=>{[:Semicolon]=>[:ForInit, 1]},
   286=>{},
   287=>{},
   288=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 3]},
   289=>{},
   290=>{[:CloseStaple]=>[:Expression, 1]},
   291=>{[:CloseStaple]=>[:Expression, 1]},
   292=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   293=>{},
   294=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 1]},
   295=>{},
   296=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   297=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   298=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   299=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 1]},
   300=>{},
   301=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   302=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   303=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   304=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   305=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   306=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Literal, 1]},
   307=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   308=>{},
   309=>{[:CloseParen]=>[:MoreExpressions, 0]},
   310=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   311=>{[:Comma, :CloseParen]=>[:Expression, 1]},
   312=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   313=>{},
   314=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 1]},
   315=>{},
   316=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   317=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   318=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   319=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 1]},
   320=>{},
   321=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   322=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   323=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   324=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   325=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   326=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Literal, 1]},
   327=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   328=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Block, 3]},
   329=>{[:Semicolon]=>[:Assignment, 3]},
   330=>{[:Semicolon]=>[:MoreTerms, 0]},
   331=>{},
   332=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 1]},
   333=>{},
   334=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   335=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   336=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   337=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 1]},
   338=>{},
   339=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   340=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   341=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   342=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   343=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   344=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Literal, 1]},
   345=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   346=>
    {[:Identifier,
      :OpenStaple,
      :Dot,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   347=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]},
   348=>{},
   349=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Primary, 3]},
   350=>{},
   351=>{},
   352=>{},
   353=>{[:OpenStaple, :CloseParen, :Equals]=>[:SubExpression, 2]},
   354=>{},
   355=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   356=>{},
   357=>{},
   358=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   359=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   360=>{},
   361=>{},
   362=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   363=>{},
   364=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   365=>{[:CloseParen]=>[:Expressions, 0]},
   366=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   367=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   368=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   369=>{},
   370=>{},
   371=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selectors, 2]},
   372=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 2]},
   373=>{},
   374=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Creator, 2]},
   375=>{},
   376=>{},
   377=>{[:CloseParen]=>[:MoreFormalParameters, 3]},
   378=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   379=>{[:Semicolon]=>[:FormalParameters, 4]},
   380=>{[:Semicolon]=>[:VariableDeclarator, 3]},
   381=>{},
   382=>{},
   383=>{[:CloseParen, :Equals]=>[:SubExpression, 2]},
   384=>{},
   385=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   386=>{},
   387=>{},
   388=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   389=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   390=>{},
   391=>{[:Semicolon]=>[:ForInit, 2]},
   392=>{},
   393=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:IdentifierSuffix, 3]},
   394=>{},
   395=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]},
   396=>{},
   397=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Term, 2]},
   398=>{},
   399=>{},
   400=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 2]},
   401=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 0]},
   402=>{},
   403=>{},
   404=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   405=>{},
   406=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 1]},
   407=>{[:CloseParen]=>[:Expressions, 0]},
   408=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 2]},
   409=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   410=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 1]},
   411=>{},
   412=>{},
   413=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Arguments, 3]},
   414=>{[:CloseParen]=>[:Expressions, 2]},
   415=>{},
   416=>{},
   417=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]},
   418=>{},
   419=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Term, 2]},
   420=>{},
   421=>{},
   422=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 2]},
   423=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 0]},
   424=>{},
   425=>{},
   426=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   427=>{},
   428=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 1]},
   429=>{[:CloseParen]=>[:Expressions, 0]},
   430=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 2]},
   431=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   432=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 1]},
   433=>{},
   434=>{},
   435=>{[:Semicolon]=>[:SubExpression, 2]},
   436=>{},
   437=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Term, 2]},
   438=>{},
   439=>{},
   440=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 2]},
   441=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 0]},
   442=>{},
   443=>{},
   444=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   445=>{},
   446=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 1]},
   447=>{[:CloseParen]=>[:Expressions, 0]},
   448=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 2]},
   449=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   450=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 1]},
   451=>{},
   452=>{},
   453=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]},
   454=>{},
   455=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   456=>{},
   457=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 4]},
   458=>{[:OpenStaple, :CloseParen]=>[:Assignment, 3]},
   459=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   460=>{},
   461=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 1]},
   462=>{},
   463=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   464=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   465=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   466=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 1]},
   467=>{},
   468=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   469=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   470=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   471=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   472=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   473=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Literal, 1]},
   474=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   475=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   476=>{},
   477=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   478=>{},
   479=>{},
   480=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   481=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   482=>{},
   483=>{},
   484=>{},
   485=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   486=>{},
   487=>{},
   488=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenParen,
      :CloseParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   489=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   490=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:Selector, 3]},
   491=>{},
   492=>{},
   493=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   494=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   495=>{},
   496=>{},
   497=>{},
   498=>{},
   499=>{},
   500=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 1]},
   501=>{[:CloseBrace]=>[:BlockStatements, 0]},
   502=>{[:CloseParen]=>[:Assignment, 3]},
   503=>{[:CloseParen]=>[:MoreTerms, 0]},
   504=>{},
   505=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 1]},
   506=>{},
   507=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   508=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]},
   509=>{},
   510=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   511=>{},
   512=>{},
   513=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   514=>{[:CloseParen]=>[:ForUpdate, 0]},
   515=>{},
   516=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 5]},
   517=>{[:CloseStaple]=>[:Assignment, 3]},
   518=>{[:CloseStaple]=>[:MoreTerms, 0]},
   519=>{},
   520=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 1]},
   521=>{},
   522=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   523=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   524=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   525=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 1]},
   526=>{},
   527=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   528=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   529=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   530=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   531=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   532=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Literal, 1]},
   533=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   534=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]},
   535=>{},
   536=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Primary, 3]},
   537=>{},
   538=>{},
   539=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selectors, 2]},
   540=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 2]},
   541=>{},
   542=>{},
   543=>{},
   544=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Creator, 2]},
   545=>{},
   546=>{},
   547=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   548=>{[:CloseParen]=>[:MoreExpressions, 0]},
   549=>{[:Comma, :CloseParen]=>[:Assignment, 3]},
   550=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   551=>{},
   552=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 1]},
   553=>{},
   554=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   555=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   556=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   557=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 1]},
   558=>{},
   559=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   560=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   561=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   562=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   563=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   564=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Literal, 1]},
   565=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 1]},
   566=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]},
   567=>{},
   568=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Primary, 3]},
   569=>{},
   570=>{},
   571=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selectors, 2]},
   572=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 2]},
   573=>{},
   574=>{},
   575=>{},
   576=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Creator, 2]},
   577=>{},
   578=>{},
   579=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 3]},
   580=>{[:Semicolon]=>[:MoreTerms, 0]},
   581=>{},
   582=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Primary, 3]},
   583=>{},
   584=>{},
   585=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selectors, 2]},
   586=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 2]},
   587=>{},
   588=>{},
   589=>{},
   590=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Creator, 2]},
   591=>{},
   592=>{},
   593=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   594=>{},
   595=>{},
   596=>{[:OpenStaple, :CloseParen]=>[:SubExpression, 2]},
   597=>{},
   598=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Term, 2]},
   599=>{},
   600=>{},
   601=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   602=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 0]},
   603=>{},
   604=>{},
   605=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   606=>{},
   607=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   608=>{[:CloseParen]=>[:Expressions, 0]},
   609=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 2]},
   610=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   611=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 1]},
   612=>{},
   613=>{},
   614=>{[:OpenStaple, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   615=>{},
   616=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   617=>{},
   618=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   619=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   620=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   621=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   622=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   623=>{},
   624=>{},
   625=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   626=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:ArrayCreator, 4]},
   627=>{},
   628=>{},
   629=>{[:Semicolon]=>[:ForInit, 0]},
   630=>{},
   631=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   632=>{},
   633=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 2]},
   634=>{},
   635=>{[:CloseParen]=>[:SubExpression, 2]},
   636=>{},
   637=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Term, 2]},
   638=>{},
   639=>{},
   640=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   641=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 0]},
   642=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]},
   643=>{},
   644=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   645=>{},
   646=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   647=>{},
   648=>{[:CloseParen]=>[:ForUpdate, 1]},
   649=>{[:CloseParen]=>[:ForUpdate, 1]},
   650=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen,
      :Equals]=>[:QualifiedIdentifier, 1]},
   651=>{[:CloseParen]=>[:ForUpdate, 0]},
   652=>{[:CloseStaple]=>[:SubExpression, 2]},
   653=>{},
   654=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Term, 2]},
   655=>{},
   656=>{},
   657=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 2]},
   658=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 0]},
   659=>{},
   660=>{},
   661=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   662=>{},
   663=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 1]},
   664=>{[:CloseParen]=>[:Expressions, 0]},
   665=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 2]},
   666=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   667=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 1]},
   668=>{},
   669=>{},
   670=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]},
   671=>{},
   672=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   673=>{},
   674=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 4]},
   675=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   676=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Selector, 3]},
   677=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:IdentifierSuffix, 3]},
   678=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:Arguments, 3]},
   679=>{},
   680=>{},
   681=>{[:CloseParen]=>[:MoreExpressions, 3]},
   682=>{[:Comma, :CloseParen]=>[:SubExpression, 2]},
   683=>{},
   684=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Term, 2]},
   685=>{},
   686=>{},
   687=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 2]},
   688=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 0]},
   689=>{},
   690=>{},
   691=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   692=>{},
   693=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 1]},
   694=>{[:CloseParen]=>[:Expressions, 0]},
   695=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 2]},
   696=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   697=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 1]},
   698=>{},
   699=>{},
   700=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]},
   701=>{},
   702=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   703=>{},
   704=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 4]},
   705=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   706=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Selector, 3]},
   707=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:IdentifierSuffix, 3]},
   708=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:Arguments, 3]},
   709=>{},
   710=>{},
   711=>{[:Semicolon]=>[:MoreTerms, 3]},
   712=>{},
   713=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   714=>{},
   715=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 4]},
   716=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   717=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Selector, 3]},
   718=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:IdentifierSuffix, 3]},
   719=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:Arguments, 3]},
   720=>{},
   721=>{},
   722=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   723=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon,
      :Equals]=>[:UnmodifiedTerm, 6]},
   724=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 0]},
   725=>{},
   726=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   727=>{},
   728=>{},
   729=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:Selectors, 2]},
   730=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 2]},
   731=>{},
   732=>{},
   733=>{},
   734=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Creator, 2]},
   735=>{},
   736=>{},
   737=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   738=>{},
   739=>{},
   740=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   741=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   742=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 7]},
   743=>{},
   744=>{},
   745=>{},
   746=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 3]},
   747=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Block, 3]},
   748=>{[:CloseParen]=>[:MoreTerms, 0]},
   749=>{},
   750=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Primary, 3]},
   751=>{},
   752=>{},
   753=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selectors, 2]},
   754=>{},
   755=>{},
   756=>{},
   757=>{},
   758=>{},
   759=>{[:CloseStaple]=>[:MoreTerms, 0]},
   760=>{},
   761=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Primary, 3]},
   762=>{},
   763=>{},
   764=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selectors, 2]},
   765=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 2]},
   766=>{},
   767=>{},
   768=>{},
   769=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Creator, 2]},
   770=>{},
   771=>{},
   772=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   773=>{},
   774=>{},
   775=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   776=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:ArrayCreator, 4]},
   777=>{[:Comma, :CloseParen]=>[:MoreTerms, 0]},
   778=>{},
   779=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Primary, 3]},
   780=>{},
   781=>{},
   782=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selectors, 2]},
   783=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 2]},
   784=>{},
   785=>{},
   786=>{},
   787=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Creator, 2]},
   788=>{},
   789=>{},
   790=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :OpenParen]=>[:QualifiedIdentifier, 3]},
   791=>{},
   792=>{},
   793=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   794=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:ArrayCreator, 4]},
   795=>{},
   796=>{},
   797=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   798=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:ArrayCreator, 4]},
   799=>{[:OpenStaple, :CloseParen]=>[:MoreTerms, 3]},
   800=>{},
   801=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   802=>{},
   803=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   804=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   805=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Selector, 3]},
   806=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   807=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:Arguments, 3]},
   808=>{},
   809=>{},
   810=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   811=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   812=>{},
   813=>{},
   814=>{},
   815=>{[:CloseParen]=>[:MoreTerms, 3]},
   816=>{},
   817=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   818=>{},
   819=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   820=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   821=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   822=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 8]},
   823=>{[:CloseParen]=>[:VariableDeclarator, 3]},
   824=>{},
   825=>{[:CloseStaple]=>[:MoreTerms, 3]},
   826=>{},
   827=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   828=>{},
   829=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 4]},
   830=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   831=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Selector, 3]},
   832=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:IdentifierSuffix, 3]},
   833=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:Arguments, 3]},
   834=>{},
   835=>{},
   836=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   837=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple,
      :Equals]=>[:UnmodifiedTerm, 6]},
   838=>{[:Comma, :CloseParen]=>[:MoreTerms, 3]},
   839=>{},
   840=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   841=>{},
   842=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 4]},
   843=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   844=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Selector, 3]},
   845=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:IdentifierSuffix, 3]},
   846=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:Arguments, 3]},
   847=>{},
   848=>{},
   849=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   850=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen,
      :Equals]=>[:UnmodifiedTerm, 6]},
   851=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   852=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Semicolon]=>[:UnmodifiedTerm, 6]},
   853=>{},
   854=>{},
   855=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   856=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:ArrayCreator, 4]},
   857=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   858=>{[:CloseParen]=>[:ForUpdate, 0]},
   859=>{},
   860=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 5]},
   861=>{},
   862=>{},
   863=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace]=>[:Statement, 9]},
   864=>{},
   865=>{},
   866=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   867=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:ArrayCreator, 4]},
   868=>{},
   869=>{},
   870=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   871=>
    {[:Dot,
      :OpenStaple,
      :LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:ArrayCreator, 4]},
   872=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   873=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :OpenStaple,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   874=>{},
   875=>{},
   876=>{[:CloseParen]=>[:ForUpdate, 0]},
   877=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   878=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   879=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   880=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :CloseStaple]=>[:UnmodifiedTerm, 6]},
   881=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   882=>
    {[:LazyOr,
      :LazyAnd,
      :EagerOr,
      :EagerAnd,
      :Equality,
      :NotEqual,
      :LessThan,
      :GreaterThan,
      :LessOrEqual,
      :GreaterOrEqual,
      :Plus,
      :Minus,
      :Multiply,
      :Divide,
      :Modulo,
      :Instanceof,
      :Comma,
      :CloseParen]=>[:UnmodifiedTerm, 6]},
   883=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 7]},
   884=>{},
   885=>{},
   886=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 8]},
   887=>{},
   888=>
    {[:Identifier,
      :OpenBrace,
      :If,
      :For,
      :While,
      :Return,
      :Semicolon,
      :Byte,
      :Char,
      :Int,
      :Boolean,
      :Short,
      :Not,
      :Minus,
      :OpenParen,
      :This,
      :IntegerLiteral,
      :FloatingPointLiteral,
      :CharacterLiteral,
      :StringLiteral,
      :BooleanLiteral,
      :NullLiteral,
      :New,
      :CloseBrace,
      :Else]=>[:Statement, 9]}}}