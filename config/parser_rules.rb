PARSER_RULES = {:reductions=>[{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:EndProgram]=>[:CompilationUnit, 1], [:Class, :Interface]=>[:Modifiers, 0]}, {}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[]=>[:AugmentedCompilationUnit, 2]}, {[:EndProgram]=>[:CompilationUnit, 2]}, {}, {[:EndProgram]=>[:TypeDeclaration, 1]}, {[:Class, :Interface]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {}, {[:Semicolon]=>[:QualifiedIdentifier, 1]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 2]}, {}, {[:Semicolon]=>[:QualifiedImportIdentifier, 1]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {}, {}, {[:Class, :Interface]=>[:Modifiers, 2]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:Import, :EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclaration, 3]}, {}, {}, {}, {[:EndProgram]=>[:CompilationUnit, 4], [:Class, :Interface]=>[:Modifiers, 0]}, {[:Semicolon]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:EndProgram]=>[:ClassDeclaration, 3]}, {}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:InterfaceDeclaration, 3]}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:CompilationUnit, 5]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace]=>[:TypeList, 1]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 1]}, {}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 1]}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassBody, 3]}, {[:CloseBrace]=>[:ClassBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 2]}, {[:EndProgram]=>[:InterfaceDeclaration, 5]}, {[:EndProgram]=>[:InterfaceBody, 3]}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]}, {[:OpenBrace]=>[:TypeList, 3]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 3]}, {}, {}, {}, {}, {}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 7]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ConstructorDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodBody, 1]}, {}, {[:OpenBrace]=>[:FormalParameters, 2]}, {}, {[:CloseParen]=>[:FormalParameterList, 1]}, {}, {[:Identifier]=>[:ArrayType, 3]}, {[:Identifier]=>[:ArrayType, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:Semicolon, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 2]}, {}, {[:CloseBrace]=>[:BlockStatements, 1]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:BlockStatement, 1]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:BlockStatement, 1]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 1]}, {[:Identifier]=>[:Type, 1], [:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {}, {[:Identifier, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:OpenBrace]=>[:FormalParameters, 3]}, {}, {[:CloseParen, :Comma]=>[:FormalParameter, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceMemberDeclRest, 2]}, {[:Semicolon]=>[:FormalParameters, 2]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 6]}, {}, {}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 3]}, {[:CloseBrace]=>[:BlockStatements, 2]}, {}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 2]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 2]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Block, 2]}, {}, {}, {[:CloseParen]=>[:FormalParameterList, 3]}, {[:Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon]=>[:Assignment, 3]}, {[:Semicolon, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:CloseStaple, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:CloseParen]=>[:Expressions, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Semicolon, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:LocalVariableDeclarationStatement, 3]}, {}, {}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {}, {[:Semicolon]=>[:ForInit, 1]}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Block, 3]}, {[:Identifier, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :OpenStaple]=>[:Assignment, 3]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 2]}, {}, {}, {}, {}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:VariableDeclarator, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Semicolon]=>[:ForInit, 2]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {}, {[:CloseStaple]=>[:Assignment, 3]}, {[:CloseStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:CloseStaple, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {[:CloseParen]=>[:Expressions, 3]}, {[:CloseParen, :Comma]=>[:Assignment, 3]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 5]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 1]}, {}, {[:CloseParen]=>[:Assignment, 3]}, {[:CloseParen, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 5]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 3]}, {}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 2]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 2]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Block, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:CloseParen]=>[:ForUpdate, 1]}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 7]}, {}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Block, 3]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 8]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 5]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 5]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 9]}, {}, {}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 7]}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 8]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 9]}], :transitions=>[{:CompilationUnit=>1, :ImportDeclarations=>2, :Package=>3, :ImportDeclaration=>4, :Import=>5}, {:EndProgram=>6}, {:TypeDeclaration=>7, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {:QualifiedIdentifier=>17, :Identifier=>18}, {:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5}, {:QualifiedImportIdentifier=>20, :Identifier=>21}, {}, {}, {:ClassDeclaration=>22, :InterfaceDeclaration=>23, :Class=>24, :Interface=>25}, {}, {:Modifiers=>26, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {}, {}, {:Semicolon=>27}, {:Dot=>28}, {}, {:Semicolon=>29}, {:Dot=>30}, {}, {}, {:Identifier=>31}, {:Identifier=>32}, {}, {:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5}, {:QualifiedIdentifier=>34, :Identifier=>18}, {}, {:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21}, {:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40}, {:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43}, {:TypeDeclaration=>44, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {:QualifiedIdentifier=>45, :Identifier=>46}, {:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49}, {:ClassBodyDeclarations=>50, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49}, {:InterfaceBodyDeclarations=>62, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:ClassBody=>66, :Implements=>67, :OpenBrace=>40}, {:Dot=>68}, {:ClassBody=>69, :OpenBrace=>40}, {:Comma=>70}, {:Dot=>71}, {:CloseBrace=>72}, {:ClassBodyDeclarations=>73, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>74, :Void=>75, :Identifier=>76, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {:Modifiers=>85, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {}, {}, {}, {}, {}, {:InterfaceBody=>86, :OpenBrace=>43}, {:CloseBrace=>87}, {:InterfaceBodyDeclarations=>88, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>89, :Void=>90, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {:TypeList=>92, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>93, :Identifier=>46}, {}, {:TypeList=>94, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>95, :Identifier=>49}, {}, {}, {:Identifier=>96}, {:Identifier=>97}, {:ConstructorDeclaratorRest=>98, :Dot=>99, :FormalParameters=>100, :OpenParen=>101}, {}, {:OpenStaple=>102}, {:OpenStaple=>103}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:Identifier=>104}, {:Identifier=>105}, {:Dot=>99}, {:ClassBody=>106, :OpenBrace=>40}, {}, {}, {}, {:Semicolon=>107, :Equals=>108, :MethodDeclaratorRest=>109, :FormalParameters=>110, :OpenParen=>111}, {:MethodDeclaratorRest=>112, :FormalParameters=>110, :OpenParen=>111}, {}, {:QualifiedIdentifier=>113, :Identifier=>91}, {:MethodBody=>114, :Block=>115, :OpenBrace=>116}, {:CloseParen=>117, :FormalParameterList=>118, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {:CloseStaple=>121}, {:CloseStaple=>122}, {:InterfaceMemberDeclRest=>123, :FormalParameters=>124, :OpenParen=>125}, {:InterfaceMemberDeclRest=>126, :FormalParameters=>124, :OpenParen=>125}, {}, {}, {:Expression=>127, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:MethodBody=>146, :Semicolon=>147, :Block=>115, :OpenBrace=>116}, {:CloseParen=>148, :FormalParameterList=>149, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {}, {}, {}, {:CloseBrace=>150, :BlockStatements=>151, :BlockStatement=>152, :LocalVariableDeclarationStatement=>153, :Statement=>154, :Type=>155, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :ArrayType=>77, :QualifiedIdentifier=>163, :BasicType=>79, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Identifier=>165, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:CloseParen=>166}, {:Comma=>167}, {:Identifier=>168}, {}, {}, {}, {:Semicolon=>169}, {:CloseParen=>170, :FormalParameterList=>171, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {:Semicolon=>172}, {}, {:Equals=>173}, {:Infixop=>174, :LazyOr=>175, :LazyAnd=>176, :EagerOr=>177, :EagerAnd=>178, :Equality=>179, :NotEqual=>180, :LessThan=>181, :GreaterThan=>182, :LessOrEqual=>183, :GreaterOrEqual=>184, :Plus=>185, :Minus=>186, :Multiply=>187, :Divide=>188, :Modulo=>189, :Instanceof=>190}, {:Term=>191, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>192, :BasicType=>193, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Selectors=>215, :Selector=>216, :Dot=>217, :OpenStaple=>218}, {:OpenStaple=>219, :Arguments=>220, :OpenParen=>221}, {}, {}, {}, {:Creator=>222, :BasicType=>223, :QualifiedIdentifier=>224, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, {}, {:Dot=>231}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>232}, {}, {:CloseBrace=>233}, {:BlockStatements=>234, :BlockStatement=>152, :LocalVariableDeclarationStatement=>153, :Statement=>154, :Type=>155, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :ArrayType=>77, :QualifiedIdentifier=>163, :BasicType=>79, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Identifier=>165, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {:VariableDeclarator=>235, :Identifier=>236}, {}, {:OpenParen=>237}, {:OpenParen=>238}, {:OpenParen=>239}, {:Semicolon=>240, :Expression=>241, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Semicolon=>242}, {}, {:OpenStaple=>243, :Arguments=>220, :OpenParen=>221}, {:CloseBrace=>244, :BlockStatements=>245, :BlockStatement=>152, :LocalVariableDeclarationStatement=>153, :Statement=>154, :Type=>155, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :ArrayType=>77, :QualifiedIdentifier=>163, :BasicType=>79, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Identifier=>165, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Dot=>246}, {}, {:FormalParameterList=>247, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {}, {}, {:CloseParen=>248}, {}, {:Expression=>249, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:SubExpression=>250, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>251, :OpenStaple=>252}, {:CloseParen=>253, :OpenStaple=>254}, {}, {:Equals=>255}, {}, {}, {}, {}, {}, {:Infixop=>256, :LazyOr=>175, :LazyAnd=>176, :EagerOr=>177, :EagerAnd=>178, :Equality=>179, :NotEqual=>180, :LessThan=>181, :GreaterThan=>182, :LessOrEqual=>183, :GreaterOrEqual=>184, :Plus=>185, :Minus=>186, :Multiply=>187, :Divide=>188, :Modulo=>189, :Instanceof=>190}, {:Term=>257, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Expression=>258, :BasicType=>259, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Selectors=>260, :Selector=>261, :Dot=>262, :OpenStaple=>263}, {:OpenStaple=>264, :Arguments=>265, :OpenParen=>266}, {}, {:Creator=>267, :BasicType=>268, :QualifiedIdentifier=>269, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, {}, {:Dot=>270}, {}, {}, {}, {}, {}, {}, {:Selectors=>271, :Selector=>216, :Dot=>217, :OpenStaple=>218}, {:Identifier=>272}, {:Expression=>273, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Expression=>290, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Selectors=>291, :Selector=>216, :Dot=>217, :OpenStaple=>218}, {:CloseParen=>292, :Expressions=>293, :Expression=>294, :Assignment=>295, :SubExpression=>296, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {}, {:ArrayCreator=>311, :OpenStaple=>312}, {:ArrayCreator=>313, :Arguments=>314, :OpenStaple=>312, :OpenParen=>221}, {}, {}, {}, {}, {}, {:Dot=>315}, {:QualifiedIdentifier=>316, :Identifier=>140}, {}, {}, {}, {:Semicolon=>317}, {:Equals=>318}, {:Expression=>319, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:ForInit=>327, :Expression=>328, :Type=>329, :Assignment=>128, :SubExpression=>129, :ArrayType=>77, :QualifiedIdentifier=>163, :BasicType=>79, :Term=>130, :Identifier=>165, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>330, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {:Semicolon=>331}, {}, {:CloseStaple=>121, :Expression=>290, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {:CloseBrace=>332}, {:QualifiedIdentifier=>333, :Identifier=>165}, {}, {}, {}, {}, {:Term=>334, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseStaple=>335}, {:Term=>336, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseStaple=>337}, {:Expression=>338, :Assignment=>194, :SubExpression=>195, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:SubExpression=>339, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {:CloseParen=>340, :OpenStaple=>341}, {:CloseParen=>342, :OpenStaple=>343}, {}, {:Selectors=>344, :Selector=>261, :Dot=>262, :OpenStaple=>263}, {:Identifier=>345}, {:Expression=>346, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Expression=>347, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Selectors=>348, :Selector=>261, :Dot=>262, :OpenStaple=>263}, {:CloseParen=>349, :Expressions=>350, :Expression=>294, :Assignment=>295, :SubExpression=>296, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {}, {:ArrayCreator=>351, :OpenStaple=>352}, {:ArrayCreator=>353, :Arguments=>354, :OpenStaple=>352, :OpenParen=>266}, {:QualifiedIdentifier=>355, :Identifier=>209}, {}, {:Arguments=>356, :OpenParen=>221}, {:CloseStaple=>357}, {}, {:Equals=>358}, {:Infixop=>359, :LazyOr=>175, :LazyAnd=>176, :EagerOr=>177, :EagerAnd=>178, :Equality=>179, :NotEqual=>180, :LessThan=>181, :GreaterThan=>182, :LessOrEqual=>183, :GreaterOrEqual=>184, :Plus=>185, :Minus=>186, :Multiply=>187, :Divide=>188, :Modulo=>189, :Instanceof=>190}, {:Term=>360, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Expression=>361, :BasicType=>362, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Selectors=>363, :Selector=>364, :Dot=>365, :OpenStaple=>366}, {:OpenStaple=>367, :Arguments=>368, :OpenParen=>369}, {}, {:Creator=>370, :BasicType=>371, :QualifiedIdentifier=>372, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, {}, {:Dot=>373}, {}, {}, {}, {}, {}, {:CloseStaple=>374}, {}, {}, {:CloseParen=>375}, {:Comma=>376}, {}, {:Equals=>377}, {:Infixop=>378, :LazyOr=>175, :LazyAnd=>176, :EagerOr=>177, :EagerAnd=>178, :Equality=>179, :NotEqual=>180, :LessThan=>181, :GreaterThan=>182, :LessOrEqual=>183, :GreaterOrEqual=>184, :Plus=>185, :Minus=>186, :Multiply=>187, :Divide=>188, :Modulo=>189, :Instanceof=>190}, {:Term=>379, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {:Expression=>380, :BasicType=>381, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Selectors=>382, :Selector=>383, :Dot=>384, :OpenStaple=>385}, {:OpenStaple=>386, :Arguments=>387, :OpenParen=>388}, {}, {:Creator=>389, :BasicType=>390, :QualifiedIdentifier=>391, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, {}, {:Dot=>392}, {}, {}, {}, {}, {}, {}, {:Expression=>393, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {}, {:QualifiedIdentifier=>394, :Identifier=>230}, {}, {}, {:Expression=>395, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>396}, {}, {:Equals=>397}, {:Infixop=>398, :LazyOr=>175, :LazyAnd=>176, :EagerOr=>177, :EagerAnd=>178, :Equality=>179, :NotEqual=>180, :LessThan=>181, :GreaterThan=>182, :LessOrEqual=>183, :GreaterOrEqual=>184, :Plus=>185, :Minus=>186, :Multiply=>187, :Divide=>188, :Modulo=>189, :Instanceof=>190}, {:Term=>399, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Expression=>400, :BasicType=>401, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Selectors=>402, :Selector=>403, :Dot=>262, :OpenStaple=>263}, {:OpenStaple=>404, :Arguments=>405, :OpenParen=>266}, {:Semicolon=>406}, {}, {:VariableDeclarator=>407, :Identifier=>236}, {:CloseParen=>408}, {}, {}, {}, {}, {:CloseParen=>409}, {}, {:CloseParen=>410}, {}, {}, {:Term=>411, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:CloseStaple=>412}, {:Term=>413, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:CloseStaple=>414}, {}, {:Arguments=>415, :OpenParen=>266}, {:CloseStaple=>416}, {:CloseStaple=>417}, {}, {}, {:CloseParen=>418}, {}, {:Expression=>419, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {}, {}, {}, {}, {:Expression=>420, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:SubExpression=>421, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {:CloseParen=>422, :OpenStaple=>423}, {:CloseParen=>424, :OpenStaple=>425}, {}, {:Selectors=>426, :Selector=>364, :Dot=>365, :OpenStaple=>366}, {:Identifier=>427}, {:Expression=>428, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Expression=>429, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Selectors=>430, :Selector=>364, :Dot=>365, :OpenStaple=>366}, {:CloseParen=>431, :Expressions=>432, :Expression=>294, :Assignment=>295, :SubExpression=>296, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {}, {:ArrayCreator=>433, :OpenStaple=>434}, {:ArrayCreator=>435, :Arguments=>436, :OpenStaple=>434, :OpenParen=>369}, {:QualifiedIdentifier=>437, :Identifier=>284}, {:Selectors=>438, :Selector=>216, :Dot=>217, :OpenStaple=>218}, {}, {:Expressions=>439, :Expression=>294, :Assignment=>295, :SubExpression=>296, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {:Expression=>440, :Assignment=>295, :SubExpression=>296, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {:SubExpression=>441, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {}, {:CloseParen=>442, :OpenStaple=>443}, {:CloseParen=>444, :OpenStaple=>445}, {}, {:Selectors=>446, :Selector=>383, :Dot=>384, :OpenStaple=>385}, {:Identifier=>447}, {:Expression=>448, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Expression=>449, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Selectors=>450, :Selector=>383, :Dot=>384, :OpenStaple=>385}, {:CloseParen=>451, :Expressions=>452, :Expression=>294, :Assignment=>295, :SubExpression=>296, :Term=>297, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {}, {:ArrayCreator=>453, :OpenStaple=>454}, {:ArrayCreator=>455, :Arguments=>456, :OpenStaple=>454, :OpenParen=>388}, {:QualifiedIdentifier=>457, :Identifier=>305}, {:CloseStaple=>458}, {}, {}, {:Statement=>459, :Block=>460, :If=>461, :For=>462, :While=>463, :Return=>464, :Expression=>465, :Semicolon=>466, :OpenBrace=>467, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>468, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:SubExpression=>469, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {:CloseParen=>470, :OpenStaple=>471}, {:CloseParen=>472, :OpenStaple=>473}, {}, {:Selectors=>474, :Selector=>403, :Dot=>262, :OpenStaple=>263}, {:Expression=>475, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Selectors=>476, :Selector=>403, :Dot=>262, :OpenStaple=>263}, {:Semicolon=>477, :Expression=>478, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:Statement=>479, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Term=>480, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Term=>481, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:CloseParen=>482}, {}, {:CloseParen=>483}, {}, {}, {:Selectors=>484, :Selector=>261, :Dot=>262, :OpenStaple=>263}, {}, {:CloseStaple=>485}, {}, {}, {:Term=>486, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:CloseStaple=>487}, {:Term=>488, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:CloseStaple=>489}, {}, {:Arguments=>490, :OpenParen=>369}, {:CloseStaple=>491}, {:CloseStaple=>492}, {}, {}, {:CloseParen=>493}, {}, {:Expression=>494, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {}, {}, {}, {}, {}, {}, {:Term=>495, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {:CloseStaple=>496}, {:Term=>497, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {:CloseStaple=>498}, {}, {:Arguments=>499, :OpenParen=>388}, {:CloseStaple=>500}, {:CloseStaple=>501}, {}, {}, {:CloseParen=>502}, {}, {:Expression=>503, :Assignment=>274, :SubExpression=>275, :Term=>276, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {}, {}, {}, {:Else=>504}, {}, {:OpenParen=>505}, {:OpenParen=>506}, {:OpenParen=>507}, {:Semicolon=>508, :Expression=>509, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Semicolon=>510}, {}, {:CloseBrace=>511, :BlockStatements=>512, :BlockStatement=>152, :LocalVariableDeclarationStatement=>153, :Statement=>154, :Type=>155, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :ArrayType=>77, :QualifiedIdentifier=>163, :BasicType=>79, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Identifier=>165, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {:Term=>513, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:CloseStaple=>514}, {:Term=>515, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:CloseStaple=>516}, {}, {:CloseStaple=>517}, {}, {:ForUpdate=>518, :Expression=>519, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Semicolon=>520}, {}, {}, {}, {:Term=>521, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Term=>522, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {}, {}, {:CloseParen=>523}, {}, {:CloseParen=>524}, {}, {}, {:Selectors=>525, :Selector=>364, :Dot=>365, :OpenStaple=>366}, {}, {:CloseStaple=>526}, {}, {:CloseParen=>527}, {}, {:CloseParen=>528}, {}, {}, {:Selectors=>529, :Selector=>383, :Dot=>384, :OpenStaple=>385}, {}, {:CloseStaple=>530}, {:Statement=>531, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>532, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:ForInit=>533, :Expression=>328, :Type=>329, :Assignment=>128, :SubExpression=>129, :ArrayType=>77, :QualifiedIdentifier=>163, :BasicType=>79, :Term=>130, :Identifier=>165, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>534, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {:Semicolon=>535}, {}, {}, {:CloseBrace=>536}, {}, {:CloseParen=>537}, {}, {:CloseParen=>538}, {:Selectors=>539, :Selector=>403, :Dot=>262, :OpenStaple=>263}, {:CloseParen=>540}, {}, {:ForUpdate=>541, :Expression=>519, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {}, {:Term=>542, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {:Term=>543, :TermModifier=>277, :OpenParen=>278, :Primary=>279, :QualifiedIdentifier=>280, :Not=>135, :Minus=>136, :This=>281, :New=>282, :Literal=>283, :Identifier=>284, :IntegerLiteral=>285, :CharacterLiteral=>286, :StringLiteral=>287, :BooleanLiteral=>288, :NullLiteral=>289}, {}, {}, {:Term=>544, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {:Term=>545, :TermModifier=>298, :OpenParen=>299, :Primary=>300, :QualifiedIdentifier=>301, :Not=>135, :Minus=>136, :This=>302, :New=>303, :Literal=>304, :Identifier=>305, :IntegerLiteral=>306, :CharacterLiteral=>307, :StringLiteral=>308, :BooleanLiteral=>309, :NullLiteral=>310}, {}, {}, {}, {:CloseParen=>546}, {:Semicolon=>547}, {:CloseParen=>548}, {}, {}, {:Term=>549, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Term=>550, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {:Statement=>551, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>552}, {}, {}, {}, {}, {:Statement=>553, :Block=>460, :If=>461, :For=>462, :While=>463, :Return=>464, :Expression=>465, :Semicolon=>466, :OpenBrace=>467, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Semicolon=>554, :Expression=>555, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Statement=>556, :Block=>460, :If=>461, :For=>462, :While=>463, :Return=>464, :Expression=>465, :Semicolon=>466, :OpenBrace=>467, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {}, {:Statement=>557, :Block=>156, :If=>157, :For=>158, :While=>159, :Return=>160, :Expression=>161, :Semicolon=>162, :OpenBrace=>164, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Else=>558}, {:ForUpdate=>559, :Expression=>519, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {:Semicolon=>560}, {}, {}, {:Statement=>561, :Block=>460, :If=>461, :For=>462, :While=>463, :Return=>464, :Expression=>465, :Semicolon=>466, :OpenBrace=>467, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>562}, {:ForUpdate=>563, :Expression=>519, :Assignment=>320, :SubExpression=>321, :Term=>322, :TermModifier=>323, :OpenParen=>324, :Primary=>325, :QualifiedIdentifier=>326, :Not=>135, :Minus=>136, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, {}, {:Statement=>564, :Block=>460, :If=>461, :For=>462, :While=>463, :Return=>464, :Expression=>465, :Semicolon=>466, :OpenBrace=>467, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>565}, {}, {:Statement=>566, :Block=>460, :If=>461, :For=>462, :While=>463, :Return=>464, :Expression=>465, :Semicolon=>466, :OpenBrace=>467, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}]}
