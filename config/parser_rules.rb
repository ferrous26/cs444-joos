PARSER_RULES = {:transitions=>{0=>{:CompilationUnit=>1, :ImportDeclarations=>2, :Package=>3, :ImportDeclaration=>4, :Import=>5}, 1=>{:EndProgram=>6}, 2=>{:TypeDeclaration=>7, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, 3=>{:QualifiedIdentifier=>17, :Identifier=>18}, 4=>{:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5}, 5=>{:QualifiedImportIdentifier=>20, :Identifier=>21}, 8=>{:ClassDeclaration=>22, :InterfaceDeclaration=>23, :Class=>24, :Interface=>25}, 10=>{:Modifiers=>26, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, 17=>{:Semicolon=>27}, 18=>{:Dot=>28}, 20=>{:Semicolon=>29}, 21=>{:Dot=>30}, 24=>{:Identifier=>31}, 25=>{:Identifier=>32}, 27=>{:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5}, 28=>{:QualifiedIdentifier=>34, :Identifier=>18}, 30=>{:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21}, 31=>{:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40}, 32=>{:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43}, 33=>{:TypeDeclaration=>44, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, 38=>{:QualifiedIdentifier=>45, :Identifier=>46}, 39=>{:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49}, 40=>{:ClassBodyDeclarations=>50, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 42=>{:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49}, 43=>{:InterfaceBodyDeclarations=>62, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 45=>{:ClassBody=>66, :Implements=>67, :OpenBrace=>40}, 46=>{:Dot=>68}, 47=>{:ClassBody=>69, :OpenBrace=>40}, 48=>{:Comma=>70}, 49=>{:Dot=>71}, 50=>{:CloseBrace=>72}, 51=>{:ClassBodyDeclarations=>73, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 53=>{:Type=>74, :Void=>75, :Identifier=>76, :QualifiedIdentifier=>77, :BasicType=>78, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, 54=>{:Modifiers=>84, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 61=>{:InterfaceBody=>85, :OpenBrace=>43}, 62=>{:CloseBrace=>86}, 63=>{:InterfaceBodyDeclarations=>87, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 65=>{:Type=>88, :Void=>89, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, 67=>{:TypeList=>91, :QualifiedIdentifier=>48, :Identifier=>49}, 68=>{:QualifiedIdentifier=>92, :Identifier=>46}, 70=>{:TypeList=>93, :QualifiedIdentifier=>48, :Identifier=>49}, 71=>{:QualifiedIdentifier=>94, :Identifier=>49}, 74=>{:Identifier=>95}, 75=>{:Identifier=>96}, 76=>{:ConstructorDeclaratorRest=>97, :Dot=>98, :FormalParameters=>99, :OpenParen=>100}, 77=>{:OpenStaple=>101}, 78=>{:OpenStaple=>102}, 88=>{:Identifier=>103}, 89=>{:Identifier=>104}, 90=>{:Dot=>98}, 91=>{:ClassBody=>105, :OpenBrace=>40}, 95=>{:Semicolon=>106, :Equals=>107, :MethodDeclaratorRest=>108, :FormalParameters=>109, :OpenParen=>110}, 96=>{:MethodDeclaratorRest=>111, :FormalParameters=>109, :OpenParen=>110}, 98=>{:QualifiedIdentifier=>112, :Identifier=>90}, 99=>{:MethodBody=>113, :Block=>114, :OpenBrace=>115}, 100=>{:CloseParen=>116, :FormalParameterList=>117, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, 101=>{:CloseStaple=>120}, 102=>{:CloseStaple=>121}, 103=>{:InterfaceMemberDeclRest=>122, :FormalParameters=>123, :OpenParen=>124}, 104=>{:InterfaceMemberDeclRest=>125, :FormalParameters=>123, :OpenParen=>124}, 107=>{:Expression=>126, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 109=>{:MethodBody=>145, :Semicolon=>146, :Block=>114, :OpenBrace=>115}, 110=>{:CloseParen=>147, :FormalParameterList=>148, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, 115=>{:CloseBrace=>149, :BlockStatements=>150, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 117=>{:CloseParen=>165}, 118=>{:Comma=>166}, 119=>{:Identifier=>167}, 123=>{:Semicolon=>168}, 124=>{:CloseParen=>169, :FormalParameterList=>170, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, 126=>{:Semicolon=>171}, 128=>{:Equals=>172}, 129=>{:MoreTerms=>173, :Instanceof=>174, :Infixop=>175, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190}, 130=>{:Term=>191, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 131=>{:Expression=>192, :BasicType=>193, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 132=>{:Selectors=>215, :Selector=>216, :Dot=>217, :OpenStaple=>218}, 133=>{:Selectors=>219, :Arguments=>220, :Selector=>216, :OpenParen=>221, :Dot=>217, :OpenStaple=>218}, 137=>{:Creator=>222, :BasicType=>223, :QualifiedIdentifier=>224, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, 139=>{:Dot=>231}, 148=>{:CloseParen=>232}, 150=>{:CloseBrace=>233}, 151=>{:BlockStatements=>234, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 154=>{:VariableDeclarator=>235, :Identifier=>236}, 156=>{:OpenParen=>237}, 157=>{:OpenParen=>238}, 158=>{:OpenParen=>239}, 159=>{:Semicolon=>240, :Expression=>241, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 160=>{:Semicolon=>242}, 162=>{:OpenStaple=>243, :Selectors=>219, :Arguments=>220, :Selector=>216, :OpenParen=>221, :Dot=>217}, 163=>{:CloseBrace=>244, :BlockStatements=>245, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 164=>{:Dot=>246}, 166=>{:FormalParameterList=>247, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, 170=>{:CloseParen=>248}, 172=>{:Expression=>249, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 174=>{:Type=>250, :QualifiedIdentifier=>251, :BasicType=>252, :Identifier=>253, :Byte=>254, :Char=>255, :Int=>256, :Boolean=>257, :Short=>258}, 175=>{:Term=>259, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 192=>{:CloseParen=>260, :OpenStaple=>261}, 193=>{:CloseParen=>262, :OpenStaple=>263}, 195=>{:Equals=>264}, 201=>{:MoreTerms=>265, :Instanceof=>266, :Infixop=>267, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190}, 202=>{:Term=>268, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 203=>{:Expression=>269, :BasicType=>270, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 204=>{:Selectors=>271, :Selector=>272, :Dot=>273, :OpenStaple=>274}, 205=>{:Selectors=>275, :Arguments=>276, :Selector=>272, :OpenParen=>277, :Dot=>273, :OpenStaple=>274}, 207=>{:Creator=>278, :BasicType=>279, :QualifiedIdentifier=>280, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, 209=>{:Dot=>281}, 216=>{:Selectors=>282, :Selector=>216, :Dot=>217, :OpenStaple=>218}, 217=>{:Identifier=>283}, 218=>{:Expression=>284, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 220=>{:Selectors=>301, :Selector=>216, :Dot=>217, :OpenStaple=>218}, 221=>{:Expressions=>302, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 223=>{:ArrayCreator=>320, :OpenStaple=>321}, 224=>{:ArrayCreator=>322, :Arguments=>323, :OpenStaple=>321, :OpenParen=>324}, 230=>{:Dot=>325}, 231=>{:QualifiedIdentifier=>326, :Identifier=>139}, 235=>{:Semicolon=>327}, 236=>{:Equals=>328, :OpenStaple=>329}, 237=>{:Expression=>330, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 238=>{:ForInit=>338, :Expression=>339, :Type=>340, :Assignment=>127, :SubExpression=>128, :QualifiedIdentifier=>162, :BasicType=>78, :Term=>129, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 239=>{:Expression=>341, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 241=>{:Semicolon=>342}, 243=>{:CloseStaple=>120, :Expression=>284, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 245=>{:CloseBrace=>343}, 246=>{:QualifiedIdentifier=>344, :Identifier=>164}, 251=>{:OpenStaple=>345}, 252=>{:OpenStaple=>346}, 253=>{:Dot=>347}, 259=>{:MoreTerms=>348, :Infixop=>175, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190, :Instanceof=>349}, 260=>{:Term=>350, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 261=>{:CloseStaple=>351}, 262=>{:Term=>352, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 263=>{:CloseStaple=>353}, 264=>{:Expression=>354, :Assignment=>194, :SubExpression=>195, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 266=>{:Type=>355, :QualifiedIdentifier=>356, :BasicType=>357, :Identifier=>358, :Byte=>359, :Char=>360, :Int=>361, :Boolean=>362, :Short=>363}, 267=>{:Term=>364, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 269=>{:CloseParen=>365, :OpenStaple=>366}, 270=>{:CloseParen=>367, :OpenStaple=>368}, 272=>{:Selectors=>369, :Selector=>272, :Dot=>273, :OpenStaple=>274}, 273=>{:Identifier=>370}, 274=>{:Expression=>371, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 276=>{:Selectors=>372, :Selector=>272, :Dot=>273, :OpenStaple=>274}, 277=>{:Expressions=>373, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 279=>{:ArrayCreator=>374, :OpenStaple=>375}, 280=>{:ArrayCreator=>376, :Arguments=>377, :OpenStaple=>375, :OpenParen=>378}, 281=>{:QualifiedIdentifier=>379, :Identifier=>209}, 283=>{:Arguments=>380, :OpenParen=>221}, 284=>{:CloseStaple=>381}, 286=>{:Equals=>382}, 287=>{:MoreTerms=>383, :Instanceof=>384, :Infixop=>385, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190}, 288=>{:Term=>386, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 289=>{:Expression=>387, :BasicType=>388, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 290=>{:Selectors=>389, :Selector=>390, :Dot=>391, :OpenStaple=>392}, 291=>{:Selectors=>393, :Arguments=>394, :Selector=>390, :OpenParen=>395, :Dot=>391, :OpenStaple=>392}, 293=>{:Creator=>396, :BasicType=>397, :QualifiedIdentifier=>398, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, 295=>{:Dot=>399}, 302=>{:CloseParen=>400}, 303=>{:MoreExpressions=>401, :Comma=>402}, 305=>{:Equals=>403}, 306=>{:MoreTerms=>404, :Instanceof=>405, :Infixop=>406, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190}, 307=>{:Term=>407, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 308=>{:Expression=>408, :BasicType=>409, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 309=>{:Selectors=>410, :Selector=>411, :Dot=>412, :OpenStaple=>413}, 310=>{:Selectors=>414, :Arguments=>415, :Selector=>411, :OpenParen=>416, :Dot=>412, :OpenStaple=>413}, 312=>{:Creator=>417, :BasicType=>418, :QualifiedIdentifier=>419, :Byte=>225, :Char=>226, :Int=>227, :Boolean=>228, :Short=>229, :Identifier=>230}, 314=>{:Dot=>420}, 321=>{:CloseStaple=>421, :Expression=>422, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 323=>{:ClassBody=>423, :OpenBrace=>424}, 324=>{:Expressions=>425, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 325=>{:QualifiedIdentifier=>426, :Identifier=>230}, 328=>{:Expression=>427, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 329=>{:CloseStaple=>428}, 330=>{:CloseParen=>429}, 332=>{:Equals=>430}, 333=>{:MoreTerms=>431, :Instanceof=>432, :Infixop=>433, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190}, 334=>{:Term=>434, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 335=>{:Expression=>435, :BasicType=>436, :Assignment=>194, :SubExpression=>195, :Byte=>196, :Char=>197, :Int=>198, :Boolean=>199, :Short=>200, :Term=>201, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 336=>{:Selectors=>437, :Selector=>438, :Dot=>273, :OpenStaple=>274}, 337=>{:Selectors=>439, :Arguments=>440, :Selector=>438, :OpenParen=>277, :Dot=>273, :OpenStaple=>274}, 338=>{:Semicolon=>441}, 340=>{:VariableDeclarator=>442, :Identifier=>236}, 341=>{:CloseParen=>443}, 345=>{:CloseStaple=>444}, 346=>{:CloseStaple=>445}, 347=>{:QualifiedIdentifier=>446, :Identifier=>253}, 351=>{:CloseParen=>447}, 353=>{:CloseParen=>448}, 356=>{:OpenStaple=>449}, 357=>{:OpenStaple=>450}, 358=>{:Dot=>451}, 364=>{:MoreTerms=>452, :Infixop=>267, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190, :Instanceof=>349}, 365=>{:Term=>453, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 366=>{:CloseStaple=>454}, 367=>{:Term=>455, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 368=>{:CloseStaple=>456}, 370=>{:Arguments=>457, :OpenParen=>277}, 371=>{:CloseStaple=>458}, 373=>{:CloseParen=>459}, 375=>{:CloseStaple=>460, :Expression=>461, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 377=>{:ClassBody=>462, :OpenBrace=>463}, 378=>{:Expressions=>464, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 382=>{:Expression=>465, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 384=>{:Type=>466, :QualifiedIdentifier=>467, :BasicType=>468, :Identifier=>469, :Byte=>470, :Char=>471, :Int=>472, :Boolean=>473, :Short=>474}, 385=>{:Term=>475, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 387=>{:CloseParen=>476, :OpenStaple=>477}, 388=>{:CloseParen=>478, :OpenStaple=>479}, 390=>{:Selectors=>480, :Selector=>390, :Dot=>391, :OpenStaple=>392}, 391=>{:Identifier=>481}, 392=>{:Expression=>482, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 394=>{:Selectors=>483, :Selector=>390, :Dot=>391, :OpenStaple=>392}, 395=>{:Expressions=>484, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 397=>{:ArrayCreator=>485, :OpenStaple=>486}, 398=>{:ArrayCreator=>487, :Arguments=>488, :OpenStaple=>486, :OpenParen=>489}, 399=>{:QualifiedIdentifier=>490, :Identifier=>295}, 402=>{:Expression=>491, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 403=>{:Expression=>492, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 405=>{:Type=>493, :QualifiedIdentifier=>494, :BasicType=>495, :Identifier=>496, :Byte=>497, :Char=>498, :Int=>499, :Boolean=>500, :Short=>501}, 406=>{:Term=>502, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 408=>{:CloseParen=>503, :OpenStaple=>504}, 409=>{:CloseParen=>505, :OpenStaple=>506}, 411=>{:Selectors=>507, :Selector=>411, :Dot=>412, :OpenStaple=>413}, 412=>{:Identifier=>508}, 413=>{:Expression=>509, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 415=>{:Selectors=>510, :Selector=>411, :Dot=>412, :OpenStaple=>413}, 416=>{:Expressions=>511, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 418=>{:ArrayCreator=>512, :OpenStaple=>513}, 419=>{:ArrayCreator=>514, :Arguments=>515, :OpenStaple=>513, :OpenParen=>516}, 420=>{:QualifiedIdentifier=>517, :Identifier=>314}, 422=>{:CloseStaple=>518}, 424=>{:ClassBodyDeclarations=>519, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 425=>{:CloseParen=>520}, 428=>{:Equals=>521}, 429=>{:Statement=>522, :Block=>523, :If=>524, :For=>525, :While=>526, :Return=>527, :Expression=>528, :Semicolon=>529, :OpenBrace=>530, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 430=>{:Expression=>531, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 432=>{:Type=>532, :QualifiedIdentifier=>533, :BasicType=>534, :Identifier=>358, :Byte=>359, :Char=>360, :Int=>361, :Boolean=>362, :Short=>363}, 433=>{:Term=>535, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 435=>{:CloseParen=>536, :OpenStaple=>537}, 436=>{:CloseParen=>538, :OpenStaple=>539}, 438=>{:Selectors=>540, :Selector=>438, :Dot=>273, :OpenStaple=>274}, 440=>{:Selectors=>541, :Selector=>438, :Dot=>273, :OpenStaple=>274}, 441=>{:Semicolon=>542, :Expression=>543, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 443=>{:Statement=>544, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 447=>{:Term=>545, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 448=>{:Term=>546, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 449=>{:CloseStaple=>547}, 450=>{:CloseStaple=>548}, 451=>{:QualifiedIdentifier=>549, :Identifier=>358}, 454=>{:CloseParen=>550}, 456=>{:CloseParen=>551}, 461=>{:CloseStaple=>552}, 463=>{:ClassBodyDeclarations=>553, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 464=>{:CloseParen=>554}, 467=>{:OpenStaple=>555}, 468=>{:OpenStaple=>556}, 469=>{:Dot=>557}, 475=>{:MoreTerms=>558, :Infixop=>385, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190, :Instanceof=>349}, 476=>{:Term=>559, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 477=>{:CloseStaple=>560}, 478=>{:Term=>561, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 479=>{:CloseStaple=>562}, 481=>{:Arguments=>563, :OpenParen=>395}, 482=>{:CloseStaple=>564}, 484=>{:CloseParen=>565}, 486=>{:CloseStaple=>566, :Expression=>567, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 488=>{:ClassBody=>568, :OpenBrace=>569}, 489=>{:Expressions=>570, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 491=>{:MoreExpressions=>571, :Comma=>402}, 494=>{:OpenStaple=>572}, 495=>{:OpenStaple=>573}, 496=>{:Dot=>574}, 502=>{:MoreTerms=>575, :Infixop=>406, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190, :Instanceof=>349}, 503=>{:Term=>576, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 504=>{:CloseStaple=>577}, 505=>{:Term=>578, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 506=>{:CloseStaple=>579}, 508=>{:Arguments=>580, :OpenParen=>416}, 509=>{:CloseStaple=>581}, 511=>{:CloseParen=>582}, 513=>{:CloseStaple=>583, :Expression=>584, :Assignment=>285, :SubExpression=>286, :Term=>287, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 515=>{:ClassBody=>585, :OpenBrace=>586}, 516=>{:Expressions=>587, :Expression=>303, :Assignment=>304, :SubExpression=>305, :Term=>306, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 519=>{:CloseBrace=>588}, 521=>{:Expression=>589, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 522=>{:Else=>590}, 524=>{:OpenParen=>591}, 525=>{:OpenParen=>592}, 526=>{:OpenParen=>593}, 527=>{:Semicolon=>594, :Expression=>595, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 528=>{:Semicolon=>596}, 530=>{:CloseBrace=>597, :BlockStatements=>598, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 533=>{:OpenStaple=>599}, 534=>{:OpenStaple=>600}, 535=>{:MoreTerms=>601, :Infixop=>433, :LazyOr=>176, :LazyAnd=>177, :EagerOr=>178, :EagerAnd=>179, :Equality=>180, :NotEqual=>181, :LessThan=>182, :GreaterThan=>183, :LessOrEqual=>184, :GreaterOrEqual=>185, :Plus=>186, :Minus=>187, :Multiply=>188, :Divide=>189, :Modulo=>190, :Instanceof=>349}, 536=>{:Term=>602, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 537=>{:CloseStaple=>603}, 538=>{:Term=>604, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 539=>{:CloseStaple=>605}, 542=>{:ForUpdate=>606, :Expression=>607, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 543=>{:Semicolon=>608}, 550=>{:Term=>609, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 551=>{:Term=>610, :TermModifier=>202, :OpenParen=>203, :Primary=>204, :QualifiedIdentifier=>205, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 553=>{:CloseBrace=>611}, 555=>{:CloseStaple=>612}, 556=>{:CloseStaple=>613}, 557=>{:QualifiedIdentifier=>614, :Identifier=>469}, 560=>{:CloseParen=>615}, 562=>{:CloseParen=>616}, 567=>{:CloseStaple=>617}, 569=>{:ClassBodyDeclarations=>618, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 570=>{:CloseParen=>619}, 572=>{:CloseStaple=>620}, 573=>{:CloseStaple=>621}, 574=>{:QualifiedIdentifier=>622, :Identifier=>496}, 577=>{:CloseParen=>623}, 579=>{:CloseParen=>624}, 584=>{:CloseStaple=>625}, 586=>{:ClassBodyDeclarations=>626, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, 587=>{:CloseParen=>627}, 590=>{:Statement=>628, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 591=>{:Expression=>629, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 592=>{:ForInit=>630, :Expression=>339, :Type=>340, :Assignment=>127, :SubExpression=>128, :QualifiedIdentifier=>162, :BasicType=>78, :Term=>129, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 593=>{:Expression=>631, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 595=>{:Semicolon=>632}, 598=>{:CloseBrace=>633}, 599=>{:CloseStaple=>634}, 600=>{:CloseStaple=>635}, 603=>{:CloseParen=>636}, 605=>{:CloseParen=>637}, 606=>{:CloseParen=>638}, 608=>{:ForUpdate=>639, :Expression=>607, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 615=>{:Term=>640, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 616=>{:Term=>641, :TermModifier=>288, :OpenParen=>289, :Primary=>290, :QualifiedIdentifier=>291, :Not=>134, :Minus=>135, :This=>292, :New=>293, :Literal=>294, :Identifier=>295, :IntegerLiteral=>296, :CharacterLiteral=>297, :StringLiteral=>298, :BooleanLiteral=>299, :NullLiteral=>300}, 618=>{:CloseBrace=>642}, 623=>{:Term=>643, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 624=>{:Term=>644, :TermModifier=>307, :OpenParen=>308, :Primary=>309, :QualifiedIdentifier=>310, :Not=>134, :Minus=>135, :This=>311, :New=>312, :Literal=>313, :Identifier=>314, :IntegerLiteral=>315, :CharacterLiteral=>316, :StringLiteral=>317, :BooleanLiteral=>318, :NullLiteral=>319}, 626=>{:CloseBrace=>645}, 629=>{:CloseParen=>646}, 630=>{:Semicolon=>647}, 631=>{:CloseParen=>648}, 636=>{:Term=>649, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 637=>{:Term=>650, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 638=>{:Statement=>651, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 639=>{:CloseParen=>652}, 646=>{:Statement=>653, :Block=>523, :If=>524, :For=>525, :While=>526, :Return=>527, :Expression=>528, :Semicolon=>529, :OpenBrace=>530, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 647=>{:Semicolon=>654, :Expression=>655, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 648=>{:Statement=>656, :Block=>523, :If=>524, :For=>525, :While=>526, :Return=>527, :Expression=>528, :Semicolon=>529, :OpenBrace=>530, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 652=>{:Statement=>657, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 653=>{:Else=>658}, 654=>{:ForUpdate=>659, :Expression=>607, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 655=>{:Semicolon=>660}, 658=>{:Statement=>661, :Block=>523, :If=>524, :For=>525, :While=>526, :Return=>527, :Expression=>528, :Semicolon=>529, :OpenBrace=>530, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 659=>{:CloseParen=>662}, 660=>{:ForUpdate=>663, :Expression=>607, :Assignment=>331, :SubExpression=>332, :Term=>333, :TermModifier=>334, :OpenParen=>335, :Primary=>336, :QualifiedIdentifier=>337, :Not=>134, :Minus=>135, :This=>206, :New=>207, :Literal=>208, :Identifier=>209, :IntegerLiteral=>210, :CharacterLiteral=>211, :StringLiteral=>212, :BooleanLiteral=>213, :NullLiteral=>214}, 662=>{:Statement=>664, :Block=>523, :If=>524, :For=>525, :While=>526, :Return=>527, :Expression=>528, :Semicolon=>529, :OpenBrace=>530, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, 663=>{:CloseParen=>665}, 665=>{:Statement=>666, :Block=>523, :If=>524, :For=>525, :While=>526, :Return=>527, :Expression=>528, :Semicolon=>529, :OpenBrace=>530, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}}, :reductions=>{0=>{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, 1=>{}, 2=>{[:EndProgram]=>[:CompilationUnit, 1], [:Class, :Interface]=>[:Modifiers, 0]}, 3=>{}, 4=>{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, 5=>{}, 6=>{[]=>[:AugmentedCompilationUnit, 2]}, 7=>{[:EndProgram]=>[:CompilationUnit, 2]}, 8=>{}, 9=>{[:EndProgram]=>[:TypeDeclaration, 1]}, 10=>{[:Class, :Interface]=>[:Modifiers, 0]}, 11=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, 12=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, 13=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, 14=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, 15=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, 16=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, 17=>{}, 18=>{[:Semicolon]=>[:QualifiedIdentifier, 1]}, 19=>{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 2]}, 20=>{}, 21=>{[:Semicolon]=>[:QualifiedImportIdentifier, 1]}, 22=>{[:EndProgram]=>[:TypeDeclaration, 2]}, 23=>{[:EndProgram]=>[:TypeDeclaration, 2]}, 24=>{}, 25=>{}, 26=>{[:Class, :Interface]=>[:Modifiers, 2]}, 27=>{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, 28=>{}, 29=>{[:Import, :EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclaration, 3]}, 30=>{}, 31=>{}, 32=>{}, 33=>{[:EndProgram]=>[:CompilationUnit, 4], [:Class, :Interface]=>[:Modifiers, 0]}, 34=>{[:Semicolon]=>[:QualifiedIdentifier, 3]}, 35=>{[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, 36=>{[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, 37=>{[:EndProgram]=>[:ClassDeclaration, 3]}, 38=>{}, 39=>{}, 40=>{[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 41=>{[:EndProgram]=>[:InterfaceDeclaration, 3]}, 42=>{}, 43=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 44=>{[:EndProgram]=>[:CompilationUnit, 5]}, 45=>{}, 46=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]}, 47=>{}, 48=>{[:OpenBrace]=>[:TypeList, 1]}, 49=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]}, 50=>{}, 51=>{[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 52=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 1]}, 53=>{}, 54=>{[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 55=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, 56=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, 57=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, 58=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, 59=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, 60=>{[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, 61=>{}, 62=>{}, 63=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 64=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 1]}, 65=>{}, 66=>{[:EndProgram]=>[:ClassDeclaration, 5]}, 67=>{}, 68=>{}, 69=>{[:EndProgram]=>[:ClassDeclaration, 5]}, 70=>{}, 71=>{}, 72=>{[:EndProgram]=>[:ClassBody, 3]}, 73=>{[:CloseBrace]=>[:ClassBodyDeclarations, 2]}, 74=>{}, 75=>{}, 76=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, 77=>{[:Identifier]=>[:Type, 1]}, 78=>{[:Identifier]=>[:Type, 1]}, 79=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]}, 80=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]}, 81=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]}, 82=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]}, 83=>{[:Identifier, :OpenStaple]=>[:BasicType, 1]}, 84=>{[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 2]}, 85=>{[:EndProgram]=>[:InterfaceDeclaration, 5]}, 86=>{[:EndProgram]=>[:InterfaceBody, 3]}, 87=>{[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]}, 88=>{}, 89=>{}, 90=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, 91=>{}, 92=>{[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]}, 93=>{[:OpenBrace]=>[:TypeList, 3]}, 94=>{[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]}, 95=>{}, 96=>{}, 97=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 3]}, 98=>{}, 99=>{}, 100=>{}, 101=>{}, 102=>{}, 103=>{}, 104=>{}, 105=>{[:EndProgram]=>[:ClassDeclaration, 7]}, 106=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, 107=>{}, 108=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, 109=>{}, 110=>{}, 111=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, 112=>{[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]}, 113=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ConstructorDeclaratorRest, 2]}, 114=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodBody, 1]}, 115=>{}, 116=>{[:OpenBrace]=>[:FormalParameters, 2]}, 117=>{}, 118=>{[:CloseParen]=>[:FormalParameterList, 1]}, 119=>{}, 120=>{[:Identifier]=>[:Type, 3]}, 121=>{[:Identifier]=>[:Type, 3]}, 122=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, 123=>{}, 124=>{}, 125=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, 126=>{}, 127=>{[:Semicolon]=>[:Expression, 1]}, 128=>{[:Semicolon]=>[:Expression, 1]}, 129=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]}, 130=>{}, 131=>{}, 132=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selectors, 0]}, 133=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selectors, 0]}, 134=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, 135=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, 136=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Primary, 1]}, 137=>{}, 138=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Primary, 1]}, 139=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :OpenParen, :Equals]=>[:QualifiedIdentifier, 1]}, 140=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Literal, 1]}, 141=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Literal, 1]}, 142=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Literal, 1]}, 143=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Literal, 1]}, 144=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Literal, 1]}, 145=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, 146=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, 147=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]}, 148=>{}, 149=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 2]}, 150=>{}, 151=>{[:CloseBrace]=>[:BlockStatements, 1]}, 152=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:BlockStatement, 1]}, 153=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:BlockStatement, 1]}, 154=>{}, 155=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 1]}, 156=>{}, 157=>{}, 158=>{}, 159=>{}, 160=>{}, 161=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 1]}, 162=>{[:Identifier]=>[:Type, 1], [:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selectors, 0]}, 163=>{}, 164=>{[:Identifier, :OpenStaple, :Dot, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :OpenParen, :Equals]=>[:QualifiedIdentifier, 1]}, 165=>{[:OpenBrace]=>[:FormalParameters, 3]}, 166=>{}, 167=>{[:CloseParen, :Comma]=>[:FormalParameter, 2]}, 168=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceMemberDeclRest, 2]}, 169=>{[:Semicolon]=>[:FormalParameters, 2]}, 170=>{}, 171=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 6]}, 172=>{}, 173=>{[:Semicolon, :Equals]=>[:SubExpression, 2]}, 174=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 175=>{}, 176=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 177=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 178=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 179=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 180=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 181=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 182=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 183=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 184=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 185=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 186=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 187=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 188=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 189=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 190=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 191=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 2]}, 192=>{}, 193=>{}, 194=>{[:CloseParen, :OpenStaple]=>[:Expression, 1]}, 195=>{[:CloseParen, :OpenStaple]=>[:Expression, 1]}, 196=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, 197=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, 198=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, 199=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, 200=>{[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, 201=>{[:CloseParen, :OpenStaple, :Equals]=>[:MoreTerms, 0]}, 202=>{}, 203=>{}, 204=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Selectors, 0]}, 205=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Selectors, 0]}, 206=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Primary, 1]}, 207=>{}, 208=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Primary, 1]}, 209=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenParen, :Equals]=>[:QualifiedIdentifier, 1]}, 210=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Literal, 1]}, 211=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Literal, 1]}, 212=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Literal, 1]}, 213=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Literal, 1]}, 214=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Literal, 1]}, 215=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 2]}, 216=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selectors, 0]}, 217=>{}, 218=>{}, 219=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 2]}, 220=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selectors, 0]}, 221=>{[:CloseParen]=>[:Expressions, 0]}, 222=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Primary, 2]}, 223=>{}, 224=>{}, 225=>{[:OpenStaple]=>[:BasicType, 1]}, 226=>{[:OpenStaple]=>[:BasicType, 1]}, 227=>{[:OpenStaple]=>[:BasicType, 1]}, 228=>{[:OpenStaple]=>[:BasicType, 1]}, 229=>{[:OpenStaple]=>[:BasicType, 1]}, 230=>{[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 1]}, 231=>{}, 232=>{[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]}, 233=>{[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 3]}, 234=>{[:CloseBrace]=>[:BlockStatements, 2]}, 235=>{}, 236=>{}, 237=>{}, 238=>{[:Semicolon]=>[:ForInit, 0]}, 239=>{}, 240=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 2]}, 241=>{}, 242=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 2]}, 243=>{}, 244=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Block, 2]}, 245=>{}, 246=>{}, 247=>{[:CloseParen]=>[:FormalParameterList, 3]}, 248=>{[:Semicolon]=>[:FormalParameters, 3]}, 249=>{[:Semicolon]=>[:Assignment, 3]}, 250=>{[:Semicolon, :Equals]=>[:SubExpression, 3]}, 251=>{[:Semicolon, :Equals]=>[:Type, 1]}, 252=>{[:Semicolon, :Equals]=>[:Type, 1]}, 253=>{[:Semicolon, :Equals, :OpenStaple]=>[:QualifiedIdentifier, 1]}, 254=>{[:Semicolon, :Equals, :OpenStaple]=>[:BasicType, 1]}, 255=>{[:Semicolon, :Equals, :OpenStaple]=>[:BasicType, 1]}, 256=>{[:Semicolon, :Equals, :OpenStaple]=>[:BasicType, 1]}, 257=>{[:Semicolon, :Equals, :OpenStaple]=>[:BasicType, 1]}, 258=>{[:Semicolon, :Equals, :OpenStaple]=>[:BasicType, 1]}, 259=>{[:Semicolon, :Equals]=>[:MoreTerms, 0]}, 260=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Primary, 3]}, 261=>{}, 262=>{}, 263=>{}, 264=>{}, 265=>{[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 2]}, 266=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 267=>{}, 268=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 2]}, 269=>{}, 270=>{}, 271=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 2]}, 272=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Selectors, 0]}, 273=>{}, 274=>{}, 275=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 2]}, 276=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Selectors, 0]}, 277=>{[:CloseParen]=>[:Expressions, 0]}, 278=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Primary, 2]}, 279=>{}, 280=>{}, 281=>{}, 282=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selectors, 2]}, 283=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selector, 2]}, 284=>{}, 285=>{[:CloseStaple]=>[:Expression, 1]}, 286=>{[:CloseStaple]=>[:Expression, 1]}, 287=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]}, 288=>{}, 289=>{}, 290=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selectors, 0]}, 291=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selectors, 0]}, 292=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Primary, 1]}, 293=>{}, 294=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Primary, 1]}, 295=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :OpenParen, :Equals]=>[:QualifiedIdentifier, 1]}, 296=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Literal, 1]}, 297=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Literal, 1]}, 298=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Literal, 1]}, 299=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Literal, 1]}, 300=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Literal, 1]}, 301=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 3]}, 302=>{}, 303=>{[:CloseParen]=>[:MoreExpressions, 0]}, 304=>{[:Comma, :CloseParen]=>[:Expression, 1]}, 305=>{[:Comma, :CloseParen]=>[:Expression, 1]}, 306=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]}, 307=>{}, 308=>{}, 309=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selectors, 0]}, 310=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selectors, 0]}, 311=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Primary, 1]}, 312=>{}, 313=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Primary, 1]}, 314=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :OpenParen, :Equals]=>[:QualifiedIdentifier, 1]}, 315=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Literal, 1]}, 316=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Literal, 1]}, 317=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Literal, 1]}, 318=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Literal, 1]}, 319=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Literal, 1]}, 320=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Creator, 2]}, 321=>{}, 322=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Creator, 2]}, 323=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Creator, 2]}, 324=>{[:CloseParen]=>[:Expressions, 0]}, 325=>{}, 326=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :OpenParen, :Equals]=>[:QualifiedIdentifier, 3]}, 327=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:LocalVariableDeclarationStatement, 3]}, 328=>{}, 329=>{}, 330=>{}, 331=>{[:CloseParen]=>[:Expression, 1]}, 332=>{[:CloseParen]=>[:Expression, 1]}, 333=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]}, 334=>{}, 335=>{}, 336=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selectors, 0]}, 337=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selectors, 0]}, 338=>{}, 339=>{[:Semicolon]=>[:ForInit, 1]}, 340=>{}, 341=>{}, 342=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 3]}, 343=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Block, 3]}, 344=>{[:Identifier, :OpenStaple, :Dot, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :OpenParen, :Equals]=>[:QualifiedIdentifier, 3]}, 345=>{}, 346=>{}, 347=>{}, 348=>{[:Semicolon, :Equals]=>[:MoreTerms, 3]}, 349=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 350=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 4]}, 351=>{}, 352=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 4]}, 353=>{}, 354=>{[:CloseParen, :OpenStaple]=>[:Assignment, 3]}, 355=>{[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 3]}, 356=>{[:CloseParen, :OpenStaple, :Equals]=>[:Type, 1]}, 357=>{[:CloseParen, :OpenStaple, :Equals]=>[:Type, 1]}, 358=>{[:CloseParen, :OpenStaple, :Equals]=>[:QualifiedIdentifier, 1]}, 359=>{[:CloseParen, :OpenStaple, :Equals]=>[:BasicType, 1]}, 360=>{[:CloseParen, :OpenStaple, :Equals]=>[:BasicType, 1]}, 361=>{[:CloseParen, :OpenStaple, :Equals]=>[:BasicType, 1]}, 362=>{[:CloseParen, :OpenStaple, :Equals]=>[:BasicType, 1]}, 363=>{[:CloseParen, :OpenStaple, :Equals]=>[:BasicType, 1]}, 364=>{[:CloseParen, :OpenStaple, :Equals]=>[:MoreTerms, 0]}, 365=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Primary, 3]}, 366=>{}, 367=>{}, 368=>{}, 369=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Selectors, 2]}, 370=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selector, 2]}, 371=>{}, 372=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 3]}, 373=>{}, 374=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Creator, 2]}, 375=>{}, 376=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Creator, 2]}, 377=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Creator, 2]}, 378=>{[:CloseParen]=>[:Expressions, 0]}, 379=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenParen, :Equals]=>[:QualifiedIdentifier, 3]}, 380=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selector, 3]}, 381=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Selector, 3]}, 382=>{}, 383=>{[:CloseStaple, :Equals]=>[:SubExpression, 2]}, 384=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 385=>{}, 386=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 2]}, 387=>{}, 388=>{}, 389=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 2]}, 390=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selectors, 0]}, 391=>{}, 392=>{}, 393=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 2]}, 394=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selectors, 0]}, 395=>{[:CloseParen]=>[:Expressions, 0]}, 396=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Primary, 2]}, 397=>{}, 398=>{}, 399=>{}, 400=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Arguments, 3]}, 401=>{[:CloseParen]=>[:Expressions, 2]}, 402=>{}, 403=>{}, 404=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 2]}, 405=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 406=>{}, 407=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 2]}, 408=>{}, 409=>{}, 410=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 2]}, 411=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selectors, 0]}, 412=>{}, 413=>{}, 414=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 2]}, 415=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selectors, 0]}, 416=>{[:CloseParen]=>[:Expressions, 0]}, 417=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Primary, 2]}, 418=>{}, 419=>{}, 420=>{}, 421=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:ArrayCreator, 2]}, 422=>{}, 423=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Creator, 3]}, 424=>{[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 425=>{}, 426=>{[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 3]}, 427=>{[:Semicolon]=>[:VariableDeclarator, 3]}, 428=>{}, 429=>{}, 430=>{}, 431=>{[:CloseParen, :Equals]=>[:SubExpression, 2]}, 432=>{[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, 433=>{}, 434=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 2]}, 435=>{}, 436=>{}, 437=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 2]}, 438=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selectors, 0]}, 439=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 2]}, 440=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selectors, 0]}, 441=>{}, 442=>{[:Semicolon]=>[:ForInit, 2]}, 443=>{}, 444=>{[:Semicolon, :Equals]=>[:Type, 3]}, 445=>{[:Semicolon, :Equals]=>[:Type, 3]}, 446=>{[:Semicolon, :Equals, :OpenStaple]=>[:QualifiedIdentifier, 3]}, 447=>{}, 448=>{}, 449=>{}, 450=>{}, 451=>{}, 452=>{[:CloseParen, :OpenStaple, :Equals]=>[:MoreTerms, 3]}, 453=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 4]}, 454=>{}, 455=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 4]}, 456=>{}, 457=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selector, 3]}, 458=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selector, 3]}, 459=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Arguments, 3]}, 460=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:ArrayCreator, 2]}, 461=>{}, 462=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Creator, 3]}, 463=>{[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 464=>{}, 465=>{[:CloseStaple]=>[:Assignment, 3]}, 466=>{[:CloseStaple, :Equals]=>[:SubExpression, 3]}, 467=>{[:CloseStaple, :Equals]=>[:Type, 1]}, 468=>{[:CloseStaple, :Equals]=>[:Type, 1]}, 469=>{[:CloseStaple, :Equals, :OpenStaple]=>[:QualifiedIdentifier, 1]}, 470=>{[:CloseStaple, :Equals, :OpenStaple]=>[:BasicType, 1]}, 471=>{[:CloseStaple, :Equals, :OpenStaple]=>[:BasicType, 1]}, 472=>{[:CloseStaple, :Equals, :OpenStaple]=>[:BasicType, 1]}, 473=>{[:CloseStaple, :Equals, :OpenStaple]=>[:BasicType, 1]}, 474=>{[:CloseStaple, :Equals, :OpenStaple]=>[:BasicType, 1]}, 475=>{[:CloseStaple, :Equals]=>[:MoreTerms, 0]}, 476=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Primary, 3]}, 477=>{}, 478=>{}, 479=>{}, 480=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selectors, 2]}, 481=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selector, 2]}, 482=>{}, 483=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 3]}, 484=>{}, 485=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Creator, 2]}, 486=>{}, 487=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Creator, 2]}, 488=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Creator, 2]}, 489=>{[:CloseParen]=>[:Expressions, 0]}, 490=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :OpenParen, :Equals]=>[:QualifiedIdentifier, 3]}, 491=>{[:CloseParen]=>[:MoreExpressions, 0]}, 492=>{[:Comma, :CloseParen]=>[:Assignment, 3]}, 493=>{[:Comma, :CloseParen, :Equals]=>[:SubExpression, 3]}, 494=>{[:Comma, :CloseParen, :Equals]=>[:Type, 1]}, 495=>{[:Comma, :CloseParen, :Equals]=>[:Type, 1]}, 496=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:QualifiedIdentifier, 1]}, 497=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:BasicType, 1]}, 498=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:BasicType, 1]}, 499=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:BasicType, 1]}, 500=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:BasicType, 1]}, 501=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:BasicType, 1]}, 502=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 0]}, 503=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Primary, 3]}, 504=>{}, 505=>{}, 506=>{}, 507=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selectors, 2]}, 508=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selector, 2]}, 509=>{}, 510=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 3]}, 511=>{}, 512=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Creator, 2]}, 513=>{}, 514=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Creator, 2]}, 515=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Creator, 2]}, 516=>{[:CloseParen]=>[:Expressions, 0]}, 517=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :OpenParen, :Equals]=>[:QualifiedIdentifier, 3]}, 518=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:ArrayCreator, 3]}, 519=>{}, 520=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals, :OpenBrace]=>[:Arguments, 3]}, 521=>{}, 522=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 5]}, 523=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 1]}, 524=>{}, 525=>{}, 526=>{}, 527=>{}, 528=>{}, 529=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 1]}, 530=>{}, 531=>{[:CloseParen]=>[:Assignment, 3]}, 532=>{[:CloseParen, :Equals]=>[:SubExpression, 3]}, 533=>{[:CloseParen, :Equals]=>[:Type, 1]}, 534=>{[:CloseParen, :Equals]=>[:Type, 1]}, 535=>{[:CloseParen, :Equals]=>[:MoreTerms, 0]}, 536=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Primary, 3]}, 537=>{}, 538=>{}, 539=>{}, 540=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Selectors, 2]}, 541=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 3]}, 542=>{[:CloseParen]=>[:ForUpdate, 0]}, 543=>{}, 544=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 5]}, 545=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 6]}, 546=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:Term, 6]}, 547=>{[:CloseParen, :OpenStaple, :Equals]=>[:Type, 3]}, 548=>{[:CloseParen, :OpenStaple, :Equals]=>[:Type, 3]}, 549=>{[:CloseParen, :OpenStaple, :Equals]=>[:QualifiedIdentifier, 3]}, 550=>{}, 551=>{}, 552=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:ArrayCreator, 3]}, 553=>{}, 554=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals, :OpenBrace]=>[:Arguments, 3]}, 555=>{}, 556=>{}, 557=>{}, 558=>{[:CloseStaple, :Equals]=>[:MoreTerms, 3]}, 559=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 4]}, 560=>{}, 561=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 4]}, 562=>{}, 563=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selector, 3]}, 564=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Selector, 3]}, 565=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Arguments, 3]}, 566=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:ArrayCreator, 2]}, 567=>{}, 568=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Creator, 3]}, 569=>{[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 570=>{}, 571=>{[:CloseParen]=>[:MoreExpressions, 3]}, 572=>{}, 573=>{}, 574=>{}, 575=>{[:Comma, :CloseParen, :Equals]=>[:MoreTerms, 3]}, 576=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 4]}, 577=>{}, 578=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 4]}, 579=>{}, 580=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selector, 3]}, 581=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Selector, 3]}, 582=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Arguments, 3]}, 583=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:ArrayCreator, 2]}, 584=>{}, 585=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Creator, 3]}, 586=>{[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, 587=>{}, 588=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Semicolon, :Equals]=>[:ClassBody, 3]}, 589=>{[:Semicolon]=>[:VariableDeclarator, 5]}, 590=>{}, 591=>{}, 592=>{[:Semicolon]=>[:ForInit, 0]}, 593=>{}, 594=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 2]}, 595=>{}, 596=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 2]}, 597=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Block, 2]}, 598=>{}, 599=>{}, 600=>{}, 601=>{[:CloseParen, :Equals]=>[:MoreTerms, 3]}, 602=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 4]}, 603=>{}, 604=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 4]}, 605=>{}, 606=>{}, 607=>{[:CloseParen]=>[:ForUpdate, 1]}, 608=>{[:CloseParen]=>[:ForUpdate, 0]}, 609=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 6]}, 610=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :OpenStaple, :Equals]=>[:Term, 6]}, 611=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:ClassBody, 3]}, 612=>{[:CloseStaple, :Equals]=>[:Type, 3]}, 613=>{[:CloseStaple, :Equals]=>[:Type, 3]}, 614=>{[:CloseStaple, :Equals, :OpenStaple]=>[:QualifiedIdentifier, 3]}, 615=>{}, 616=>{}, 617=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:ArrayCreator, 3]}, 618=>{}, 619=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals, :OpenBrace]=>[:Arguments, 3]}, 620=>{[:Comma, :CloseParen, :Equals]=>[:Type, 3]}, 621=>{[:Comma, :CloseParen, :Equals]=>[:Type, 3]}, 622=>{[:Comma, :CloseParen, :Equals, :OpenStaple]=>[:QualifiedIdentifier, 3]}, 623=>{}, 624=>{}, 625=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:ArrayCreator, 3]}, 626=>{}, 627=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals, :OpenBrace]=>[:Arguments, 3]}, 628=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 7]}, 629=>{}, 630=>{}, 631=>{}, 632=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 3]}, 633=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Block, 3]}, 634=>{[:CloseParen, :Equals]=>[:Type, 3]}, 635=>{[:CloseParen, :Equals]=>[:Type, 3]}, 636=>{}, 637=>{}, 638=>{}, 639=>{}, 640=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 6]}, 641=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:Term, 6]}, 642=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseStaple, :Equals]=>[:ClassBody, 3]}, 643=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 6]}, 644=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:Term, 6]}, 645=>{[:Dot, :OpenStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :CloseParen, :Equals]=>[:ClassBody, 3]}, 646=>{}, 647=>{}, 648=>{}, 649=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 6]}, 650=>{[:LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :CloseParen, :Equals]=>[:Term, 6]}, 651=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 8]}, 652=>{}, 653=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 5]}, 654=>{[:CloseParen]=>[:ForUpdate, 0]}, 655=>{}, 656=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 5]}, 657=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 9]}, 658=>{}, 659=>{}, 660=>{[:CloseParen]=>[:ForUpdate, 0]}, 661=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 7]}, 662=>{}, 663=>{}, 664=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 8]}, 665=>{}, 666=>{[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 9]}}}
