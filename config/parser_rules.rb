PARSER_RULES = {:reductions=>[{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:EndProgram]=>[:CompilationUnit, 1], [:Class, :Interface]=>[:Modifiers, 0]}, {}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[]=>[:AugmentedCompilationUnit, 2]}, {[:EndProgram]=>[:CompilationUnit, 2]}, {}, {[:EndProgram]=>[:TypeDeclaration, 1]}, {[:Class, :Interface]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {}, {[:Semicolon]=>[:QualifiedIdentifier, 1]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 2]}, {}, {[:Semicolon]=>[:QualifiedImportIdentifier, 1]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {}, {}, {[:Class, :Interface]=>[:Modifiers, 2]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:Import, :EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclaration, 3]}, {}, {}, {}, {[:EndProgram]=>[:CompilationUnit, 4], [:Class, :Interface]=>[:Modifiers, 0]}, {[:Semicolon]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:EndProgram]=>[:ClassDeclaration, 3]}, {}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:InterfaceDeclaration, 3]}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:CompilationUnit, 5]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace]=>[:TypeList, 1]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 1]}, {}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 1]}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassBody, 3]}, {[:CloseBrace]=>[:ClassBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 2]}, {[:EndProgram]=>[:InterfaceDeclaration, 5]}, {[:EndProgram]=>[:InterfaceBody, 3]}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]}, {[:OpenBrace]=>[:TypeList, 3]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 3]}, {}, {}, {}, {}, {}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 7]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ConstructorDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodBody, 1]}, {}, {[:OpenBrace]=>[:FormalParameters, 2]}, {}, {[:CloseParen]=>[:FormalParameterList, 1]}, {}, {[:Identifier]=>[:Type, 3]}, {[:Identifier]=>[:Type, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:Dot, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 2]}, {}, {[:CloseBrace]=>[:BlockStatements, 1]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:BlockStatement, 1]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:BlockStatement, 1]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 1]}, {[:Identifier]=>[:Type, 1], [:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Identifier, :OpenStaple, :Dot, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:OpenBrace]=>[:FormalParameters, 3]}, {}, {[:CloseParen, :Comma]=>[:FormalParameter, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceMemberDeclRest, 2]}, {[:Semicolon]=>[:FormalParameters, 2]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 6]}, {}, {}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:Dot, :OpenStaple, :CloseParen, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 3]}, {[:CloseBrace]=>[:BlockStatements, 2]}, {}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 2]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 2]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Block, 2]}, {}, {}, {[:CloseParen]=>[:FormalParameterList, 3]}, {[:Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon]=>[:Assignment, 3]}, {[:Semicolon, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:CloseParen]=>[:Expressions, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {[:Dot, :OpenStaple, :CloseParen, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:LocalVariableDeclarationStatement, 3]}, {}, {}, {}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Semicolon]=>[:ForInit, 1]}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Block, 3]}, {[:Identifier, :OpenStaple, :Dot, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :OpenStaple]=>[:Assignment, 3]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:VariableDeclarator, 3]}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Semicolon]=>[:ForInit, 2]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:CloseStaple]=>[:Assignment, 3]}, {[:CloseStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:CloseParen]=>[:Expressions, 3]}, {[:CloseParen, :Comma]=>[:Assignment, 3]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 5]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 1]}, {}, {[:CloseParen]=>[:Assignment, 3]}, {[:CloseParen, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 5]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 2]}, {}, {[:Semicolon]=>[:VariableDeclarator, 5]}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 2]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 2]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Block, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {}, {[:CloseParen]=>[:ForUpdate, 1]}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 7]}, {}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 3]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Block, 3]}, {}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 8]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 5]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 5]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Statement, 9]}, {}, {}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 7]}, {}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 8]}, {}, {[:CloseBrace, :Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :Else]=>[:Statement, 9]}], :transitions=>[{:CompilationUnit=>1, :ImportDeclarations=>2, :Package=>3, :ImportDeclaration=>4, :Import=>5}, {:EndProgram=>6}, {:TypeDeclaration=>7, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {:QualifiedIdentifier=>17, :Identifier=>18}, {:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5}, {:QualifiedImportIdentifier=>20, :Identifier=>21}, {}, {}, {:ClassDeclaration=>22, :InterfaceDeclaration=>23, :Class=>24, :Interface=>25}, {}, {:Modifiers=>26, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {}, {}, {:Semicolon=>27}, {:Dot=>28}, {}, {:Semicolon=>29}, {:Dot=>30}, {}, {}, {:Identifier=>31}, {:Identifier=>32}, {}, {:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5}, {:QualifiedIdentifier=>34, :Identifier=>18}, {}, {:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21}, {:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40}, {:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43}, {:TypeDeclaration=>44, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {:QualifiedIdentifier=>45, :Identifier=>46}, {:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49}, {:ClassBodyDeclarations=>50, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49}, {:InterfaceBodyDeclarations=>62, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:ClassBody=>66, :Implements=>67, :OpenBrace=>40}, {:Dot=>68}, {:ClassBody=>69, :OpenBrace=>40}, {:Comma=>70}, {:Dot=>71}, {:CloseBrace=>72}, {:ClassBodyDeclarations=>73, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>74, :Void=>75, :Identifier=>76, :QualifiedIdentifier=>77, :BasicType=>78, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {:Modifiers=>84, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {}, {}, {}, {}, {}, {:InterfaceBody=>85, :OpenBrace=>43}, {:CloseBrace=>86}, {:InterfaceBodyDeclarations=>87, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>88, :Void=>89, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {:TypeList=>91, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>92, :Identifier=>46}, {}, {:TypeList=>93, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>94, :Identifier=>49}, {}, {}, {:Identifier=>95}, {:Identifier=>96}, {:ConstructorDeclaratorRest=>97, :Dot=>98, :FormalParameters=>99, :OpenParen=>100}, {:OpenStaple=>101}, {:OpenStaple=>102}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:Identifier=>103}, {:Identifier=>104}, {:Dot=>98}, {:ClassBody=>105, :OpenBrace=>40}, {}, {}, {}, {:Semicolon=>106, :Equals=>107, :MethodDeclaratorRest=>108, :FormalParameters=>109, :OpenParen=>110}, {:MethodDeclaratorRest=>111, :FormalParameters=>109, :OpenParen=>110}, {}, {:QualifiedIdentifier=>112, :Identifier=>90}, {:MethodBody=>113, :Block=>114, :OpenBrace=>115}, {:CloseParen=>116, :FormalParameterList=>117, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {:CloseStaple=>120}, {:CloseStaple=>121}, {:InterfaceMemberDeclRest=>122, :FormalParameters=>123, :OpenParen=>124}, {:InterfaceMemberDeclRest=>125, :FormalParameters=>123, :OpenParen=>124}, {}, {}, {:Expression=>126, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:MethodBody=>145, :Semicolon=>146, :Block=>114, :OpenBrace=>115}, {:CloseParen=>147, :FormalParameterList=>148, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {}, {}, {}, {:CloseBrace=>149, :BlockStatements=>150, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:CloseParen=>165}, {:Comma=>166}, {:Identifier=>167}, {}, {}, {}, {:Semicolon=>168}, {:CloseParen=>169, :FormalParameterList=>170, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {:Semicolon=>171}, {}, {:Equals=>172}, {:Infixop=>173, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>190, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>191, :BasicType=>192, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>214, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {:Selectors=>218, :Arguments=>219, :Selector=>215, :OpenParen=>220, :Dot=>216, :OpenStaple=>217}, {}, {}, {}, {:Creator=>221, :BasicType=>222, :QualifiedIdentifier=>223, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>230}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>231}, {}, {:CloseBrace=>232}, {:BlockStatements=>233, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {:VariableDeclarator=>234, :Identifier=>235}, {}, {:OpenParen=>236}, {:OpenParen=>237}, {:OpenParen=>238}, {:Semicolon=>239, :Expression=>240, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Semicolon=>241}, {}, {:OpenStaple=>242, :Selectors=>218, :Arguments=>219, :Selector=>215, :OpenParen=>220, :Dot=>216}, {:CloseBrace=>243, :BlockStatements=>244, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Dot=>245}, {}, {:FormalParameterList=>246, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {}, {}, {:CloseParen=>247}, {}, {:Expression=>248, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:SubExpression=>249, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>250, :OpenStaple=>251}, {:CloseParen=>252, :OpenStaple=>253}, {}, {:Equals=>254}, {}, {}, {}, {}, {}, {:Infixop=>255, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>256, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Expression=>257, :BasicType=>258, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>259, :Selector=>260, :Dot=>261, :OpenStaple=>262}, {:Selectors=>263, :Arguments=>264, :Selector=>260, :OpenParen=>265, :Dot=>261, :OpenStaple=>262}, {}, {:Creator=>266, :BasicType=>267, :QualifiedIdentifier=>268, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>269}, {}, {}, {}, {}, {}, {}, {:Selectors=>270, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {:Identifier=>271}, {:Expression=>272, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:Selectors=>289, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {:CloseParen=>290, :Expressions=>291, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>309, :OpenStaple=>310}, {:ArrayCreator=>311, :Arguments=>312, :OpenStaple=>310, :OpenParen=>220}, {}, {}, {}, {}, {}, {:Dot=>313}, {:QualifiedIdentifier=>314, :Identifier=>139}, {}, {}, {}, {:Semicolon=>315}, {:Equals=>316, :OpenStaple=>317}, {:Expression=>318, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:ForInit=>326, :Expression=>327, :Type=>328, :Assignment=>127, :SubExpression=>128, :QualifiedIdentifier=>162, :BasicType=>78, :Term=>129, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>329, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Semicolon=>330}, {}, {:CloseStaple=>120, :Expression=>272, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:CloseBrace=>331}, {:QualifiedIdentifier=>332, :Identifier=>164}, {}, {}, {}, {}, {:Term=>333, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseStaple=>334}, {:Term=>335, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseStaple=>336}, {:Expression=>337, :Assignment=>193, :SubExpression=>194, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:SubExpression=>338, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:CloseParen=>339, :OpenStaple=>340}, {:CloseParen=>341, :OpenStaple=>342}, {}, {:Selectors=>343, :Selector=>260, :Dot=>261, :OpenStaple=>262}, {:Identifier=>344}, {:Expression=>345, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:Selectors=>346, :Selector=>260, :Dot=>261, :OpenStaple=>262}, {:CloseParen=>347, :Expressions=>348, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>349, :OpenStaple=>350}, {:ArrayCreator=>351, :Arguments=>352, :OpenStaple=>350, :OpenParen=>265}, {:QualifiedIdentifier=>353, :Identifier=>208}, {}, {:Arguments=>354, :OpenParen=>220}, {:CloseStaple=>355}, {}, {:Equals=>356}, {:Infixop=>357, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>358, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {:Expression=>359, :BasicType=>360, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>361, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {:Selectors=>365, :Arguments=>366, :Selector=>362, :OpenParen=>367, :Dot=>363, :OpenStaple=>364}, {}, {:Creator=>368, :BasicType=>369, :QualifiedIdentifier=>370, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>371}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>372}, {:Comma=>373}, {}, {:Equals=>374}, {:Infixop=>375, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>376, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:Expression=>377, :BasicType=>378, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>379, :Selector=>380, :Dot=>381, :OpenStaple=>382}, {:Selectors=>383, :Arguments=>384, :Selector=>380, :OpenParen=>385, :Dot=>381, :OpenStaple=>382}, {}, {:Creator=>386, :BasicType=>387, :QualifiedIdentifier=>388, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>389}, {}, {}, {}, {}, {}, {}, {:CloseStaple=>390, :Expression=>391, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {}, {:QualifiedIdentifier=>392, :Identifier=>229}, {}, {}, {:Expression=>393, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseStaple=>394}, {:CloseParen=>395}, {}, {:Equals=>396}, {:Infixop=>397, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>398, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Expression=>399, :BasicType=>400, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>401, :Selector=>402, :Dot=>261, :OpenStaple=>262}, {:Selectors=>403, :Arguments=>404, :Selector=>402, :OpenParen=>265, :Dot=>261, :OpenStaple=>262}, {:Semicolon=>405}, {}, {:VariableDeclarator=>406, :Identifier=>235}, {:CloseParen=>407}, {}, {}, {}, {}, {:CloseParen=>408}, {}, {:CloseParen=>409}, {}, {}, {:Term=>410, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>411}, {:Term=>412, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>413}, {}, {:Arguments=>414, :OpenParen=>265}, {:CloseStaple=>415}, {}, {}, {:CloseParen=>416}, {}, {:CloseStaple=>417, :Expression=>418, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {}, {}, {}, {}, {:Expression=>419, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {:SubExpression=>420, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:CloseParen=>421, :OpenStaple=>422}, {:CloseParen=>423, :OpenStaple=>424}, {}, {:Selectors=>425, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {:Identifier=>426}, {:Expression=>427, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:Selectors=>428, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {:CloseParen=>429, :Expressions=>430, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>431, :OpenStaple=>432}, {:ArrayCreator=>433, :Arguments=>434, :OpenStaple=>432, :OpenParen=>367}, {:QualifiedIdentifier=>435, :Identifier=>283}, {}, {:Expressions=>436, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:Expression=>437, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:SubExpression=>438, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:CloseParen=>439, :OpenStaple=>440}, {:CloseParen=>441, :OpenStaple=>442}, {}, {:Selectors=>443, :Selector=>380, :Dot=>381, :OpenStaple=>382}, {:Identifier=>444}, {:Expression=>445, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:Selectors=>446, :Selector=>380, :Dot=>381, :OpenStaple=>382}, {:CloseParen=>447, :Expressions=>448, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>449, :OpenStaple=>450}, {:ArrayCreator=>451, :Arguments=>452, :OpenStaple=>450, :OpenParen=>385}, {:QualifiedIdentifier=>453, :Identifier=>303}, {}, {:CloseStaple=>454}, {}, {}, {:Equals=>455}, {:Statement=>456, :Block=>457, :If=>458, :For=>459, :While=>460, :Return=>461, :Expression=>462, :Semicolon=>463, :OpenBrace=>464, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>465, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:SubExpression=>466, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:CloseParen=>467, :OpenStaple=>468}, {:CloseParen=>469, :OpenStaple=>470}, {}, {:Selectors=>471, :Selector=>402, :Dot=>261, :OpenStaple=>262}, {}, {:Selectors=>472, :Selector=>402, :Dot=>261, :OpenStaple=>262}, {:Semicolon=>473, :Expression=>474, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:Statement=>475, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Term=>476, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Term=>477, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:CloseParen=>478}, {}, {:CloseParen=>479}, {}, {}, {}, {}, {:CloseStaple=>480}, {}, {}, {:Term=>481, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {:CloseStaple=>482}, {:Term=>483, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {:CloseStaple=>484}, {}, {:Arguments=>485, :OpenParen=>367}, {:CloseStaple=>486}, {}, {}, {:CloseParen=>487}, {}, {:CloseStaple=>488, :Expression=>489, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {}, {}, {}, {}, {}, {:Term=>490, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:CloseStaple=>491}, {:Term=>492, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:CloseStaple=>493}, {}, {:Arguments=>494, :OpenParen=>385}, {:CloseStaple=>495}, {}, {}, {:CloseParen=>496}, {}, {:CloseStaple=>497, :Expression=>498, :Assignment=>273, :SubExpression=>274, :Term=>275, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {}, {}, {}, {:Expression=>499, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Else=>500}, {}, {:OpenParen=>501}, {:OpenParen=>502}, {:OpenParen=>503}, {:Semicolon=>504, :Expression=>505, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Semicolon=>506}, {}, {:CloseBrace=>507, :BlockStatements=>508, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :QualifiedIdentifier=>162, :BasicType=>78, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {:Term=>509, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>510}, {:Term=>511, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>512}, {}, {}, {:ForUpdate=>513, :Expression=>514, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Semicolon=>515}, {}, {}, {}, {:Term=>516, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Term=>517, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {}, {:CloseParen=>518}, {}, {:CloseParen=>519}, {}, {}, {}, {}, {:CloseStaple=>520}, {}, {:CloseParen=>521}, {}, {:CloseParen=>522}, {}, {}, {}, {}, {:CloseStaple=>523}, {}, {:Statement=>524, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>525, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:ForInit=>526, :Expression=>327, :Type=>328, :Assignment=>127, :SubExpression=>128, :QualifiedIdentifier=>162, :BasicType=>78, :Term=>129, :Identifier=>164, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>527, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Semicolon=>528}, {}, {}, {:CloseBrace=>529}, {}, {:CloseParen=>530}, {}, {:CloseParen=>531}, {:CloseParen=>532}, {}, {:ForUpdate=>533, :Expression=>514, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {}, {:Term=>534, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {:Term=>535, :TermModifier=>276, :OpenParen=>277, :Primary=>278, :QualifiedIdentifier=>279, :Not=>134, :Minus=>135, :This=>280, :New=>281, :Literal=>282, :Identifier=>283, :IntegerLiteral=>284, :CharacterLiteral=>285, :StringLiteral=>286, :BooleanLiteral=>287, :NullLiteral=>288}, {}, {:Term=>536, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:Term=>537, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>134, :Minus=>135, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {}, {:CloseParen=>538}, {:Semicolon=>539}, {:CloseParen=>540}, {}, {}, {:Term=>541, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Term=>542, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Statement=>543, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseParen=>544}, {}, {}, {}, {}, {:Statement=>545, :Block=>457, :If=>458, :For=>459, :While=>460, :Return=>461, :Expression=>462, :Semicolon=>463, :OpenBrace=>464, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Semicolon=>546, :Expression=>547, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Statement=>548, :Block=>457, :If=>458, :For=>459, :While=>460, :Return=>461, :Expression=>462, :Semicolon=>463, :OpenBrace=>464, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {}, {:Statement=>549, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Else=>550}, {:ForUpdate=>551, :Expression=>514, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Semicolon=>552}, {}, {}, {:Statement=>553, :Block=>457, :If=>458, :For=>459, :While=>460, :Return=>461, :Expression=>462, :Semicolon=>463, :OpenBrace=>464, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseParen=>554}, {:ForUpdate=>555, :Expression=>514, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>134, :Minus=>135, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Statement=>556, :Block=>457, :If=>458, :For=>459, :While=>460, :Return=>461, :Expression=>462, :Semicolon=>463, :OpenBrace=>464, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseParen=>557}, {}, {:Statement=>558, :Block=>457, :If=>458, :For=>459, :While=>460, :Return=>461, :Expression=>462, :Semicolon=>463, :OpenBrace=>464, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}]}
