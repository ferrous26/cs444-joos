PARSER_RULES = {:reductions=>[{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:EndProgram]=>[:CompilationUnit, 1], [:Class, :Interface]=>[:Modifiers, 0]}, {}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[]=>[:AugmentedCompilationUnit, 2]}, {[:EndProgram]=>[:CompilationUnit, 2]}, {}, {[:EndProgram]=>[:TypeDeclaration, 1]}, {[:Class, :Interface]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {}, {[:Semicolon]=>[:QualifiedIdentifier, 1]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 2]}, {}, {[:Semicolon]=>[:QualifiedImportIdentifier, 1]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {}, {}, {[:Class, :Interface]=>[:Modifiers, 2]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:Import, :EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclaration, 3]}, {}, {}, {}, {[:EndProgram]=>[:CompilationUnit, 4], [:Class, :Interface]=>[:Modifiers, 0]}, {[:Semicolon]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:EndProgram]=>[:ClassDeclaration, 3]}, {}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:InterfaceDeclaration, 3]}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:CompilationUnit, 5]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace]=>[:TypeList, 1]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 1]}, {}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 1]}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassBody, 3]}, {[:CloseBrace]=>[:ClassBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 2]}, {[:EndProgram]=>[:InterfaceDeclaration, 5]}, {[:EndProgram]=>[:InterfaceBody, 3]}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]}, {[:OpenBrace]=>[:TypeList, 3]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 3]}, {}, {}, {}, {}, {}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 7]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ConstructorDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodBody, 1]}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:OpenBrace]=>[:FormalParameters, 2]}, {}, {[:CloseParen]=>[:FormalParameterList, 1]}, {}, {[:Identifier]=>[:Type, 3]}, {[:Identifier]=>[:Type, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:Semicolon, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]}, {}, {}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:BlockStatement, 1]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:BlockStatement, 1]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 1]}, {[:Identifier]=>[:Type, 1], [:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:Identifier, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:OpenBrace]=>[:FormalParameters, 3]}, {}, {[:CloseParen, :Comma]=>[:FormalParameter, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceMemberDeclRest, 2]}, {[:Semicolon]=>[:FormalParameters, 2]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 6]}, {}, {}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 3]}, {[:CloseBrace]=>[:BlockStatements, 2]}, {}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 2]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 2]}, {}, {}, {}, {[:CloseParen]=>[:FormalParameterList, 3]}, {[:Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon]=>[:Assignment, 3]}, {[:Semicolon, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:CloseStaple, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:CloseParen]=>[:Expressions, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Semicolon, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]}, {}, {}, {}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {}, {[:Semicolon]=>[:ForInit, 1]}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Block, 3]}, {[:Identifier, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :OpenStaple]=>[:Assignment, 3]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:VariableDeclarator, 3]}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Semicolon]=>[:ForInit, 2]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:CloseStaple]=>[:Assignment, 3]}, {[:CloseStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:CloseStaple, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {[:CloseParen]=>[:Expressions, 3]}, {[:CloseParen, :Comma]=>[:Assignment, 3]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 5]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 1]}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:CloseParen]=>[:Assignment, 3]}, {[:CloseParen, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 5]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 2]}, {}, {[:Semicolon]=>[:VariableDeclarator, 5]}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 2]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:CloseParen]=>[:ForUpdate, 1]}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 7]}, {}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Block, 3]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 8]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 5]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 5]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 9]}, {}, {}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 7]}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 8]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 9]}], :transitions=>[{:CompilationUnit=>1, :ImportDeclarations=>2, :Package=>3, :ImportDeclaration=>4, :Import=>5}, {:EndProgram=>6}, {:TypeDeclaration=>7, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {:QualifiedIdentifier=>17, :Identifier=>18}, {:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5}, {:QualifiedImportIdentifier=>20, :Identifier=>21}, {}, {}, {:ClassDeclaration=>22, :InterfaceDeclaration=>23, :Class=>24, :Interface=>25}, {}, {:Modifiers=>26, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {}, {}, {:Semicolon=>27}, {:Dot=>28}, {}, {:Semicolon=>29}, {:Dot=>30}, {}, {}, {:Identifier=>31}, {:Identifier=>32}, {}, {:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5}, {:QualifiedIdentifier=>34, :Identifier=>18}, {}, {:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21}, {:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40}, {:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43}, {:TypeDeclaration=>44, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {:QualifiedIdentifier=>45, :Identifier=>46}, {:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49}, {:ClassBodyDeclarations=>50, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49}, {:InterfaceBodyDeclarations=>62, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:ClassBody=>66, :Implements=>67, :OpenBrace=>40}, {:Dot=>68}, {:ClassBody=>69, :OpenBrace=>40}, {:Comma=>70}, {:Dot=>71}, {:CloseBrace=>72}, {:ClassBodyDeclarations=>73, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>74, :Void=>75, :Identifier=>76, :QualifiedIdentifier=>77, :BasicType=>78, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {:Modifiers=>84, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {}, {}, {}, {}, {}, {:InterfaceBody=>85, :OpenBrace=>43}, {:CloseBrace=>86}, {:InterfaceBodyDeclarations=>87, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>88, :Void=>89, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {:TypeList=>91, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>92, :Identifier=>46}, {}, {:TypeList=>93, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>94, :Identifier=>49}, {}, {}, {:Identifier=>95}, {:Identifier=>96}, {:ConstructorDeclaratorRest=>97, :Dot=>98, :FormalParameters=>99, :OpenParen=>100}, {:OpenStaple=>101}, {:OpenStaple=>102}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:Identifier=>103}, {:Identifier=>104}, {:Dot=>98}, {:ClassBody=>105, :OpenBrace=>40}, {}, {}, {}, {:Semicolon=>106, :Equals=>107, :MethodDeclaratorRest=>108, :FormalParameters=>109, :OpenParen=>110}, {:MethodDeclaratorRest=>111, :FormalParameters=>109, :OpenParen=>110}, {}, {:QualifiedIdentifier=>112, :Identifier=>90}, {:MethodBody=>113, :Block=>114, :OpenBrace=>115}, {:CloseParen=>116, :FormalParameterList=>117, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {:CloseStaple=>120}, {:CloseStaple=>121}, {:InterfaceMemberDeclRest=>122, :FormalParameters=>123, :OpenParen=>124}, {:InterfaceMemberDeclRest=>125, :FormalParameters=>123, :OpenParen=>124}, {}, {}, {:Expression=>126, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:MethodBody=>145, :Semicolon=>146, :Block=>114, :OpenBrace=>115}, {:CloseParen=>147, :FormalParameterList=>148, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {}, {}, {}, {:BlockStatements=>149, :BlockStatement=>150, :LocalVariableDeclarationStatement=>151, :Statement=>152, :Type=>153, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :QualifiedIdentifier=>161, :BasicType=>78, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Identifier=>163, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:CloseParen=>164}, {:Comma=>165}, {:Identifier=>166}, {}, {}, {}, {:Semicolon=>167}, {:CloseParen=>168, :FormalParameterList=>169, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {:Semicolon=>170}, {}, {:Equals=>171}, {:Infixop=>172, :LazyOr=>173, :LazyAnd=>174, :EagerOr=>175, :EagerAnd=>176, :Equality=>177, :NotEqual=>178, :LessThan=>179, :GreaterThan=>180, :LessOrEqual=>181, :GreaterOrEqual=>182, :Plus=>183, :Minus=>184, :Multiply=>185, :Divide=>186, :Modulo=>187, :Instanceof=>188}, {:Term=>189, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>190, :BasicType=>191, :Assignment=>192, :SubExpression=>193, :Byte=>194, :Char=>195, :Int=>196, :Boolean=>197, :Short=>198, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Selectors=>213, :Selector=>214, :Dot=>215, :OpenStaple=>216}, {:OpenStaple=>217, :Arguments=>218, :OpenParen=>219}, {}, {}, {}, {:Creator=>220, :BasicType=>221, :QualifiedIdentifier=>222, :Byte=>223, :Char=>224, :Int=>225, :Boolean=>226, :Short=>227, :Identifier=>228}, {}, {:Dot=>229}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>230}, {:CloseBrace=>231}, {:BlockStatements=>232, :BlockStatement=>150, :LocalVariableDeclarationStatement=>151, :Statement=>152, :Type=>153, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :QualifiedIdentifier=>161, :BasicType=>78, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Identifier=>163, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {:VariableDeclarator=>233, :Identifier=>234}, {}, {:OpenParen=>235}, {:OpenParen=>236}, {:OpenParen=>237}, {:Semicolon=>238, :Expression=>239, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Semicolon=>240}, {}, {:OpenStaple=>241, :Arguments=>218, :OpenParen=>219}, {:BlockStatements=>242, :BlockStatement=>150, :LocalVariableDeclarationStatement=>151, :Statement=>152, :Type=>153, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :QualifiedIdentifier=>161, :BasicType=>78, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Identifier=>163, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Dot=>243}, {}, {:FormalParameterList=>244, :FormalParameter=>118, :Type=>119, :QualifiedIdentifier=>77, :BasicType=>78, :Identifier=>90, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83}, {}, {}, {}, {:CloseParen=>245}, {}, {:Expression=>246, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:SubExpression=>247, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>248, :OpenStaple=>249}, {:CloseParen=>250, :OpenStaple=>251}, {}, {:Equals=>252}, {}, {}, {}, {}, {}, {:Infixop=>253, :LazyOr=>173, :LazyAnd=>174, :EagerOr=>175, :EagerAnd=>176, :Equality=>177, :NotEqual=>178, :LessThan=>179, :GreaterThan=>180, :LessOrEqual=>181, :GreaterOrEqual=>182, :Plus=>183, :Minus=>184, :Multiply=>185, :Divide=>186, :Modulo=>187, :Instanceof=>188}, {:Term=>254, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Expression=>255, :BasicType=>256, :Assignment=>192, :SubExpression=>193, :Byte=>194, :Char=>195, :Int=>196, :Boolean=>197, :Short=>198, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Selectors=>257, :Selector=>258, :Dot=>259, :OpenStaple=>260}, {:OpenStaple=>261, :Arguments=>262, :OpenParen=>263}, {}, {:Creator=>264, :BasicType=>265, :QualifiedIdentifier=>266, :Byte=>223, :Char=>224, :Int=>225, :Boolean=>226, :Short=>227, :Identifier=>228}, {}, {:Dot=>267}, {}, {}, {}, {}, {}, {}, {:Selectors=>268, :Selector=>214, :Dot=>215, :OpenStaple=>216}, {:Identifier=>269}, {:Expression=>270, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Expression=>287, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Selectors=>288, :Selector=>214, :Dot=>215, :OpenStaple=>216}, {:CloseParen=>289, :Expressions=>290, :Expression=>291, :Assignment=>292, :SubExpression=>293, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {}, {:ArrayCreator=>308, :OpenStaple=>309}, {:ArrayCreator=>310, :Arguments=>311, :OpenStaple=>309, :OpenParen=>219}, {}, {}, {}, {}, {}, {:Dot=>312}, {:QualifiedIdentifier=>313, :Identifier=>139}, {}, {}, {}, {:Semicolon=>314}, {:Equals=>315, :OpenStaple=>316}, {:Expression=>317, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:ForInit=>325, :Expression=>326, :Type=>327, :Assignment=>127, :SubExpression=>128, :QualifiedIdentifier=>161, :BasicType=>78, :Term=>129, :Identifier=>163, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>328, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {:Semicolon=>329}, {}, {:CloseStaple=>120, :Expression=>287, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:CloseBrace=>330}, {:QualifiedIdentifier=>331, :Identifier=>163}, {}, {}, {}, {}, {:Term=>332, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseStaple=>333}, {:Term=>334, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseStaple=>335}, {:Expression=>336, :Assignment=>192, :SubExpression=>193, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:SubExpression=>337, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {:CloseParen=>338, :OpenStaple=>339}, {:CloseParen=>340, :OpenStaple=>341}, {}, {:Selectors=>342, :Selector=>258, :Dot=>259, :OpenStaple=>260}, {:Identifier=>343}, {:Expression=>344, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Expression=>345, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Selectors=>346, :Selector=>258, :Dot=>259, :OpenStaple=>260}, {:CloseParen=>347, :Expressions=>348, :Expression=>291, :Assignment=>292, :SubExpression=>293, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {}, {:ArrayCreator=>349, :OpenStaple=>350}, {:ArrayCreator=>351, :Arguments=>352, :OpenStaple=>350, :OpenParen=>263}, {:QualifiedIdentifier=>353, :Identifier=>207}, {}, {:Arguments=>354, :OpenParen=>219}, {:CloseStaple=>355}, {}, {:Equals=>356}, {:Infixop=>357, :LazyOr=>173, :LazyAnd=>174, :EagerOr=>175, :EagerAnd=>176, :Equality=>177, :NotEqual=>178, :LessThan=>179, :GreaterThan=>180, :LessOrEqual=>181, :GreaterOrEqual=>182, :Plus=>183, :Minus=>184, :Multiply=>185, :Divide=>186, :Modulo=>187, :Instanceof=>188}, {:Term=>358, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Expression=>359, :BasicType=>360, :Assignment=>192, :SubExpression=>193, :Byte=>194, :Char=>195, :Int=>196, :Boolean=>197, :Short=>198, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Selectors=>361, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {:OpenStaple=>365, :Arguments=>366, :OpenParen=>367}, {}, {:Creator=>368, :BasicType=>369, :QualifiedIdentifier=>370, :Byte=>223, :Char=>224, :Int=>225, :Boolean=>226, :Short=>227, :Identifier=>228}, {}, {:Dot=>371}, {}, {}, {}, {}, {}, {:CloseStaple=>372}, {}, {}, {:CloseParen=>373}, {:Comma=>374}, {}, {:Equals=>375}, {:Infixop=>376, :LazyOr=>173, :LazyAnd=>174, :EagerOr=>175, :EagerAnd=>176, :Equality=>177, :NotEqual=>178, :LessThan=>179, :GreaterThan=>180, :LessOrEqual=>181, :GreaterOrEqual=>182, :Plus=>183, :Minus=>184, :Multiply=>185, :Divide=>186, :Modulo=>187, :Instanceof=>188}, {:Term=>377, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {:Expression=>378, :BasicType=>379, :Assignment=>192, :SubExpression=>193, :Byte=>194, :Char=>195, :Int=>196, :Boolean=>197, :Short=>198, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Selectors=>380, :Selector=>381, :Dot=>382, :OpenStaple=>383}, {:OpenStaple=>384, :Arguments=>385, :OpenParen=>386}, {}, {:Creator=>387, :BasicType=>388, :QualifiedIdentifier=>389, :Byte=>223, :Char=>224, :Int=>225, :Boolean=>226, :Short=>227, :Identifier=>228}, {}, {:Dot=>390}, {}, {}, {}, {}, {}, {}, {:CloseStaple=>391, :Expression=>392, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {}, {}, {:QualifiedIdentifier=>393, :Identifier=>228}, {}, {}, {:Expression=>394, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseStaple=>395}, {:CloseParen=>396}, {}, {:Equals=>397}, {:Infixop=>398, :LazyOr=>173, :LazyAnd=>174, :EagerOr=>175, :EagerAnd=>176, :Equality=>177, :NotEqual=>178, :LessThan=>179, :GreaterThan=>180, :LessOrEqual=>181, :GreaterOrEqual=>182, :Plus=>183, :Minus=>184, :Multiply=>185, :Divide=>186, :Modulo=>187, :Instanceof=>188}, {:Term=>399, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Expression=>400, :BasicType=>401, :Assignment=>192, :SubExpression=>193, :Byte=>194, :Char=>195, :Int=>196, :Boolean=>197, :Short=>198, :Term=>199, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Selectors=>402, :Selector=>403, :Dot=>259, :OpenStaple=>260}, {:OpenStaple=>404, :Arguments=>405, :OpenParen=>263}, {:Semicolon=>406}, {}, {:VariableDeclarator=>407, :Identifier=>234}, {:CloseParen=>408}, {}, {}, {}, {}, {:CloseParen=>409}, {}, {:CloseParen=>410}, {}, {}, {:Term=>411, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:CloseStaple=>412}, {:Term=>413, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:CloseStaple=>414}, {}, {:Arguments=>415, :OpenParen=>263}, {:CloseStaple=>416}, {:CloseStaple=>417}, {}, {}, {:CloseParen=>418}, {}, {:CloseStaple=>419, :Expression=>420, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {}, {}, {}, {}, {}, {:Expression=>421, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:SubExpression=>422, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {}, {:CloseParen=>423, :OpenStaple=>424}, {:CloseParen=>425, :OpenStaple=>426}, {}, {:Selectors=>427, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {:Identifier=>428}, {:Expression=>429, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Expression=>430, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Selectors=>431, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {:CloseParen=>432, :Expressions=>433, :Expression=>291, :Assignment=>292, :SubExpression=>293, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {}, {:ArrayCreator=>434, :OpenStaple=>435}, {:ArrayCreator=>436, :Arguments=>437, :OpenStaple=>435, :OpenParen=>367}, {:QualifiedIdentifier=>438, :Identifier=>281}, {:Selectors=>439, :Selector=>214, :Dot=>215, :OpenStaple=>216}, {}, {:Expressions=>440, :Expression=>291, :Assignment=>292, :SubExpression=>293, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {:Expression=>441, :Assignment=>292, :SubExpression=>293, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {:SubExpression=>442, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {}, {:CloseParen=>443, :OpenStaple=>444}, {:CloseParen=>445, :OpenStaple=>446}, {}, {:Selectors=>447, :Selector=>381, :Dot=>382, :OpenStaple=>383}, {:Identifier=>448}, {:Expression=>449, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Expression=>450, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Selectors=>451, :Selector=>381, :Dot=>382, :OpenStaple=>383}, {:CloseParen=>452, :Expressions=>453, :Expression=>291, :Assignment=>292, :SubExpression=>293, :Term=>294, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {}, {:ArrayCreator=>454, :OpenStaple=>455}, {:ArrayCreator=>456, :Arguments=>457, :OpenStaple=>455, :OpenParen=>386}, {:QualifiedIdentifier=>458, :Identifier=>302}, {}, {:CloseStaple=>459}, {}, {}, {:Equals=>460}, {:Statement=>461, :Block=>462, :If=>463, :For=>464, :While=>465, :Return=>466, :Expression=>467, :Semicolon=>468, :OpenBrace=>469, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>470, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:SubExpression=>471, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {:CloseParen=>472, :OpenStaple=>473}, {:CloseParen=>474, :OpenStaple=>475}, {}, {:Selectors=>476, :Selector=>403, :Dot=>259, :OpenStaple=>260}, {:Expression=>477, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Selectors=>478, :Selector=>403, :Dot=>259, :OpenStaple=>260}, {:Semicolon=>479, :Expression=>480, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:Statement=>481, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Term=>482, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Term=>483, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {:CloseParen=>484}, {}, {:CloseParen=>485}, {}, {}, {:Selectors=>486, :Selector=>258, :Dot=>259, :OpenStaple=>260}, {}, {}, {:CloseStaple=>487}, {}, {}, {:Term=>488, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:CloseStaple=>489}, {:Term=>490, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:CloseStaple=>491}, {}, {:Arguments=>492, :OpenParen=>367}, {:CloseStaple=>493}, {:CloseStaple=>494}, {}, {}, {:CloseParen=>495}, {}, {:CloseStaple=>496, :Expression=>497, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {}, {}, {}, {}, {}, {}, {}, {:Term=>498, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {:CloseStaple=>499}, {:Term=>500, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {:CloseStaple=>501}, {}, {:Arguments=>502, :OpenParen=>386}, {:CloseStaple=>503}, {:CloseStaple=>504}, {}, {}, {:CloseParen=>505}, {}, {:CloseStaple=>506, :Expression=>507, :Assignment=>271, :SubExpression=>272, :Term=>273, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {}, {}, {}, {}, {:Expression=>508, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Else=>509}, {}, {:OpenParen=>510}, {:OpenParen=>511}, {:OpenParen=>512}, {:Semicolon=>513, :Expression=>514, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Semicolon=>515}, {}, {:BlockStatements=>516, :BlockStatement=>150, :LocalVariableDeclarationStatement=>151, :Statement=>152, :Type=>153, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :QualifiedIdentifier=>161, :BasicType=>78, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Identifier=>163, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {:Term=>517, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:CloseStaple=>518}, {:Term=>519, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:CloseStaple=>520}, {}, {:CloseStaple=>521}, {}, {:ForUpdate=>522, :Expression=>523, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Semicolon=>524}, {}, {}, {}, {:Term=>525, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Term=>526, :TermModifier=>200, :OpenParen=>201, :Primary=>202, :QualifiedIdentifier=>203, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {}, {}, {:CloseParen=>527}, {}, {:CloseParen=>528}, {}, {}, {:Selectors=>529, :Selector=>362, :Dot=>363, :OpenStaple=>364}, {}, {}, {:CloseStaple=>530}, {}, {:CloseParen=>531}, {}, {:CloseParen=>532}, {}, {}, {:Selectors=>533, :Selector=>381, :Dot=>382, :OpenStaple=>383}, {}, {}, {:CloseStaple=>534}, {}, {:Statement=>535, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>536, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:ForInit=>537, :Expression=>326, :Type=>327, :Assignment=>127, :SubExpression=>128, :QualifiedIdentifier=>161, :BasicType=>78, :Term=>129, :Identifier=>163, :Byte=>79, :Char=>80, :Int=>81, :Boolean=>82, :Short=>83, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Expression=>538, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {:Semicolon=>539}, {}, {:CloseBrace=>540}, {}, {:CloseParen=>541}, {}, {:CloseParen=>542}, {:Selectors=>543, :Selector=>403, :Dot=>259, :OpenStaple=>260}, {:CloseParen=>544}, {}, {:ForUpdate=>545, :Expression=>523, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {}, {:Term=>546, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {:Term=>547, :TermModifier=>274, :OpenParen=>275, :Primary=>276, :QualifiedIdentifier=>277, :Not=>134, :Minus=>135, :This=>278, :New=>279, :Literal=>280, :Identifier=>281, :IntegerLiteral=>282, :CharacterLiteral=>283, :StringLiteral=>284, :BooleanLiteral=>285, :NullLiteral=>286}, {}, {}, {:Term=>548, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {:Term=>549, :TermModifier=>295, :OpenParen=>296, :Primary=>297, :QualifiedIdentifier=>298, :Not=>134, :Minus=>135, :This=>299, :New=>300, :Literal=>301, :Identifier=>302, :IntegerLiteral=>303, :CharacterLiteral=>304, :StringLiteral=>305, :BooleanLiteral=>306, :NullLiteral=>307}, {}, {}, {}, {:CloseParen=>550}, {:Semicolon=>551}, {:CloseParen=>552}, {}, {}, {:Term=>553, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Term=>554, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {:Statement=>555, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseParen=>556}, {}, {}, {}, {}, {:Statement=>557, :Block=>462, :If=>463, :For=>464, :While=>465, :Return=>466, :Expression=>467, :Semicolon=>468, :OpenBrace=>469, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Semicolon=>558, :Expression=>559, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Statement=>560, :Block=>462, :If=>463, :For=>464, :While=>465, :Return=>466, :Expression=>467, :Semicolon=>468, :OpenBrace=>469, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}, {}, {}, {:Statement=>561, :Block=>154, :If=>155, :For=>156, :While=>157, :Return=>158, :Expression=>159, :Semicolon=>160, :OpenBrace=>162, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:Else=>562}, {:ForUpdate=>563, :Expression=>523, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {:Semicolon=>564}, {}, {}, {:Statement=>565, :Block=>462, :If=>463, :For=>464, :While=>465, :Return=>466, :Expression=>467, :Semicolon=>468, :OpenBrace=>469, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseParen=>566}, {:ForUpdate=>567, :Expression=>523, :Assignment=>318, :SubExpression=>319, :Term=>320, :TermModifier=>321, :OpenParen=>322, :Primary=>323, :QualifiedIdentifier=>324, :Not=>134, :Minus=>135, :This=>204, :New=>205, :Literal=>206, :Identifier=>207, :IntegerLiteral=>208, :CharacterLiteral=>209, :StringLiteral=>210, :BooleanLiteral=>211, :NullLiteral=>212}, {}, {:Statement=>568, :Block=>462, :If=>463, :For=>464, :While=>465, :Return=>466, :Expression=>467, :Semicolon=>468, :OpenBrace=>469, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {:CloseParen=>569}, {}, {:Statement=>570, :Block=>462, :If=>463, :For=>464, :While=>465, :Return=>466, :Expression=>467, :Semicolon=>468, :OpenBrace=>469, :Assignment=>127, :SubExpression=>128, :Term=>129, :TermModifier=>130, :OpenParen=>131, :Primary=>132, :QualifiedIdentifier=>133, :Not=>134, :Minus=>135, :This=>136, :New=>137, :Literal=>138, :Identifier=>139, :IntegerLiteral=>140, :CharacterLiteral=>141, :StringLiteral=>142, :BooleanLiteral=>143, :NullLiteral=>144}, {}]}
