PARSER_RULES = {:reductions=>[{[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:EndProgram]=>[:CompilationUnit, 1], [:Class, :Interface]=>[:Modifiers, 0]}, {}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[]=>[:AugmentedCompilationUnit, 2]}, {[:EndProgram]=>[:CompilationUnit, 2]}, {}, {[:EndProgram]=>[:TypeDeclaration, 1]}, {[:Class, :Interface]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:Modifier, 1]}, {}, {[:Semicolon]=>[:QualifiedIdentifier, 1]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 2]}, {}, {[:Semicolon]=>[:QualifiedImportIdentifier, 1]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {[:EndProgram]=>[:TypeDeclaration, 2]}, {}, {}, {[:Class, :Interface]=>[:Modifiers, 2]}, {[:EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclarations, 0]}, {}, {[:Import, :EndProgram, :Semicolon, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Class, :Interface]=>[:ImportDeclaration, 3]}, {}, {}, {}, {[:EndProgram]=>[:CompilationUnit, 4], [:Class, :Interface]=>[:Modifiers, 0]}, {[:Semicolon]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:Semicolon]=>[:QualifiedImportIdentifier, 3]}, {[:EndProgram]=>[:ClassDeclaration, 3]}, {}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:InterfaceDeclaration, 3]}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:EndProgram]=>[:CompilationUnit, 5]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace]=>[:TypeList, 1]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 1]}, {}, {[:CloseBrace]=>[:ClassBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 1]}, {}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {[:Public, :Protected, :Static, :Abstract, :Final, :Native, :Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifier, 1]}, {}, {}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 0], [:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 0]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 1]}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 5]}, {}, {}, {[:EndProgram]=>[:ClassBody, 3]}, {[:CloseBrace]=>[:ClassBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier]=>[:Type, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :OpenStaple]=>[:BasicType, 1]}, {[:Identifier, :Byte, :Char, :Int, :Boolean, :Short, :Void]=>[:Modifiers, 2]}, {[:EndProgram]=>[:InterfaceDeclaration, 5]}, {[:EndProgram]=>[:InterfaceBody, 3]}, {[:CloseBrace]=>[:InterfaceBodyDeclarations, 2]}, {}, {}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Implements]=>[:QualifiedIdentifier, 3]}, {[:OpenBrace]=>[:TypeList, 3]}, {[:OpenBrace, :Comma]=>[:QualifiedIdentifier, 3]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 3]}, {}, {}, {}, {}, {}, {}, {}, {[:EndProgram]=>[:ClassDeclaration, 7]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 4]}, {[:Identifier, :OpenStaple]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ConstructorDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodBody, 1]}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:OpenBrace]=>[:FormalParameters, 2]}, {}, {[:CloseParen]=>[:FormalParameterList, 1]}, {}, {[:Identifier]=>[:ArrayType, 3]}, {[:Identifier]=>[:ArrayType, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceBodyDeclaration, 4]}, {}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon]=>[:Expression, 1]}, {[:Semicolon, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:TermModifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:Semicolon, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:MethodDeclaratorRest, 2]}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 2]}, {}, {}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:BlockStatement, 1]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:BlockStatement, 1]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 1]}, {[:Identifier]=>[:Type, 1], [:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:Identifier, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:OpenBrace]=>[:FormalParameters, 3]}, {}, {[:CloseParen, :Comma]=>[:FormalParameter, 2]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:InterfaceMemberDeclRest, 2]}, {[:Semicolon]=>[:FormalParameters, 2]}, {}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:ClassBodyDeclaration, 6]}, {}, {}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:OpenParen, :Identifier, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral]=>[:Infixop, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:Expression, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple]=>[:BasicType, 1]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple]=>[:BasicType, 1]}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 1]}, {}, {[:OpenBrace, :Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon, :Identifier, :Void, :Public, :Protected, :Static, :Abstract, :Final, :Native, :Byte, :Char, :Int, :Boolean, :Short, :CloseBrace]=>[:Block, 3]}, {[:CloseBrace]=>[:BlockStatements, 2]}, {}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 2]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 2]}, {}, {}, {}, {[:CloseParen]=>[:FormalParameterList, 3]}, {[:Semicolon]=>[:FormalParameters, 3]}, {[:Semicolon]=>[:Assignment, 3]}, {[:Semicolon, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple]=>[:Expression, 1]}, {[:CloseStaple, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 1]}, {[:CloseStaple, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Literal, 1]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:CloseParen]=>[:Expressions, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma]=>[:Expression, 1]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 1]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Literal, 1]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Semicolon, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:LocalVariableDeclarationStatement, 3]}, {}, {}, {}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen]=>[:Expression, 1]}, {[:CloseParen, :Equals]=>[:SubExpression, 1]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 1]}, {}, {[:Semicolon]=>[:ForInit, 1]}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Block, 3]}, {[:Identifier, :OpenStaple, :Semicolon, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :OpenStaple]=>[:Assignment, 3]}, {[:CloseParen, :OpenStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 2]}, {}, {}, {}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:OpenStaple, :OpenParen]=>[:QualifiedIdentifier, 3]}, {[:Semicolon]=>[:VariableDeclarator, 3]}, {}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 2]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:Semicolon]=>[:ForInit, 2]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:CloseStaple]=>[:Assignment, 3]}, {[:CloseStaple, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Creator, 2]}, {[:CloseStaple, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {[:CloseParen]=>[:Expressions, 3]}, {[:CloseParen, :Comma]=>[:Assignment, 3]}, {[:CloseParen, :Comma, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 2]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Creator, 2]}, {[:CloseParen, :OpenStaple, :OpenParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:QualifiedIdentifier, 3]}, {[:Dot, :OpenStaple, :Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 5]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 1]}, {}, {}, {}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 1]}, {[:CloseBrace]=>[:BlockStatements, 0]}, {[:CloseParen]=>[:Assignment, 3]}, {[:CloseParen, :Equals]=>[:SubExpression, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Primary, 3]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 3]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 5]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:Semicolon, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selector, 3]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 4]}, {}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selector, 3]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Selectors, 0]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Arguments, 3]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 2]}, {}, {[:Semicolon]=>[:VariableDeclarator, 5]}, {}, {}, {[:Semicolon]=>[:ForInit, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 2]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 2]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 4]}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Selectors, 0]}, {}, {[:CloseParen]=>[:ForUpdate, 1]}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :OpenStaple, :Equals]=>[:Term, 6]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:ArrayCreator, 3]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 5]}, {[:Dot, :OpenStaple, :CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:ArrayCreator, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 7]}, {}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 3]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Block, 3]}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 5]}, {}, {}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseStaple, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Comma, :Equals]=>[:Term, 6]}, {}, {}, {}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:CloseParen, :LazyOr, :LazyAnd, :EagerOr, :EagerAnd, :Equality, :NotEqual, :LessThan, :GreaterThan, :LessOrEqual, :GreaterOrEqual, :Plus, :Minus, :Multiply, :Divide, :Modulo, :Instanceof, :Equals]=>[:Term, 6]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 8]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 5]}, {[:CloseParen]=>[:ForUpdate, 0]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 5]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace]=>[:Statement, 9]}, {}, {}, {[:CloseParen]=>[:ForUpdate, 0]}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 7]}, {}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 8]}, {}, {[:Identifier, :OpenBrace, :If, :For, :While, :Return, :Semicolon, :Byte, :Char, :Int, :Boolean, :Short, :OpenParen, :Not, :Minus, :This, :New, :IntegerLiteral, :CharacterLiteral, :StringLiteral, :BooleanLiteral, :NullLiteral, :CloseBrace, :Else]=>[:Statement, 9]}], :transitions=>[{:CompilationUnit=>1, :ImportDeclarations=>2, :Package=>3, :ImportDeclaration=>4, :Import=>5}, {:EndProgram=>6}, {:TypeDeclaration=>7, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {:QualifiedIdentifier=>17, :Identifier=>18}, {:ImportDeclarations=>19, :ImportDeclaration=>4, :Import=>5}, {:QualifiedImportIdentifier=>20, :Identifier=>21}, {}, {}, {:ClassDeclaration=>22, :InterfaceDeclaration=>23, :Class=>24, :Interface=>25}, {}, {:Modifiers=>26, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {}, {}, {:Semicolon=>27}, {:Dot=>28}, {}, {:Semicolon=>29}, {:Dot=>30}, {}, {}, {:Identifier=>31}, {:Identifier=>32}, {}, {:ImportDeclarations=>33, :ImportDeclaration=>4, :Import=>5}, {:QualifiedIdentifier=>34, :Identifier=>18}, {}, {:QualifiedImportIdentifier=>35, :Multiply=>36, :Identifier=>21}, {:ClassBody=>37, :Extends=>38, :Implements=>39, :OpenBrace=>40}, {:InterfaceBody=>41, :Extends=>42, :OpenBrace=>43}, {:TypeDeclaration=>44, :Modifiers=>8, :Semicolon=>9, :Modifier=>10, :Public=>11, :Protected=>12, :Static=>13, :Abstract=>14, :Final=>15, :Native=>16}, {}, {}, {}, {}, {:QualifiedIdentifier=>45, :Identifier=>46}, {:TypeList=>47, :QualifiedIdentifier=>48, :Identifier=>49}, {:ClassBodyDeclarations=>50, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:TypeList=>61, :QualifiedIdentifier=>48, :Identifier=>49}, {:InterfaceBodyDeclarations=>62, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:ClassBody=>66, :Implements=>67, :OpenBrace=>40}, {:Dot=>68}, {:ClassBody=>69, :OpenBrace=>40}, {:Comma=>70}, {:Dot=>71}, {:CloseBrace=>72}, {:ClassBodyDeclarations=>73, :ClassBodyDeclaration=>51, :Semicolon=>52, :Modifiers=>53, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>74, :Void=>75, :Identifier=>76, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {:Modifiers=>85, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {}, {}, {}, {}, {}, {:InterfaceBody=>86, :OpenBrace=>43}, {:CloseBrace=>87}, {:InterfaceBodyDeclarations=>88, :InterfaceBodyDeclaration=>63, :Semicolon=>64, :Modifiers=>65, :Modifier=>54, :Public=>55, :Protected=>56, :Static=>57, :Abstract=>58, :Final=>59, :Native=>60}, {}, {:Type=>89, :Void=>90, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {:TypeList=>92, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>93, :Identifier=>46}, {}, {:TypeList=>94, :QualifiedIdentifier=>48, :Identifier=>49}, {:QualifiedIdentifier=>95, :Identifier=>49}, {}, {}, {:Identifier=>96}, {:Identifier=>97}, {:ConstructorDeclaratorRest=>98, :Dot=>99, :FormalParameters=>100, :OpenParen=>101}, {}, {:OpenStaple=>102}, {:OpenStaple=>103}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:Identifier=>104}, {:Identifier=>105}, {:Dot=>99}, {:ClassBody=>106, :OpenBrace=>40}, {}, {}, {}, {:Semicolon=>107, :Equals=>108, :MethodDeclaratorRest=>109, :FormalParameters=>110, :OpenParen=>111}, {:MethodDeclaratorRest=>112, :FormalParameters=>110, :OpenParen=>111}, {}, {:QualifiedIdentifier=>113, :Identifier=>91}, {:MethodBody=>114, :Block=>115, :OpenBrace=>116}, {:CloseParen=>117, :FormalParameterList=>118, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {:CloseStaple=>121}, {:CloseStaple=>122}, {:InterfaceMemberDeclRest=>123, :FormalParameters=>124, :OpenParen=>125}, {:InterfaceMemberDeclRest=>126, :FormalParameters=>124, :OpenParen=>125}, {}, {}, {:Expression=>127, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:MethodBody=>146, :Semicolon=>147, :Block=>115, :OpenBrace=>116}, {:CloseParen=>148, :FormalParameterList=>149, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {}, {}, {}, {:BlockStatements=>150, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :ArrayType=>77, :QualifiedIdentifier=>162, :BasicType=>79, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Identifier=>164, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:CloseParen=>165}, {:Comma=>166}, {:Identifier=>167}, {}, {}, {}, {:Semicolon=>168}, {:CloseParen=>169, :FormalParameterList=>170, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {:Semicolon=>171}, {}, {:Equals=>172}, {:Infixop=>173, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>190, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>191, :BasicType=>192, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>214, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {:OpenStaple=>218, :Arguments=>219, :OpenParen=>220}, {}, {}, {}, {:Creator=>221, :BasicType=>222, :QualifiedIdentifier=>223, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>230}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>231}, {:CloseBrace=>232}, {:BlockStatements=>233, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :ArrayType=>77, :QualifiedIdentifier=>162, :BasicType=>79, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Identifier=>164, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {:VariableDeclarator=>234, :Identifier=>235}, {}, {:OpenParen=>236}, {:OpenParen=>237}, {:OpenParen=>238}, {:Semicolon=>239, :Expression=>240, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Semicolon=>241}, {}, {:OpenStaple=>242, :Arguments=>219, :OpenParen=>220}, {:BlockStatements=>243, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :ArrayType=>77, :QualifiedIdentifier=>162, :BasicType=>79, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Identifier=>164, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Dot=>244}, {}, {:FormalParameterList=>245, :FormalParameter=>119, :Type=>120, :ArrayType=>77, :QualifiedIdentifier=>78, :BasicType=>79, :Identifier=>91, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84}, {}, {}, {}, {:CloseParen=>246}, {}, {:Expression=>247, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:SubExpression=>248, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {:CloseParen=>249, :OpenStaple=>250}, {:CloseParen=>251, :OpenStaple=>252}, {}, {:Equals=>253}, {}, {}, {}, {}, {}, {:Infixop=>254, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>255, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Expression=>256, :BasicType=>257, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>258, :Selector=>259, :Dot=>260, :OpenStaple=>261}, {:OpenStaple=>262, :Arguments=>263, :OpenParen=>264}, {}, {:Creator=>265, :BasicType=>266, :QualifiedIdentifier=>267, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>268}, {}, {}, {}, {}, {}, {}, {:Selectors=>269, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {:Identifier=>270}, {:Expression=>271, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Expression=>288, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Selectors=>289, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {:CloseParen=>290, :Expressions=>291, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>309, :OpenStaple=>310}, {:ArrayCreator=>311, :Arguments=>312, :OpenStaple=>310, :OpenParen=>220}, {}, {}, {}, {}, {}, {:Dot=>313}, {:QualifiedIdentifier=>314, :Identifier=>140}, {}, {}, {}, {:Semicolon=>315}, {:Equals=>316, :OpenStaple=>317}, {:Expression=>318, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:ForInit=>326, :Expression=>327, :Type=>328, :Assignment=>128, :SubExpression=>129, :ArrayType=>77, :QualifiedIdentifier=>162, :BasicType=>79, :Term=>130, :Identifier=>164, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>329, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Semicolon=>330}, {}, {:CloseStaple=>121, :Expression=>288, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:CloseBrace=>331}, {:QualifiedIdentifier=>332, :Identifier=>164}, {}, {}, {}, {}, {:Term=>333, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseStaple=>334}, {:Term=>335, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseStaple=>336}, {:Expression=>337, :Assignment=>193, :SubExpression=>194, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:SubExpression=>338, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:CloseParen=>339, :OpenStaple=>340}, {:CloseParen=>341, :OpenStaple=>342}, {}, {:Selectors=>343, :Selector=>259, :Dot=>260, :OpenStaple=>261}, {:Identifier=>344}, {:Expression=>345, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Expression=>346, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Selectors=>347, :Selector=>259, :Dot=>260, :OpenStaple=>261}, {:CloseParen=>348, :Expressions=>349, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>350, :OpenStaple=>351}, {:ArrayCreator=>352, :Arguments=>353, :OpenStaple=>351, :OpenParen=>264}, {:QualifiedIdentifier=>354, :Identifier=>208}, {}, {:Arguments=>355, :OpenParen=>220}, {:CloseStaple=>356}, {}, {:Equals=>357}, {:Infixop=>358, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>359, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Expression=>360, :BasicType=>361, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>362, :Selector=>363, :Dot=>364, :OpenStaple=>365}, {:OpenStaple=>366, :Arguments=>367, :OpenParen=>368}, {}, {:Creator=>369, :BasicType=>370, :QualifiedIdentifier=>371, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>372}, {}, {}, {}, {}, {}, {:CloseStaple=>373}, {}, {}, {:CloseParen=>374}, {:Comma=>375}, {}, {:Equals=>376}, {:Infixop=>377, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>378, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:Expression=>379, :BasicType=>380, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>381, :Selector=>382, :Dot=>383, :OpenStaple=>384}, {:OpenStaple=>385, :Arguments=>386, :OpenParen=>387}, {}, {:Creator=>388, :BasicType=>389, :QualifiedIdentifier=>390, :Byte=>224, :Char=>225, :Int=>226, :Boolean=>227, :Short=>228, :Identifier=>229}, {}, {:Dot=>391}, {}, {}, {}, {}, {}, {}, {:CloseStaple=>392, :Expression=>393, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {}, {}, {:QualifiedIdentifier=>394, :Identifier=>229}, {}, {}, {:Expression=>395, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseStaple=>396}, {:CloseParen=>397}, {}, {:Equals=>398}, {:Infixop=>399, :LazyOr=>174, :LazyAnd=>175, :EagerOr=>176, :EagerAnd=>177, :Equality=>178, :NotEqual=>179, :LessThan=>180, :GreaterThan=>181, :LessOrEqual=>182, :GreaterOrEqual=>183, :Plus=>184, :Minus=>185, :Multiply=>186, :Divide=>187, :Modulo=>188, :Instanceof=>189}, {:Term=>400, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Expression=>401, :BasicType=>402, :Assignment=>193, :SubExpression=>194, :Byte=>195, :Char=>196, :Int=>197, :Boolean=>198, :Short=>199, :Term=>200, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Selectors=>403, :Selector=>404, :Dot=>260, :OpenStaple=>261}, {:OpenStaple=>405, :Arguments=>406, :OpenParen=>264}, {:Semicolon=>407}, {}, {:VariableDeclarator=>408, :Identifier=>235}, {:CloseParen=>409}, {}, {}, {}, {}, {:CloseParen=>410}, {}, {:CloseParen=>411}, {}, {}, {:Term=>412, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>413}, {:Term=>414, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>415}, {}, {:Arguments=>416, :OpenParen=>264}, {:CloseStaple=>417}, {:CloseStaple=>418}, {}, {}, {:CloseParen=>419}, {}, {:CloseStaple=>420, :Expression=>421, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {}, {}, {}, {}, {}, {:Expression=>422, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:SubExpression=>423, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {}, {:CloseParen=>424, :OpenStaple=>425}, {:CloseParen=>426, :OpenStaple=>427}, {}, {:Selectors=>428, :Selector=>363, :Dot=>364, :OpenStaple=>365}, {:Identifier=>429}, {:Expression=>430, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Expression=>431, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Selectors=>432, :Selector=>363, :Dot=>364, :OpenStaple=>365}, {:CloseParen=>433, :Expressions=>434, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>435, :OpenStaple=>436}, {:ArrayCreator=>437, :Arguments=>438, :OpenStaple=>436, :OpenParen=>368}, {:QualifiedIdentifier=>439, :Identifier=>282}, {:Selectors=>440, :Selector=>215, :Dot=>216, :OpenStaple=>217}, {}, {:Expressions=>441, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:Expression=>442, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:SubExpression=>443, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:CloseParen=>444, :OpenStaple=>445}, {:CloseParen=>446, :OpenStaple=>447}, {}, {:Selectors=>448, :Selector=>382, :Dot=>383, :OpenStaple=>384}, {:Identifier=>449}, {:Expression=>450, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Expression=>451, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Selectors=>452, :Selector=>382, :Dot=>383, :OpenStaple=>384}, {:CloseParen=>453, :Expressions=>454, :Expression=>292, :Assignment=>293, :SubExpression=>294, :Term=>295, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {:ArrayCreator=>455, :OpenStaple=>456}, {:ArrayCreator=>457, :Arguments=>458, :OpenStaple=>456, :OpenParen=>387}, {:QualifiedIdentifier=>459, :Identifier=>303}, {}, {:CloseStaple=>460}, {}, {}, {:Equals=>461}, {:Statement=>462, :Block=>463, :If=>464, :For=>465, :While=>466, :Return=>467, :Expression=>468, :Semicolon=>469, :OpenBrace=>470, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>471, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:SubExpression=>472, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:CloseParen=>473, :OpenStaple=>474}, {:CloseParen=>475, :OpenStaple=>476}, {}, {:Selectors=>477, :Selector=>404, :Dot=>260, :OpenStaple=>261}, {:Expression=>478, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Selectors=>479, :Selector=>404, :Dot=>260, :OpenStaple=>261}, {:Semicolon=>480, :Expression=>481, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:Statement=>482, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Term=>483, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Term=>484, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {:CloseParen=>485}, {}, {:CloseParen=>486}, {}, {}, {:Selectors=>487, :Selector=>259, :Dot=>260, :OpenStaple=>261}, {}, {}, {:CloseStaple=>488}, {}, {}, {:Term=>489, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:CloseStaple=>490}, {:Term=>491, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:CloseStaple=>492}, {}, {:Arguments=>493, :OpenParen=>368}, {:CloseStaple=>494}, {:CloseStaple=>495}, {}, {}, {:CloseParen=>496}, {}, {:CloseStaple=>497, :Expression=>498, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {}, {}, {}, {}, {}, {}, {}, {:Term=>499, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:CloseStaple=>500}, {:Term=>501, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:CloseStaple=>502}, {}, {:Arguments=>503, :OpenParen=>387}, {:CloseStaple=>504}, {:CloseStaple=>505}, {}, {}, {:CloseParen=>506}, {}, {:CloseStaple=>507, :Expression=>508, :Assignment=>272, :SubExpression=>273, :Term=>274, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {}, {}, {}, {}, {:Expression=>509, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Else=>510}, {}, {:OpenParen=>511}, {:OpenParen=>512}, {:OpenParen=>513}, {:Semicolon=>514, :Expression=>515, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Semicolon=>516}, {}, {:BlockStatements=>517, :BlockStatement=>151, :LocalVariableDeclarationStatement=>152, :Statement=>153, :Type=>154, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :ArrayType=>77, :QualifiedIdentifier=>162, :BasicType=>79, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Identifier=>164, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {:Term=>518, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>519}, {:Term=>520, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:CloseStaple=>521}, {}, {:CloseStaple=>522}, {}, {:ForUpdate=>523, :Expression=>524, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Semicolon=>525}, {}, {}, {}, {:Term=>526, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Term=>527, :TermModifier=>201, :OpenParen=>202, :Primary=>203, :QualifiedIdentifier=>204, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {}, {}, {:CloseParen=>528}, {}, {:CloseParen=>529}, {}, {}, {:Selectors=>530, :Selector=>363, :Dot=>364, :OpenStaple=>365}, {}, {}, {:CloseStaple=>531}, {}, {:CloseParen=>532}, {}, {:CloseParen=>533}, {}, {}, {:Selectors=>534, :Selector=>382, :Dot=>383, :OpenStaple=>384}, {}, {}, {:CloseStaple=>535}, {}, {:Statement=>536, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>537, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:ForInit=>538, :Expression=>327, :Type=>328, :Assignment=>128, :SubExpression=>129, :ArrayType=>77, :QualifiedIdentifier=>162, :BasicType=>79, :Term=>130, :Identifier=>164, :Byte=>80, :Char=>81, :Int=>82, :Boolean=>83, :Short=>84, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Expression=>539, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Semicolon=>540}, {}, {:CloseBrace=>541}, {}, {:CloseParen=>542}, {}, {:CloseParen=>543}, {:Selectors=>544, :Selector=>404, :Dot=>260, :OpenStaple=>261}, {:CloseParen=>545}, {}, {:ForUpdate=>546, :Expression=>524, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {}, {:Term=>547, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {:Term=>548, :TermModifier=>275, :OpenParen=>276, :Primary=>277, :QualifiedIdentifier=>278, :Not=>135, :Minus=>136, :This=>279, :New=>280, :Literal=>281, :Identifier=>282, :IntegerLiteral=>283, :CharacterLiteral=>284, :StringLiteral=>285, :BooleanLiteral=>286, :NullLiteral=>287}, {}, {}, {:Term=>549, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {:Term=>550, :TermModifier=>296, :OpenParen=>297, :Primary=>298, :QualifiedIdentifier=>299, :Not=>135, :Minus=>136, :This=>300, :New=>301, :Literal=>302, :Identifier=>303, :IntegerLiteral=>304, :CharacterLiteral=>305, :StringLiteral=>306, :BooleanLiteral=>307, :NullLiteral=>308}, {}, {}, {}, {:CloseParen=>551}, {:Semicolon=>552}, {:CloseParen=>553}, {}, {}, {:Term=>554, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Term=>555, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Statement=>556, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>557}, {}, {}, {}, {}, {:Statement=>558, :Block=>463, :If=>464, :For=>465, :While=>466, :Return=>467, :Expression=>468, :Semicolon=>469, :OpenBrace=>470, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Semicolon=>559, :Expression=>560, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Statement=>561, :Block=>463, :If=>464, :For=>465, :While=>466, :Return=>467, :Expression=>468, :Semicolon=>469, :OpenBrace=>470, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}, {}, {}, {:Statement=>562, :Block=>155, :If=>156, :For=>157, :While=>158, :Return=>159, :Expression=>160, :Semicolon=>161, :OpenBrace=>163, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:Else=>563}, {:ForUpdate=>564, :Expression=>524, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {:Semicolon=>565}, {}, {}, {:Statement=>566, :Block=>463, :If=>464, :For=>465, :While=>466, :Return=>467, :Expression=>468, :Semicolon=>469, :OpenBrace=>470, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>567}, {:ForUpdate=>568, :Expression=>524, :Assignment=>319, :SubExpression=>320, :Term=>321, :TermModifier=>322, :OpenParen=>323, :Primary=>324, :QualifiedIdentifier=>325, :Not=>135, :Minus=>136, :This=>205, :New=>206, :Literal=>207, :Identifier=>208, :IntegerLiteral=>209, :CharacterLiteral=>210, :StringLiteral=>211, :BooleanLiteral=>212, :NullLiteral=>213}, {}, {:Statement=>569, :Block=>463, :If=>464, :For=>465, :While=>466, :Return=>467, :Expression=>468, :Semicolon=>469, :OpenBrace=>470, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {:CloseParen=>570}, {}, {:Statement=>571, :Block=>463, :If=>464, :For=>465, :While=>466, :Return=>467, :Expression=>468, :Semicolon=>469, :OpenBrace=>470, :Assignment=>128, :SubExpression=>129, :Term=>130, :TermModifier=>131, :OpenParen=>132, :Primary=>133, :QualifiedIdentifier=>134, :Not=>135, :Minus=>136, :This=>137, :New=>138, :Literal=>139, :Identifier=>140, :IntegerLiteral=>141, :CharacterLiteral=>142, :StringLiteral=>143, :BooleanLiteral=>144, :NullLiteral=>145}, {}]}
